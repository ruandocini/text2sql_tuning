{
    "0": "\nSELECT MAX(f.amounts_18) AS highest_eligible_free_rate\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE s.countyofficeofeducation = 'Alameda' AND f.agegroup_17 = 'K-12'\n\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT s.schoolnames_7, f.amounts_18\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE f.agegroup_17 = '5-17' AND s.schooltypes_28 = 'Continuation'\nORDER BY f.amounts_18 ASC\nLIMIT 3;\n\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT T3.zipcodevariants_15 \nFROM schools AS T3 \nJOIN frpm AS T1 ON T3.productcode_0 = T1.productcodes_0 \nWHERE T3.countyofficeofeducation_26 = 'Fresno County Office of Education' AND T3.tradtype_29 = 'Charter'\n\n\t----- bird -----\tcalifornia_schools",
    "3": "\nWITH frpm_count AS (\n    SELECT productcodes_0, COUNT(*) AS count FROM frpm WHERE agegroup_17 = 'K-12' GROUP BY productcodes_0 ORDER BY count DESC LIMIT 1\n),\nschool_info AS (\n    SELECT schoolnames_6, address_7, address_8, cityname_14, statecode_16, zipcodevariants_15 FROM schools WHERE productcode_0 = (SELECT productcodes_0 FROM frpm_count)\n)\nSELECT CONCAT(address_7, ', ', cityname_14, ' ', statecode_16, ' ', zipcodevariants_15) AS full_address FROM school_info\n\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT s.phone_numbers_17 FROM schools AS s\nJOIN frpm AS f ON s.productcode_0 = f.productcodes_0\nWHERE f.fundingtype_14 = 'Direct Charter' AND s.datecolumn_20 > '2000-01-01'\n\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(s.productcode_0) \nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.tradtype = 'Virtual' AND (ss.scoreslist_6 + ss.valueslist_8) / 2 < 400\n\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT s.schoolnames_6, frpm.educationagencyname_6 \nFROM schools s\nJOIN satscores sat ON s.productcode_0 = sat.productcodes_0\nJOIN frpm ON s.productcode_0 = frpm.productcodes_0\nWHERE sat.numericdata_5 > 500 AND (frpm.schooltypes_9 LIKE '%magnet%' OR frpm.educationauthoritytype_8 LIKE '%magnet%')\n\n\t----- bird -----\tcalifornia_schools",
    "7": "\nWITH school_test_takers AS (\n    SELECT productcodes_0, SUM(CASE WHEN numericdata_5 > 1500 THEN 1 ELSE 0 END) as test_taker_count\n    FROM satscores\n    GROUP BY productcodes_0\n),\nranked_schools AS (\n    SELECT productcodes_0, RANK() OVER (ORDER BY test_taker_count DESC) as rank\n    FROM school_test_takers\n)\nSELECT t3.phone_numbers_17\nFROM ranked_schools t1\nJOIN satscores t2 ON t1.productcodes_0 = t2.productcodes_0\nJOIN schools t3 ON t2.productcodes_0 = t3.productcode_0\nWHERE t1.rank = 1;\n\n\t----- bird -----\tcalifornia_schools",
    "8": "\nWITH frpm_count AS (\n    SELECT productcodes_0, COUNT(*) AS count FROM frpm WHERE agegroup_17 = 'K-12' GROUP BY productcodes_0 ORDER BY count DESC LIMIT 1\n),\nsat_takers AS (\n    SELECT s.productcodes_0, ss.numericdata_5 \n    FROM schools s\n    JOIN satscores ss ON s.productcode_0 = ss.productcodes_0\n)\nSELECT sat_takers.numericdata_5 \nFROM frpm_count fc\nJOIN sat_takers ON fc.productcodes_0 = sat_takers.productcodes_0;\n\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(schools.productcode_0) \nFROM schools\nJOIN satscores ON schools.productcode_0 = satscores.productcodes_0\nJOIN frpm ON schools.productcode_0 = frpm.productcodes_0\nWHERE satscores.numericdata_5 > 560 AND frpm.fundingtype_14 = 'Charter'\n\n\t----- bird -----\tcalifornia_schools",
    "10": "\nWITH HighestReadingScore AS (\n    SELECT productcodes_0, AVG(numericdata_5) as avg_reading_score\n    FROM satscores\n    WHERE statuscodes_1 = 'R'\n    GROUP BY productcodes_0\n    ORDER BY avg_reading_score DESC\n    LIMIT 1\n),\nFRPMCount AS (\n    SELECT productcodes_0, SUM(amounts_18) as frpm_count\n    FROM frpm\n    JOIN schools ON frpm.productcodes_0 = schools.productcode_0\n    WHERE agegroup_17 BETWEEN '5-17' AND '5-17'\n    GROUP BY productcodes_0\n)\nSELECT FRPMCount.frpm_count\nFROM FRPMCount\nJOIN HighestReadingScore ON FRPMCount.productcodes_0 = HighestReadingScore.productcodes_0;\n\n\t----- bird -----\tcalifornia_schools",
    "11": "\nSELECT s.productcode_0\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nGROUP BY s.productcode_0\nHAVING SUM(f.amounts_18) > 500\n\n\t----- bird -----\tcalifornia_schools",
    "12": "\nSELECT MAX(frm.valueslist_21) AS highest_eligible_free_rate\nFROM frpm frm\nJOIN satscores ss ON frm.productcodes_0 = ss.productcodes_0\nJOIN schools sch ON frm.productcodes_0 = sch.productcode_0\nWHERE (ss.numericdata_5 / CAST(ss.scoreslist_6 AS REAL)) > 0.3 AND frm.agegroup_17 BETWEEN '5' AND '17'\n\n\t----- bird -----\tcalifornia_schools",
    "13": "\nSELECT s.phone_numbers_17\nFROM schools s\nJOIN (\n    SELECT productcodes_0, numericdata_5 / CAST(valueslist_9 AS REAL) * 100 AS excellence_rate\n    FROM satscores\n    WHERE valueslist_9 IS NOT NULL AND numericdata_5 IS NOT NULL\n    ORDER BY excellence_rate DESC\n    LIMIT 3\n) top_sats ON s.productcode_0 = top_sats.productcodes_0\n\n\t----- bird -----\tcalifornia_schools",
    "14": "\nSELECT s.productcode_0 AS NCES_School_Identification_Number, SUM(f.amounts_18) AS Total_Enrollment_Ages_5_17\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE f.agegroup_17 = 'Ages 5-17'\nGROUP BY s.productcode_0\nORDER BY Total_Enrollment_Ages_5_17 DESC\nLIMIT 5;\n\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT schooldistrictname_3, AVG(numericdata_5) AS avg_reading_score\nFROM satscores\nJOIN schools ON satscores.productcodes_0 = schools.productcode_0\nWHERE status_3 = 'Active' AND scoreslist_6 IS NOT NULL\nGROUP BY schooldistrictname_3\nORDER BY avg_reading_score DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "16": "\nSELECT COUNT(s.productcodes_0) \nFROM satscores AS s\nJOIN schools AS sc ON s.productcodes_0 = sc.productcode_0\nWHERE s.numericdata_5 < 100 AND sc.citynames_9 = 'Alameda'\n\n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT s.productcode_0 AS charter_number\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE ss.numericdata_5 = 499 AND ss.statuscodes_1 = 'Writing'\nGROUP BY s.productcode_0, ss.numericdata_5\n\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(s.productcode_0) \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nJOIN satscores sc ON s.productcode_0 = sc.productcodes_0\nWHERE s.statecode_16 = 'CA'\nAND s.countyofficeofeducation = 'Contra Costa'\nAND f.fundingtype = 'Directly Funded'\nAND sc.numericdata_5 <= 250;\n\n\t----- bird -----\tcalifornia_schools",
    "19": "\nWITH SchoolScores AS (\n    SELECT s.productcode_0, AVG(ss.numericdata_5) AS avg_math_score\n    FROM schools s\n    JOIN satscores ss ON s.productcode_0 = ss.productcodes_0\n    WHERE ss.statuscodes_1 = 'Math'\n    GROUP BY s.productcode_0\n),\nTopSchool AS (\n    SELECT productcode_0, MAX(avg_math_score) OVER () AS max_avg_math_score\n    FROM SchoolScores\n)\nSELECT s.phone_numbers_17\nFROM schools s\nJOIN TopSchool ts ON s.productcode_0 = ts.productcode_0\nWHERE s.productcode_0 IN (SELECT productcode_0 FROM SchoolScores WHERE avg_math_score = ts.max_avg_math_score);\n\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(*)\nFROM schools\nWHERE statecode_16 = 'Amador'\nAND educationlevelrange_33 = '9-12';\n\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(s.productcode_0) \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.citynames_9 = 'Los Angeles' AND f.mealprovision_11 IN ('Free', 'Reduced') AND (f.amounts_18 > 500 AND f.amounts_18 < 700)\nGROUP BY s.productcode_0\n\n\t----- bird -----\tcalifornia_schools",
    "22": "\nSELECT s.schoolnames_6, ss.numericdata_5 AS number_of_test_takers\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.cityname_14 = 'Contra Costa'\nORDER BY ss.numericdata_5 DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT s.schoolnames_6, CONCAT(s.address_7, ', ', s.cityname_14, ', ', s.statecode_16, ' ', s.zipcodevariants_15) AS full_address\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE (f.agegroup_17 = 'K-12' AND f.amounts_18 IS NOT NULL)\n   OR (f.agegroup_17 = 'Ages 5-17' AND f.amounts_18 IS NOT NULL)\nGROUP BY s.schoolnames_6, full_address\nHAVING ABS(SUM(CASE WHEN f.agegroup_17 = 'K-12' THEN f.amounts_18 ELSE 0 END) - SUM(CASE WHEN f.agegroup_17 = 'Ages 5-17' THEN f.amounts_18 ELSE 0 END)) > 30\n\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT s.schoolnames_6 \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nJOIN satscores sat ON s.productcode_0 = sat.productcodes_0\nWHERE f.mealprovision_11 > 0.1 AND sat.numericdata_5 >= 1500\n\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT s.schoolnames_6, frpm.fundingtype_14 \nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nJOIN frpm ON s.productcode_0 = frpm.productcodes_0\nWHERE s.cityname_14 = 'Riverside'\nGROUP BY s.schoolnames_6, frpm.fundingtype_14\nHAVING AVG(ss.numericdata_5) > 400\n\n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT s.schoolnames_6, CONCAT(s.address_7, ', ', s.citynames_9, ', ', s.statecode_11) AS full_address\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.citynames_9 = 'Monterey' AND s.educationlevelrange_33 LIKE '%High%' \nAND (f.agegroup_17 = '15-17' OR f.agegroup_17 = '15 to 17') \nAND f.mealprovision_11 IN ('Free', 'Reduced Price')\nGROUP BY s.productcode_0, s.schoolnames_6, full_address\nHAVING SUM(f.amounts_18) > 800;\n\n\t----- bird -----\tcalifornia_schools",
    "27": "\nSELECT s.schoolnames_6, ss.numericdata_5 AS writing_score, s.phone_numbers_17\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE (s.datecolumn_20 > '1991-12-31' OR s.lastupdatedate_21 < '2000-01-01')\nAND ss.statuscodes_1 = 'Writing'\n\n\t----- bird -----\tcalifornia_schools",
    "28": "\nWITH avg_diff AS (\n    SELECT AVG(K12_enrollment - K15_17_enrollment) as avg_diff_value\n    FROM (\n        SELECT \n            s.schoolnames_6,\n            fr.amounts_18 as K12_enrollment,\n            COALESCE((SELECT amounts_18 FROM frpm WHERE productcodes_0 = s.productcode_0 AND agegroup_17 = '15-17'), 0) as K15_17_enrollment\n        FROM schools s\n        JOIN frpm fr ON s.productcode_0 = fr.productcodes_0\n        WHERE fr.fundingtype_14 = 'Locally Funded'\n    ) subquery\n),\nschool_diff AS (\n    SELECT \n        s.schoolnames_6,\n        fr.amounts_18 as K12_enrollment,\n        COALESCE((SELECT amounts_18 FROM frpm WHERE productcodes_0 = s.productcode_0 AND agegroup_17 = '15-17'), 0) as K15_17_enrollment,\n        (fr.amounts_18 - COALESCE((SELECT amounts_18 FROM frpm WHERE productcodes_0 = s.productcode_0 AND agegroup_17 = '15-17'), 0)) as diff\n    FROM schools s\n    JOIN frpm fr ON s.productcode_0 = fr.productcodes_0\n    WHERE fr.fundingtype_14 = 'Locally Funded'\n)\nSELECT sd.schoolnames_6, s.tradtype_29 AS doc_type\nFROM school_diff sd\nJOIN schools s ON sd.schoolnames_6 = s.schoolnames_6\nWHERE (sd.K12_enrollment - COALESCE((SELECT amounts_18 FROM frpm WHERE productcodes_0 = s.productcode_0 AND agegroup_17 = '15-17'), 0)) > (SELECT avg_diff_value FROM avg_diff)\n\n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT s.datecolumn_20 FROM schools s JOIN frpm f ON s.productcode_0 = f.productcodes_0 WHERE f.agegroup_17 = 'First-through-twelfth-grade' ORDER BY f.amounts_18 DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "30": "\nSELECT s.citynames_9, SUM(f.amounts_18) AS total_enrollment\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE f.agegroup_17 BETWEEN 'Grades 1-5' AND 'Grade 12'\nGROUP BY s.citynames_9\nORDER BY total_enrollment ASC\nLIMIT 5;\n\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT s.schoolnames_6, f.amounts_18 AS eligible_free_rate\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.educationlevelrange_33 BETWEEN 'Grades 1-12' AND 'Grades 1-12'\nORDER BY (\n    SELECT COUNT(*)\n    FROM satscores ss\n    WHERE ss.productcodes_0 = s.productcode_0\n) DESC\nLIMIT 9, 2;\n\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT s.schoolnames_6, frpm.mealprovision_11, frpm.amounts_18\nFROM schools s\nJOIN frpm ON s.productcode_0 = frpm.productcodes_0\nWHERE s.statuscode_35 = '66' AND frpm.agegroup_17 = 'Grades 1-12'\nORDER BY frpm.amounts_18 DESC\nLIMIT 5;\n\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT s.schoolnames_6, s.websites_19 \nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE mealprovision_11 = 'Free' AND amounts_18 BETWEEN 1900 AND 2000 AND agegroup_17 = '5-17'\n\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT s.schoolnames_6, fr.amounts_18 \nFROM frpm AS fr\nJOIN schools AS sc ON fr.productcodes_0 = sc.productcode_0\nWHERE sc.participantname_42 = 'Kacey Gibson' AND fr.agegroup_17 BETWEEN 5 AND 17 AND fr.fundingtype_14 = 'Free'\n\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT s.emailaddresses_41 \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.schooltypes_28 = 'Chartered'\nORDER BY f.amounts_18 ASC\nLIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "36": "\nWITH RankedSchools AS (\n    SELECT \n        s.productcode_0,\n        ss.schoolnames_2,\n        SUM(ss.numericdata_5) AS total_test_takers,\n        SUM(CASE WHEN (ss.valueslist_8 + ss.valueslist_9 + COALESCE(ss.value_list_10, 0)) >= 1500 THEN 1 ELSE 0 END) AS qualified_test_takers\n    FROM \n        satscores ss\n    JOIN \n        schools s ON ss.productcodes_0 = s.productcode_0\n    GROUP BY \n        s.productcode_0,\n        ss.schoolnames_2\n),\nMaxQualifiedTestTakers AS (\n    SELECT \n        productcode_0, \n        schoolnames_2, \n        qualified_test_takers\n    FROM \n        RankedSchools\n    ORDER BY \n        qualified_test_takers DESC\n    LIMIT 1\n)\nSELECT \n    s.schoolnames_6,\n    CONCAT(s.firstname_42, ' ', s.lastname_43) AS full_name_administrator\nFROM \n    MaxQualifiedTestTakers mqt\nJOIN \n    schools s ON mqt.productcode_0 = s.productcode_0;\n\n\t----- bird -----\tcalifornia_schools",
    "37": "\nSELECT s.address_7, s.citynames_9, s.zipcodevariants_10, s.statecode_11 \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE f.amounts_18 = (SELECT MIN(amounts_18) FROM frpm)\n\n\t----- bird -----\tcalifornia_schools",
    "38": "\nSELECT s.websites_19 \nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.statecode_16 = 'CA' AND s.citynames_9 LIKE '%Los Angeles%' AND ss.numericdata_5 BETWEEN 2000 AND 3000\n\n\t----- bird -----\tcalifornia_schools",
    "39": "\nSELECT AVG(numericdata_5) \nFROM satscores s\nJOIN schools sc ON s.productcodes_0 = sc.productcode_0\nWHERE sc.citynames_9 = 'Fresno' AND sc.lastupdatedate_21 BETWEEN '1980-01-01' AND '1980-12-31'\n\n\t----- bird -----\tcalifornia_schools",
    "40": "\nWITH school_scores AS (\n    SELECT s.productcode_0, ss.numericdata_5, s.schoolnames_6, s.location_4\n    FROM schools s\n    JOIN satscores ss ON s.productcode_0 = ss.productcodes_0\n    WHERE s.location_4 LIKE '%Fresno Unified%' AND ss.statuscodes_1 = 'Reading'\n), lowest_score_school AS (\n    SELECT productcode_0, MIN(numericdata_5) as min_reading_score\n    FROM school_scores\n    GROUP BY productcode_0\n)\nSELECT s.phone_numbers_17\nFROM schools s\nJOIN lowest_score_school lss ON s.productcode_0 = lss.productcode_0\nWHERE s.productcode_0 IN (SELECT productcode_0 FROM lowest_score_school WHERE min_reading_score = (SELECT MIN(min_reading_score) FROM lowest_score_school))\n\n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT s.schoolnames_6, AVG(ss.numericdata_5) AS average_reading_score\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.tradtype = 'Virtual'\nGROUP BY s.schoolnames_6\nORDER BY average_reading_score DESC\nLIMIT 5\n\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT s.schooltypes_28, ss.numericdata_5\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE ss.scoreslist_6 IS NOT NULL\nORDER BY CAST(ss.scoreslist_6 AS REAL) DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "43": "\nWITH school_scores AS (\n    SELECT s.productcode_0, AVG(numericdata_5) as avg_score\n    FROM schools s\n    JOIN satscores ss ON s.productcode_0 = ss.productcodes_0\n    GROUP BY s.productcode_0\n),\nlowest_avg_school AS (\n    SELECT productcode_0\n    FROM school_scores\n    ORDER BY avg_score ASC\n    LIMIT 1\n)\nSELECT s.schoolnames_6, c.countyofficeofeducation_26\nFROM lowest_avg_school las\nJOIN schools s ON las.productcode_0 = s.productcode_0\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0;\n\n\t----- bird -----\tcalifornia_schools",
    "44": "\nWITH SchoolTestTakers AS (\n    SELECT s.productcode_0, COUNT(*) AS num_test_takers\n    FROM satscores ss\n    JOIN schools s ON ss.productcodes_0 = s.productcode_0\n    WHERE (ss.numericdata_5 + ss.scoreslist_6) >= 1500\n    GROUP BY s.productcode_0\n),\nMaxTestTakers AS (\n    SELECT MAX(num_test_takers) AS max_num_test_takers\n    FROM SchoolTestTakers\n)\nSELECT AVG(ss.scoreslist_6::float) AS avg_writing_score, s.cityname_14 AS city_name\nFROM satscores ss\nJOIN schools s ON ss.productcodes_0 = s.productcode_0\nJOIN SchoolTestTakers stt ON s.productcode_0 = stt.productcode_0\nWHERE stt.num_test_takers = (SELECT max_num_test_takers FROM MaxTestTakers)\nGROUP BY s.cityname_14;\n\n\t----- bird -----\tcalifornia_schools",
    "45": "\nSELECT s.schoolnames_6, AVG(ss.numericdata_5) AS average_writing_score\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.participantname_42 = 'Ricci Ulrich'\nGROUP BY s.schoolnames_6;\n\n\t----- bird -----\tcalifornia_schools",
    "46": "\nSELECT s.statecode_16, SUM(f.amounts_18) AS total_enrollees\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE s.schooltypes_28 LIKE '%special%' AND f.agegroup_17 BETWEEN 'Grade 1' AND 'Grade 12'\nGROUP BY s.statecode_16\nORDER BY total_enrollees DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(CASE WHEN EXTRACT(YEAR FROM s.datecolumn_20) = 1980 THEN 1 ELSE 0 END) AS monthly_avg_opened_schools\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.countyofficeofeducation LIKE '%Alameda%' AND f.educationagencyname_6 LIKE '%Elementary School District%'\nGROUP BY EXTRACT(MONTH FROM s.datecolumn_20)\n\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT \n    SUM(CASE WHEN T3.educationauthoritytype = 'Unified School District' THEN 1 ELSE 0 END) * 1.0 / \n    SUM(CASE WHEN T3.educationauthoritytype = 'Elementary School District' THEN 1 ELSE 0 END) AS ratio\nFROM \n    schools AS T1\nJOIN \n    satscores AS T2 ON T1.productcode_0 = T2.productcodes_0\nJOIN \n    frpm AS T3 ON T1.productcode_0 = T3.productcodes_0\nWHERE \n    T1.countyofficeofeducation = 'Orange County'\n\n\t----- bird -----\tcalifornia_schools",
    "49": "\nSELECT s.schoolnames_6, s.lastupdatedate_21\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.status_3 = 'Closed'\nGROUP BY s.countyofficeofeducation_26, s.schoolnames_6, s.lastupdatedate_21\nORDER BY COUNT(s.productcode_0) DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "50": "\nWITH ranked_schools AS (\n    SELECT s.productcode_0, s.schoolnames_6, ss.numericdata_5\n    FROM schools s\n    JOIN satscores ss ON s.productcode_0 = ss.productcodes_0\n    WHERE ss.statuscodes_1 = 'Math'\n    ORDER BY ss.numericdata_5 DESC\n    LIMIT 1 OFFSET 5\n)\nSELECT ranked_schools.schoolnames_6, s.address_7, s.address_8\nFROM ranked_schools\nJOIN schools s ON ranked_schools.productcode_0 = s.productcode_0;\n\n\t----- bird -----\tcalifornia_schools",
    "51": "\nWITH LowestReadingScore AS (\n    SELECT productcodes_0, AVG(numericdata_5) as avg_reading_score\n    FROM satscores\n    GROUP BY productcodes_0\n    ORDER BY avg_reading_score ASC\n    LIMIT 1\n)\nSELECT schools.schoolnames_6, schools.address_7\nFROM LowestReadingScore\nJOIN schools ON LowestReadingScore.productcodes_0 = schools.productcode_0;\n\n\t----- bird -----\tcalifornia_schools",
    "52": "\nSELECT COUNT(s.productcode_0) \nFROM schools s\nJOIN satscores sat ON s.productcode_0 = sat.productcodes_0\nWHERE s.citynames_9 = 'Lakeport' AND (sat.valueslist_8 + sat.valueslist_9 + sat.value_list_10) >= 1500\n\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT COUNT(*) \nFROM satscores AS T1\nJOIN schools AS T2 ON T1.productcodes_0 = T2.productcode_0\nWHERE T2.citynames_9 = 'Fresno';\n\n\t----- bird -----\tcalifornia_schools",
    "54": "\nSELECT s.schoolnames_6, s.zipcodevariants_15 \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.userids_2 = (SELECT userids_3 FROM frpm WHERE participantname_42 = 'Avetik Atoian')\n\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT \n    (SUM(CASE WHEN schools.citynames_9 = 'Colusa' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN schools.citynames_9 = 'Humboldt' THEN 1 ELSE 0 END)) AS ratio\nFROM \n    schools\nJOIN \n    frpm ON schools.productcode_0 = frpm.productcodes_0\nWHERE \n    schools.statecode_16 = 'CA';\n\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.statecode_16 = 'CA' AND s.citynames_9 = 'San Joaquin' AND s.activityindicator_22 = 1\n\n\t----- bird -----\tcalifornia_schools",
    "57": "\nWITH ranked_scores AS (\n    SELECT productcodes_0, AVG(numericdata_5) as avg_writing_score\n    FROM satscores\n    WHERE statuscodes_1 = 'Writing'\n    GROUP BY productcodes_0\n    ORDER BY avg_writing_score DESC\n    LIMIT 1 OFFSET 332\n)\nSELECT t3.phone_numbers_17\nFROM ranked_scores AS t1\nJOIN schools AS t3 ON t1.productcodes_0 = t3.productcode_0;\n\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT s.schoolnames_6, s.phone_numbers_17 \nFROM schools s \nWHERE s.zipcodevariants_15 = '95203-3704'\n\n\t----- bird -----\tcalifornia_schools",
    "59": "\nSELECT s.websites_19 \nFROM schools s\nJOIN (\n    SELECT userids_2, emailaddresses_41 FROM schools WHERE participantname_42 IN ('Mike Larson', 'Dante Alvarez')\n) t ON s.userids_2 = t.userids_2\n\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT s.websites_19 FROM schools s JOIN frpm f ON s.productcode_0 = f.productcodes_0 WHERE s.schooltypes_28 = 'Partially Virtual' AND s.tradtype_29 = 'Chartered' AND s.citynames_9 = 'San Joaquin'\n\n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(s.productcode_0) \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.schooltypes_28 = 'Chartered' AND s.cityname_14 = 'Hickman' AND f.educationagencyname_6 LIKE '%Elementary School District%'\n\n\t----- bird -----\tcalifornia_schools",
    "62": "\nSELECT COUNT(DISTINCT s.productcode_0) \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.countyofficeofeducation = 'Los Angeles' AND s.tradtype != 'Chartered' AND f.mealprovision < 0.18\n\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT s.schoolnames_6 AS school_name, a.participantname_42 AS administrator_name, s.citynames_9 AS city\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nJOIN satscores sat ON s.productcode_0 = sat.productcodes_0\nJOIN (\n    SELECT productcode_0, participantname_42\n    FROM schools\n) a ON s.productcode_0 = a.productcode_0\nWHERE s.schooltypes_28 = 'Chartered' AND f.codeprefix_2 = '00D2'\n\n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.citynames_9 = 'Hickman' AND s.identifiercode_1 LIKE '%00D4%'\n\n\t----- bird -----\tcalifornia_schools",
    "65": "\nSELECT \n    (SUM(CASE WHEN T1.fundingtype_14 = 'Local' THEN 1 ELSE 0 END) * 100.0 / COUNT(T1.productcodes_0)) AS local_funded_ratio,\n    COUNT(T1.productcodes_0) AS total_charter_schools\nFROM \n    frpm AS T1\nJOIN \n    schools AS T2 ON T1.productcodes_0 = T2.productcode_0\nWHERE \n    T2.countyofficeofeducation LIKE '%Santa Clara%' AND T2.schooltypes IN ('Charter', 'Charter School')\n\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(*)\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.lastupdatedate BETWEEN '2000-01-01' AND '2005-12-31'\nAND s.countyofficeofeducation = 'Stanislaus'\nAND f.fundingtype = 'Direct Funding';\n\n\t----- bird -----\tcalifornia_schools",
    "67": "\nSELECT SUM(f.amounts_18) AS total_amount\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE f.academicyear_1 = '1989' AND s.citynames_9 = 'San Francisco' AND f.educationauthoritytype_8 = 'Community College District'\n\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT s.countyofficeofeducation, COUNT(*) AS closure_count\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE f.academicyear_1 BETWEEN '1980' AND '1989'\nAND s.statuscode_35 = 'CEA'\nGROUP BY s.countyofficeofeducation\nORDER BY closure_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "69": "\nSELECT s.productcode_0, s.identifiercode_1\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.schooltypes_28 = 'State Special Schools'\nAND f.fundingtype_14 LIKE '%Ownership Code%'\n\n\t----- bird -----\tcalifornia_schools",
    "70": "\nSELECT COUNT(CASE WHEN educationlevel_31 = 'District Community Day School' THEN 1 END) AS active_count, \n       COUNT(CASE WHEN statusvalues_36 = 0 AND educationlevel_31 = 'District Community Day School' THEN 1 END) AS closed_count\nFROM schools\nWHERE countyofficeofeducation_26 = 'Alpine'\nAND activityindicator_22 IN (1, 0)\n\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT DISTINCT s.productcode_0, s.schooldistrictname_3\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.citynames_9 = 'Fresno' AND f.mealprovision_11 != 'Magnet'\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "72": "\nSELECT SUM(amounts_18) AS total_students_enrolled\nFROM frpm\nWHERE agegroup_17 BETWEEN '5-17' AND '5-17'\nAND schoolnames_7 = 'State Special School'\nAND location_5 LIKE '%Fremont%'\nAND academicyear_1 = '2014-2015';\n\n\t----- bird -----\tcalifornia_schools",
    "73": "\nSELECT SUM(f.amounts_18) AS meal_count\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE s.schoolnames_6 = 'Youth Authority School'\nAND s.address_7 = 'PO Box 1040'\nAND f.agegroup_17 BETWEEN '5' AND '17'\nAND (f.mealprovision_11 = 'Free' OR f.mealprovision_11 = 'Reduced')\n\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT T3.educationlevelrange_33 FROM schools AS T1 JOIN frpm AS T2 ON T1.productcode_0 = T2.productcodes_0 JOIN satscores AS T3 ON T1.productcode_0 = T3.productcodes_0 WHERE T1.schooldistrictname_3 = 'District Special Education Consortia' AND T3.statuscodes_1 = '613360'\n\n\t----- bird -----\tcalifornia_schools",
    "75": "\nSELECT s.schoolnames_6, s.educationlevel_31 \nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE f.mealprovision_11 = 'Breakfast Provision 2' AND s.countyofficeofeducation_26 = '37'\n\n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT s.cityname_14\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.countyofficeofeducation = 'Merced'\nAND f.mealprovision_11 = '2'\nAND f.agegroup_17 IN ('9', '12')\nAND s.educationlevelrange_33 LIKE '%High School%'\n\n\t----- bird -----\tcalifornia_schools",
    "77": "\nSELECT s.schoolnames_6, f.valueslist_21 * 100 AS percent_eligible_frpm FROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.educationlevelrange_33 = 'Kindergarten - Grade 9' AND s.countyofficeofeducation_26 = 'Los Angeles'\n\n\t----- bird -----\tcalifornia_schools",
    "78": "\nSELECT educationlevelrange_33, COUNT(*) AS count FROM schools WHERE citynames_9 = 'Adelanto' GROUP BY educationlevelrange_33 ORDER BY count DESC LIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "79": "\nSELECT COUNT(s.productcode_0) AS school_count, s.location\nFROM schools s\nLEFT JOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE s.location IN ('San Diego', 'Santa Barbara')\nAND f.activitypattern_12 IS NULL\nGROUP BY s.location\nORDER BY school_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT s.schoolnames_6, s.latitudevalues_37 AS latitude FROM schools s WHERE s.latitudevalues_37 = (SELECT MAX(latitudevalues_37) FROM schools)\n\n\t----- bird -----\tcalifornia_schools",
    "81": "\nSELECT s.schoolnames_6, s.educationlevelrange_33, s.cityname_14 \nFROM schools s\nWHERE s.statecode_11 = 'CA'\nORDER BY s.latitudevalues_37 ASC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT T3.educationlevelrange_33 FROM frpm AS T1 JOIN schools AS T3 ON T1.productcodes_0 = T3.productcode_0 ORDER BY T3.longitudevalues_38 DESC LIMIT 1\n\n\t----- bird -----\tcalifornia_schools",
    "83": "\nSELECT s.citynames_9, COUNT(s.productcode_0) AS school_count\nFROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nWHERE f.schooltypes_9 = 'Magnet' AND f.educationlevelrange_33 = 'K-8'\nGROUP BY s.citynames_9;\n\n\t----- bird -----\tcalifornia_schools",
    "84": "\nSELECT s.schoolnames AS school_name, s.schooldistrictname AS district_name, p.participantname AS administrator_name\nFROM schools sch\nJOIN satscores s ON sch.productcode_0 = s.productcodes_0\nJOIN frpm f ON sch.productcode_0 = f.productcodes_0\nJOIN (\n    SELECT productcodes_0, participantname,\n           ROW_NUMBER() OVER (PARTITION BY participantname ORDER BY COUNT(*) DESC) AS rn\n    FROM frpm\n    WHERE probabilityvalues_20 IS NOT NULL -- Assuming this column indicates the administrator role\n    GROUP BY productcodes_0, participantname\n) p ON f.productcodes_0 = p.productcodes_0 AND f.schoolnames_7 = p.participantname\nWHERE p.rn <= 2\nORDER BY p.rn, COUNT(*) DESC\n\n\t----- bird -----\tcalifornia_schools",
    "85": "\nSELECT s.productcode_0 AS district_code, f.mealprovision_11 AS percent_eligible_free_k_12\nFROM frpm f\nJOIN schools s ON f.productcodes_0 = s.productcode_0\nWHERE EXISTS (\n    SELECT 1\n    FROM schools sc\n    WHERE sc.emailaddresses_41 LIKE 'Alusine%'\n    AND sc.productcode_0 = s.productcode_0\n)\n\n\t----- bird -----\tcalifornia_schools",
    "86": "\nSELECT s.lastnames, s.schoolnames_6 AS school_name, s.schooldistrictname_3 AS district, s.countyofficeofeducation_26 AS county\nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE s.identifiercode_1 = '40'\n\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT s.emailaddresses_41 FROM schools s\nJOIN frpm f ON s.productcode_0 = f.productcodes_0\nJOIN satscores sat ON s.productcode_0 = sat.productcodes_0\nWHERE s.statecode_16 = 'CA'\nAND s.citynames_9 LIKE '%San Bernardino%'\nAND s.schooltypes_28 IN ('Public Intermediate/Middle Schools', 'Unified Scools')\nAND f.educationagencyname_6 = 'San Bernardino City Unified'\nAND s.datecolumn_20 BETWEEN '2009-01-01' AND '2010-12-31';\n\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT s.schoolnames_6, s.emailaddresses_41 \nFROM schools s\nJOIN satscores ss ON s.productcode_0 = ss.productcodes_0\nWHERE ss.numericdata_5 >= 1500\nORDER BY COUNT(ss.scoreslist_6) DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.region = 'East Bohemia'\nAND EXISTS (\n    SELECT 1 FROM trans t WHERE t.allones_1 = a.sequentialnumbers_0 AND t.transactiontype_4 = 'issuance after transaction'\n)\n\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE dis.region = 'Prague'\nAND EXISTS (SELECT 1 FROM loan l WHERE l.idnumbers_1 = a.sequentialnumbers_0)\n\n\t----- bird -----\tfinancial",
    "91": "\nSELECT AVG(CASE WHEN EXTRACT(YEAR FROM datecolumn_3) = 1995 THEN useractivity_7 ELSE NULL END) AS avg_unemployment_ratio_1995,\n       AVG(CASE WHEN EXTRACT(YEAR FROM datecolumn_3) = 1996 THEN useractivity_7 ELSE NULL END) AS avg_unemployment_ratio_1996\nFROM district\nWHERE datecolumn_3 BETWEEN '1995-01-01' AND '1996-12-31'\n\n\t----- bird -----\tfinancial",
    "92": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM client c\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE c.gendercode_1 = 'F'\nGROUP BY d.sequentialnumbers_0\nHAVING AVG(d.valueslist_11) > 6000 AND AVG(d.valueslist_11) < 10000\n\n\t----- bird -----\tfinancial",
    "93": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM client c\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE c.gendercode_1 = 'M' AND d.region_2 = 'North Bohemia'\n\n\t----- bird -----\tfinancial",
    "94": "\nWITH female_clients AS (\n    SELECT c.sequentialnumbers_0, a.sequentialnumbers_0 AS account_number, AVG(o.valueslist_4) AS avg_salary\n    FROM client c\n    JOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\n    JOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\n    LEFT JOIN order o ON a.sequentialnumbers_0 = o.numberslist_1\n    WHERE c.gendercode_1 = 'F'\n    GROUP BY c.sequentialnumbers_0, a.sequentialnumbers_0\n),\noldest_female AS (\n    SELECT MAX(birthdate_2) AS max_birthdate\n    FROM client\n    WHERE gendercode_1 = 'F'\n)\nSELECT fc.account_number, (MAX(fc.avg_salary) OVER () - MIN(fc.avg_salary)) AS salary_gap\nFROM female_clients fc\nJOIN oldest_female of ON fc.sequentialnumbers_0 IN (\n    SELECT sequentialnumbers_0 \n    FROM client \n    WHERE birthdate_2 = of.max_birthdate AND gendercode_1 = 'F'\n)\nORDER BY fc.avg_salary ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "95": "\nSELECT a.sequentialnumbers_0 AS account_number\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nWHERE c.birthdate_2 = (\n    SELECT MIN(birthdate_2) FROM client\n)\nGROUP BY a.sequentialnumbers_0\nORDER BY AVG(a.monthlyfee_2::integer) DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM disp d\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nWHERE a.monthlyfee_2 = 'Weekly Issuance'\nAND d.ownerstatus_3 = 'Owner'\n\n\t----- bird -----\tfinancial",
    "97": "\nSELECT c.sequentialnumbers_0, c.gendercode_1, c.birthdate_2, c.agevalues_3 \nFROM client AS c\nJOIN disp AS d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account AS a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN trans AS t ON a.sequentialnumbers_0 = t.allones_1\nWHERE t.transactiontype_4 = 'Disponent' AND a.datecolumn_3 IS NOT NULL\n\n\t----- bird -----\tfinancial",
    "98": "\nSELECT a.sequentialnumbers_0, l.datecolumn_2, l.valueslist_3 AS approved_amount\nFROM account a\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE YEAR(l.datecolumn_2) = 1997\nGROUP BY a.sequentialnumbers_0, l.datecolumn_2, l.valueslist_3\nHAVING approved_amount = (\n    SELECT MIN(valueslist_3)\n    FROM loan l2\n    WHERE l2.idnumbers_1 = a.sequentialnumbers_0 AND YEAR(l2.datecolumn_2) = 1997\n)\nORDER BY l.datecolumn_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "99": "\nSELECT a.sequentialnumbers_0, l.valueslist_3 AS approved_amount\nFROM account a\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE DATE_PART('year', AGE(l.datecolumn_2)) > 12 AND EXTRACT(YEAR FROM a.datecolumn_3) = 1993\nORDER BY l.valueslist_3 DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM client c\nJOIN disp dp ON c.sequentialnumbers_0 = dp.sequentialnumbers_1\nJOIN account a ON dp.numericdata_2 = a.sequentialnumbers_0\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE c.gendercode_1 = 'F' AND YEAR(c.birthdate_2) < 1950 AND d.citynames_1 = 'Slokolov'\n\n\t----- bird -----\tfinancial",
    "101": "\nSELECT sequentialnumbers_0 \nFROM account \nWHERE datecolumn_3 BETWEEN '1995-01-01' AND '1995-12-31' \nORDER BY datecolumn_3 ASC \nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "102": "\nSELECT a.sequentialnumbers_0, a.datecolumn_3, a.monthlyfee_2 \nFROM account a\nWHERE a.datecolumn_3 < '1997-01-01' AND a.monthlyfee_2 > 3000\n\n\t----- bird -----\tfinancial",
    "103": "\nSELECT c.sequentialnumbers_0 \nFROM client AS c\nJOIN disp AS d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN card AS ca ON d.numericdata_2 = ca.idnumbers_1\nWHERE ca.datecolumn_3 = '1994-03-03'\n\n\t----- bird -----\tfinancial",
    "104": "\nSELECT t2.datecolumn_3 FROM trans AS t1 JOIN account AS t2 ON t1.allones_1 = t2.sequentialnumbers_0 WHERE t1.prijem_3 = '840' AND t1.datecolumn_2 = '1998-10-14'\n\n\t----- bird -----\tfinancial",
    "105": "\nSELECT DISTINCT T2.sequentialnumbers_0 \nFROM loan AS T1 \nJOIN account AS T2 ON T1.idnumbers_1 = T2.sequentialnumbers_0 \nWHERE T1.datecolumn_2 = '1994-08-25'\n\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(t3.amount) AS max_transaction_amount\nFROM card AS t1\nJOIN disp AS t2 ON t1.idnumbers_1 = t2.sequentialnumbers_0\nJOIN trans AS t3 ON t2.numericdata_2 = t3.useridentifier_9\nWHERE t1.datecolumn_3 = '1996-10-21'\n\n\t----- bird -----\tfinancial",
    "107": "\nSELECT c.gendercode_1 \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE a.datecolumn_3 = (\n    SELECT MIN(a2.datecolumn_3) \n    FROM account a2 \n    JOIN disp d2 ON a2.sequentialnumbers_0 = d2.numericdata_2\n    JOIN client cl ON d2.sequentialnumbers_1 = cl.sequentialnumbers_0\n    JOIN district dis2 ON cl.agevalues_3 = dis2.sequentialnumbers_0\n    GROUP BY dis2.sequentialnumbers_0\n    ORDER BY AVG(dis2.valueslist_11) DESC\n    LIMIT 1\n)\nAND c.birthdate_2 = (\n    SELECT MIN(c2.birthdate_2) \n    FROM client c2 \n    JOIN disp d3 ON c2.sequentialnumbers_0 = d3.sequentialnumbers_1\n    JOIN account a3 ON d3.numericdata_2 = a3.sequentialnumbers_0\n    WHERE a3.datecolumn_3 IN (\n        SELECT MIN(a4.datecolumn_3) \n        FROM account a4 \n        JOIN disp d4 ON a4.sequentialnumbers_0 = d4.numericdata_2\n        JOIN client cl2 ON d4.sequentialnumbers_1 = cl2.sequentialnumbers_0\n        JOIN district dis3 ON cl2.agevalues_3 = dis3.sequentialnumbers_0\n        GROUP BY dis3.sequentialnumbers_0\n        ORDER BY AVG(dis3.valueslist_11) DESC\n        LIMIT 1\n    )\n)\n\n\t----- bird -----\tfinancial",
    "108": "\nWITH MaxLoanAmount AS (\n    SELECT idnumbers_1, MAX(valueslist_3) as max_loan_amount\n    FROM loan\n    GROUP BY idnumbers_1\n),\nClientWithMaxLoan AS (\n    SELECT l.idnumbers_1\n    FROM loan l\n    JOIN MaxLoanAmount mla ON l.idnumbers_1 = mla.idnumbers_1 AND l.valueslist_3 = mla.max_loan_amount\n)\nSELECT t.transactiontype_4, t.datecolumn_2\nFROM trans t\nJOIN ClientWithMaxLoan cml ON t.useridentifier_9 = (SELECT sequentialnumbers_0 FROM disp WHERE idnumbers_1 = cml.idnumbers_1 LIMIT 1)\nWHERE t.datecolumn_2 > (\n    SELECT MIN(datecolumn_3) \n    FROM account a\n    JOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2 AND d.ownerstatus_3 = 'OWNER'\n    WHERE d.sequentialnumbers_1 IN (SELECT sequentialnumbers_0 FROM client WHERE agevalues_3 IN (SELECT sequentialnumbers_0 FROM district WHERE idnumbers_1 IN (SELECT idnumbers_1 FROM ClientWithMaxLoan)))\n)\nORDER BY t.datecolumn_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "109": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE c.gendercode_1 = 'F' AND dis.citynames_1 = 'Jesenik'\n\n\t----- bird -----\tfinancial",
    "110": "\nSELECT d.sequentialnumbers_0 AS disposition_id\nFROM disp d\nJOIN trans t ON d.numericdata_2 = t.allones_1\nWHERE t.transactiontype_4 = '5100' AND t.datecolumn_2 = '1998-09-02'\n\n\t----- bird -----\tfinancial",
    "111": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Litomerice' AND YEAR(a.datecolumn_3) = 1996\n\n\t----- bird -----\tfinancial",
    "112": "\nSELECT d.citynames_1 FROM client c JOIN district d ON c.agevalues_3 = d.sequentialnumbers_0 JOIN disp di ON c.sequentialnumbers_0 = di.sequentialnumbers_1 JOIN account a ON di.numericdata_2 = a.sequentialnumbers_0 WHERE c.gendercode_1 = 'F' AND c.birthdate_2 = '1976-01-29'\n\n\t----- bird -----\tfinancial",
    "113": "\nSELECT c.birthdate_2 \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE l.lettercolumn_6 = '98832' AND l.datecolumn_2 = '1996-01-03'\n\n\t----- bird -----\tfinancial",
    "114": "\nSELECT a.sequentialnumbers_0 AS account_id\nFROM account a\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE dis.citynames_1 = 'Prague'\nORDER BY a.datecolumn_3 ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "115": "\nSELECT CAST(COUNT(CASE WHEN T1.gendercode_1 = 'M' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM client AS T1 JOIN district AS T2 ON T1.agevalues_3 = T2.sequentialnumbers_0 WHERE T2.region = 'south Bohemia' ORDER BY T2.data_series DESC LIMIT 1\n\n\t----- bird -----\tfinancial",
    "116": "\nWITH FirstLoanClient AS (\n    SELECT idnumbers_1 AS account_id\n    FROM loan\n    WHERE datecolumn_2 = '1993-07-05'\n    LIMIT 1\n),\nAccountTransactions AS (\n    SELECT t.useridentifier_9, t.datecolumn_2, a.monthlyfee_2\n    FROM trans t\n    JOIN account a ON t.allones_1 = a.sequentialnumbers_0\n    WHERE t.useridentifier_9 IN (\n        SELECT c.sequentialnumbers_0\n        FROM client c\n        JOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\n        JOIN FirstLoanClient flc ON d.numericdata_2 = flc.account_id\n    )\n    AND t.datecolumn_2 BETWEEN '1993-03-22' AND '1998-12-27'\n)\nSELECT \n    (MAX(datecolumn_2) - MIN(datecolumn_2)) AS days,\n    ((MAX(monthlyfee_2::numeric) - MIN(monthlyfee_2::numeric)) / MIN(monthlyfee_2::numeric)) * 100.0 AS increase_rate\nFROM AccountTransactions;\n\n\t----- bird -----\tfinancial",
    "117": "\nSELECT (SUM(CASE WHEN lettercolumn_6 = 'Fully Paid' THEN valueslist_5 ELSE 0 END) / SUM(valueslist_5)) * 100 AS fully_paid_percentage\nFROM loan\nWHERE lettercolumn_6 IN ('Fully Paid', 'Not Fully Paid')\n\n\t----- bird -----\tfinancial",
    "118": "\nSELECT CAST(COUNT(CASE WHEN lettercolumn_6 = 'No issue' THEN productids_0 END) AS FLOAT) * 100 / COUNT(productids_0) AS percentage_running_no_issue\nFROM loan\nWHERE valueslist_3 < 100000\n\n\t----- bird -----\tfinancial",
    "119": "\nSELECT a.sequentialnumbers_0, d.citynames_1, d.region_2 \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE YEAR(a.datecolumn_3) = 1993 AND EXISTS (\n    SELECT 1 FROM trans t WHERE t.allones_1 = a.sequentialnumbers_0 AND t.datecolumn_2 > a.datecolumn_3\n)\n\n\t----- bird -----\tfinancial",
    "120": "\nSELECT a.sequentialnumbers_0, COUNT(o.itemids_0) AS statement_issue_frequency\nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nJOIN order o ON a.sequentialnumbers_0 = o.numberslist_1\nWHERE d.region_2 = 'east Bohemia' AND o.datecolumn_2 BETWEEN '1995-01-01' AND '2000-12-31'\nGROUP BY a.sequentialnumbers_0\n\n\t----- bird -----\tfinancial",
    "121": "\nSELECT a.sequentialnumbers_0, a.datecolumn_3 \nFROM account AS a\nJOIN disp AS d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client AS c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nJOIN district AS dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE dis.citynames_1 = 'Prachatice'\n\n\t----- bird -----\tfinancial",
    "122": "\nSELECT district.citynames_1, district.region_2 \nFROM loan \nJOIN account ON loan.idnumbers_1 = account.sequentialnumbers_0 \nJOIN district ON account.agevalues_1 = district.sequentialnumbers_0 \nWHERE loan.productids_0 = 4990;\n\n\t----- bird -----\tfinancial",
    "123": "\nSELECT a.sequentialnumbers_0, d.citynames_1, d.region_2 \nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE l.valueslist_3 > 300000 OR l.valueslist_4 > 300000 OR l.valueslist_5 > 300000;\n\n\t----- bird -----\tfinancial",
    "124": "\nSELECT l.productids_0, d.citynames_1, AVG(d.valueslist_11) AS average_salary\nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE l.valueslist_3 = 60\nGROUP BY l.productids_0, d.citynames_1\n\n\t----- bird -----\tfinancial",
    "125": "\nSELECT d.region, ((d1.unemployment_rate - d2.unemployment_rate) / d2.unemployment_rate * 100) AS unemployment_increment\nFROM district d\nJOIN (\n    SELECT sequentialnumbers_0, useractivity_7 as unemployment_rate\n    FROM district\n    WHERE data_series_8 = 1995\n) d1 ON d.sequentialnumbers_0 = d1.sequentialnumbers_0\nJOIN (\n    SELECT sequentialnumbers_0, useractivity_7 as unemployment_rate\n    FROM district\n    WHERE data_series_8 = 1996\n) d2 ON d.sequentialnumbers_0 = d2.sequentialnumbers_0\nWHERE EXISTS (\n    SELECT l.productids_0\n    FROM loan l\n    JOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\n    WHERE a.agevalues_1 = d.sequentialnumbers_0 AND l.lettercolumn_6 IS NULL -- Assuming lettercolumn_6 is null for running contracts\n)\n\n\t----- bird -----\tfinancial",
    "126": "\nSELECT CAST(COUNT(CASE WHEN d.citynames_1 = 'Decin' THEN a.sequentialnumbers_0 ELSE NULL END) AS FLOAT) * 100 / COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN district dt ON d.agevalues_3 = dt.sequentialnumbers_0\nWHERE EXTRACT(YEAR FROM a.datecolumn_3) = 1993;\n\n\t----- bird -----\tfinancial",
    "127": "\nSELECT sequentialnumbers_0 AS account_id\nFROM account\nWHERE monthlyfee_2 IS NOT NULL AND monthlyfee_2 != ''\n\n\t----- bird -----\tfinancial",
    "128": "\nSELECT d.sequentialnumbers_0, COUNT(c.sequentialnumbers_0) AS female_account_holders_count\nFROM district d\nJOIN client c ON d.sequentialnumbers_0 = c.agevalues_3\nJOIN disp dp ON c.sequentialnumbers_0 = dp.sequentialnumbers_1\nWHERE c.gendercode_1 = 'F'\nGROUP BY d.sequentialnumbers_0\nORDER BY female_account_holders_count DESC\nLIMIT 10;\n\n\t----- bird -----\tfinancial",
    "129": "\nSELECT d.citynames_1, SUM(CASE WHEN t.transactiontype_4 = 'withdrawal' THEN CAST(REPLACE(t.prijem_3, ',', '') AS DECIMAL) ELSE 0 END) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.allones_1 = a.sequentialnumbers_0\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE t.transactiontype_4 = 'withdrawal' AND t.datecolumn_2 BETWEEN '1996-01-01' AND '1996-01-31'\nGROUP BY d.citynames_1\nORDER BY total_withdrawals DESC\nLIMIT 10\n\n\t----- bird -----\tfinancial",
    "130": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nLEFT JOIN disp dp ON a.sequentialnumbers_0 = dp.numericdata_2\nLEFT JOIN card c ON dp.sequentialnumbers_0 = c.idnumbers_1\nWHERE d.citynames_1 LIKE '%South Bohemia%' AND c.numericsequence_0 IS NULL\n\n\t----- bird -----\tfinancial",
    "131": "\nSELECT d.citynames_1, COUNT(l.productids_0) AS active_loans\nFROM district d\nJOIN account a ON d.sequentialnumbers_0 = a.agevalues_1\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE l.datecolumn_2 >= CURRENT_DATE - INTERVAL '6 months'\nGROUP BY d.citynames_1\nORDER BY active_loans DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "132": "\nSELECT AVG(l.valueslist_3) AS average_loan_amount\nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nWHERE c.gendercode_1 = 'M'\n\n\t----- bird -----\tfinancial",
    "133": "\nSELECT d.region, d.citynames FROM district d\nJOIN loan l ON d.sequentialnumbers_0 = l.idnumbers_1\nWHERE YEAR(l.datecolumn_2) = 1996\nGROUP BY d.region, d.citynames\nORDER BY SUM(CASE WHEN l.lettercolumn_6 = 'unemployment' THEN l.valueslist_3 ELSE 0 END) DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "134": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE EXTRACT(YEAR FROM a.datecolumn_3) = 1996\nAND d.useractivity_7 = (\n    SELECT MAX(useractivity_7)\n    FROM district\n    WHERE useractivity_7 > 0\n)\n\n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN trans t ON a.sequentialnumbers_0 = t.allones_1\nWHERE a.monthlyfee_2 IS NOT NULL AND t.prijem_3 < 0\nGROUP BY a.sequentialnumbers_0\nHAVING SUM(t.prijem_3) < 0\n\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(*)\nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nWHERE l.datecolumn_2 BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.valueslist_3 >= 250000\nAND a.monthlyfee_2 = 'monthly';\n\n\t----- bird -----\tfinancial",
    "137": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Branch location 1'\nAND EXISTS (\n    SELECT 1 FROM loan l WHERE l.idnumbers_1 = a.sequentialnumbers_0 AND l.lettercolumn_6 = 'running'\n)\n\n\t----- bird -----\tfinancial",
    "138": "\nWITH crime_counts AS (\n    SELECT d.citynames_1, COUNT(t.sequenceofnumbers_0) AS crime_count\n    FROM district d\n    JOIN trans t ON d.sequentialnumbers_0 = t.userids_5\n    WHERE EXTRACT(YEAR FROM t.datecolumn_2) = 1995\n    GROUP BY d.citynames_1\n),\nranked_crime_counts AS (\n    SELECT citynames_1, crime_count,\n           RANK() OVER (ORDER BY crime_count DESC) AS rnk\n    FROM crime_counts\n)\nSELECT COUNT(c.sequentialnumbers_0) AS male_client_count\nFROM ranked_crime_counts rcc\nJOIN district d ON rcc.citynames_1 = d.citynames_1\nJOIN disp dp ON d.sequentialnumbers_0 = dp.sequentialnumbers_1\nJOIN client c ON dp.sequentialnumbers_0 = c.sequentialnumbers_0\nWHERE rcc.rnk = 2 AND c.gendercode_1 = 'M'\n\n\t----- bird -----\tfinancial",
    "139": "\nSELECT COUNT(c.numericsequence_0) \nFROM card c\nJOIN disp d ON c.idnumbers_1 = d.sequentialnumbers_0\nWHERE c.tier_2 = 'high' AND d.ownerstatus_3 = 'disponent'\n\n\t----- bird -----\tfinancial",
    "140": "\nSELECT COUNT(*) FROM account INNER JOIN district ON account.agevalues_1 = district.sequentialnumbers_0 WHERE district.citynames_1 = 'Pisek'\n\n\t----- bird -----\tfinancial",
    "141": "\nSELECT DISTINCT d.sequentialnumbers_0, d.citynames_1\nFROM district d\nJOIN account a ON d.agevalues_5 = a.agevalues_1\nJOIN trans t ON a.sequentialnumbers_0 = t.allones_1\nWHERE EXTRACT(YEAR FROM t.datecolumn_2) = 1997 AND CAST(REPLACE(SUBSTRING(t.prijem_3, PATINDEX('%[0-9.-]%', t.prijem_3), LEN(t.prijem_3)), ',', '') AS DECIMAL(18, 2)) > 10000\n\n\t----- bird -----\tfinancial",
    "142": "\nSELECT DISTINCT a.sequentialnumbers_0 \nFROM account a\nJOIN order o ON a.sequentialnumbers_0 = o.numberslist_1\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Pisek' AND o.codeshortnames_2 = 'household payment'\n\n\t----- bird -----\tfinancial",
    "143": "\nSELECT a.sequentialnumbers_0 AS account_number\nFROM account a\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN card c1 ON d.sequentialnumbers_1 = c1.idnumbers_1 AND c1.tier = 'gold'\nJOIN card c2 ON d.sequentialnumbers_1 = c2.idnumbers_1 AND c2.tier = 'junior'\nGROUP BY a.sequentialnumbers_0\n\n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(T3.valueslist_4) AS AverageCreditCardAmount \nFROM trans AS T1 \nJOIN account AS T2 ON T1.allones_1 = T2.sequentialnumbers_0 \nJOIN order AS T3 ON T2.sequentialnumbers_0 = T3.numberslist_1 \nWHERE EXTRACT(YEAR FROM T1.datecolumn_2) = 2021\n\n\t----- bird -----\tfinancial",
    "145": "\nSELECT a.sequentialnumbers_0 AS account_holder_id\nFROM account a\nJOIN trans t ON a.sequentialnumbers_0 = t.allones_1\nWHERE EXTRACT(YEAR FROM t.datecolumn_2) = 1998\nGROUP BY a.sequentialnumbers_0, a.monthlyfee_2\nHAVING SUM(CAST(REPLACE(a.monthlyfee_2, ',', '') AS REAL)) < (\n    SELECT AVG(CAST(REPLACE(monthlyfee_2, ',', '') AS REAL))\n    FROM account\n    JOIN trans ON account.sequentialnumbers_0 = trans.allones_1\n    WHERE EXTRACT(YEAR FROM trans.datecolumn_2) = 1998\n)\n\n\t----- bird -----\tfinancial",
    "146": "\nSELECT DISTINCT c.sequentialnumbers_0, c.gendercode_1 \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN card ca ON a.sequentialnumbers_0 = ca.idnumbers_1\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE c.gendercode_1 = 'F'\n\n\t----- bird -----\tfinancial",
    "147": "\nSELECT COUNT(d.sequentialnumbers_0) \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE c.gendercode_1 = 'F' AND dis.region_2 = 'South Bohemia'\n\n\t----- bird -----\tfinancial",
    "148": "\nSELECT a.sequentialnumbers_0, d.citynames_1 \nFROM account AS a\nJOIN disp AS dp ON a.sequentialnumbers_0 = dp.numericdata_2\nJOIN client AS c ON dp.sequentialnumbers_1 = c.sequentialnumbers_0\nJOIN district AS d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Tabor'\nAND EXISTS (SELECT 1 FROM loan WHERE idnumbers_1 = a.sequentialnumbers_0)\n\n\t----- bird -----\tfinancial",
    "149": "\nSELECT DISTINCT a.monthlyfee_2, AVG(d.userids_10) AS average_income\nFROM account a\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nWHERE NOT EXISTS (\n    SELECT 1 FROM loan l WHERE l.idnumbers_1 = a.sequentialnumbers_0\n)\nGROUP BY a.monthlyfee_2, d.userids_10\nHAVING AVG(d.userids_10) > 8000 AND AVG(d.userids_10) <= 9000\n\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(DISTINCT a.sequentialnumbers_0) \nFROM account AS a\nJOIN district AS d ON a.agevalues_1 = d.sequentialnumbers_0\nJOIN trans AS t ON a.sequentialnumbers_0 = t.allones_1\nWHERE d.region_2 = 'North Bohemia' AND t.abcolumn_8 = 'AB'\n\n\t----- bird -----\tfinancial",
    "151": "\nSELECT DISTINCT d.citynames_1\nFROM district d\nJOIN account a ON d.sequentialnumbers_0 = a.agevalues_1\nJOIN trans t ON a.sequentialnumbers_0 = t.allones_1\nWHERE t.transactiontype_4 = 'withdrawal'\n\n\t----- bird -----\tfinancial",
    "152": "\nSELECT AVG(T1.useractivity_7) AS average_crimes\nFROM district AS T1\nJOIN account AS T2 ON T1.sequentialnumbers_0 = T2.agevalues_1\nWHERE T1.useractivity_7 > 4000 AND YEAR(T2.datecolumn_3) >= 1997\nGROUP BY T1.region_2\nHAVING COUNT(*) > 0 AND YEAR(T1.data_series_8) = 1995\n\n\t----- bird -----\tfinancial",
    "153": "\nSELECT COUNT(c.numericsequence_0) \nFROM card c\nJOIN loan l ON c.idnumbers_1 = l.idnumbers_1\nWHERE c.tier_2 = 'classic'\n\n\t----- bird -----\tfinancial",
    "154": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM client c\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE c.gendercode_1 = 'M' AND d.citynames_1 = 'Hl.m. Praha'\n\n\t----- bird -----\tfinancial",
    "155": "\nSELECT CAST(COUNT(CASE WHEN datecolumn_3 < '1998-01-01' THEN numericsequence_0 END) AS FLOAT) * 100 / COUNT(numericsequence_0) AS percentage_gold_cards_issued_before_1998\nFROM card\nWHERE tier_2 = 'Gold'\n\n\t----- bird -----\tfinancial",
    "156": "\nSELECT c.sequentialnumbers_0, c.gendercode_1, c.birthdate_2\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE l.valueslist_3 = (SELECT MAX(valueslist_3) FROM loan)\n\n\t----- bird -----\tfinancial",
    "157": "\nSELECT D.useractivity_7 \nFROM district D \nJOIN account A ON D.sequentialnumbers_0 = A.agevalues_1 \nWHERE A.sequentialnumbers_0 = 532 AND YEAR(D.datecolumn_3) = 1995\n\n\t----- bird -----\tfinancial",
    "158": "\nSELECT d.sequentialnumbers_0 AS district_id\nFROM order o\nJOIN account a ON o.numberslist_1 = a.sequentialnumbers_0\nJOIN disp dp ON a.sequentialnumbers_0 = dp.numericdata_2\nJOIN client c ON dp.sequentialnumbers_1 = c.sequentialnumbers_0\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE o.itemids_0 = 33333;\n\n\t----- bird -----\tfinancial",
    "159": "\nSELECT t.transactiontype_4, t.datecolumn_2 \nFROM trans AS t\nJOIN account AS a ON t.allones_1 = a.sequentialnumbers_0\nJOIN disp AS d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client AS c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nWHERE c.sequentialnumbers_0 = 3356 AND t.transactiontype_4 = 'withdrawal'\n\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(DISTINCT a.sequentialnumbers_0) \nFROM account a\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE l.valueslist_3 < 200000\nAND EXTRACT(WEEK FROM a.datecolumn_3) = EXTRACT(WEEK FROM CURRENT_DATE)\n\n\t----- bird -----\tfinancial",
    "161": "\nSELECT card.tier_2 \nFROM client \nJOIN disp ON client.sequentialnumbers_0 = disp.sequentialnumbers_1 \nJOIN account ON disp.numericdata_2 = account.sequentialnumbers_0 \nJOIN card ON account.sequentialnumbers_0 = card.idnumbers_1 \nWHERE client.sequentialnumbers_0 = 13539\n\n\t----- bird -----\tfinancial",
    "162": "\nSELECT district.region_2 FROM client JOIN district ON client.agevalues_3 = district.sequentialnumbers_0 WHERE client.sequentialnumbers_0 = 3541\n\n\t----- bird -----\tfinancial",
    "163": "\nSELECT d.citynames_1, COUNT(a.sequentialnumbers_0) AS account_count\nFROM district d\nJOIN loan l ON d.sequentialnumbers_0 = l.idnumbers_1\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nWHERE l.lettercolumn_6 IS NULL OR l.lettercolumn_6 != 'Problem'\nGROUP BY d.citynames_1\nORDER BY account_count DESC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "164": "\nSELECT client.sequentialnumbers_0, client.gendercode_1, client.birthdate_2, client.agevalues_3 \nFROM client \nJOIN disp ON client.sequentialnumbers_0 = disp.sequentialnumbers_1 \nJOIN account ON disp.numericdata_2 = account.sequentialnumbers_0 \nJOIN order ON account.sequentialnumbers_0 = order.numberslist_1 \nWHERE order.itemids_0 = 32423\n\n\t----- bird -----\tfinancial",
    "165": "\nSELECT t.sequenceofnumbers_0, t.datecolumn_2, t.prijem_3, t.transactiontype_4 \nFROM trans AS t\nJOIN account AS a ON t.allones_1 = a.sequentialnumbers_0\nJOIN district AS d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.sequentialnumbers_0 = 5;\n\n\t----- bird -----\tfinancial",
    "166": "\nSELECT COUNT(*) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Jesenik';\n\n\t----- bird -----\tfinancial",
    "167": "\nSELECT DISTINCT d.sequentialnumbers_1\nFROM disp d\nJOIN card c ON d.numericdata_2 = c.idnumbers_1\nWHERE c.tier_2 = 'junior' AND c.datecolumn_3 > '1996-01-01'\n\n\t----- bird -----\tfinancial",
    "168": "\nSELECT CAST(COUNT(CASE WHEN c.gendercode_1 = 'F' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM client cl \nJOIN disp d ON cl.sequentialnumbers_0 = d.sequentialnumbers_1 \nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0 \nJOIN district dt ON cl.agevalues_3 = dt.sequentialnumbers_0 \nWHERE a.datecolumn_3 IN (\n    SELECT MIN(datecolumn_3) \n    FROM account \n    GROUP BY agevalues_1\n)\nAND dt.scoreslist_9 > 10000;\n\n\t----- bird -----\tfinancial",
    "169": "\nSELECT l.datecolumn_2, SUM(l.valueslist_3) AS total_loan_amount\nFROM loan l\nJOIN disp d ON l.idnumbers_1 = d.numericdata_2\nJOIN client c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nWHERE c.gendercode_1 = 'M' AND l.datecolumn_2 BETWEEN '1996-01-01' AND '1997-12-31'\nGROUP BY l.datecolumn_2\nORDER BY l.datecolumn_2;\n\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*)\nFROM trans\nWHERE transactiontype_4 = 'withdrawal' AND datecolumn_2 > '1995-12-31'\n\n\t----- bird -----\tfinancial",
    "171": "\nSELECT SUM(CASE WHEN T2.region = 'East Bohemia' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.region = 'North Bohemia' THEN 1 ELSE 0 END) AS crime_difference\nFROM trans AS T1\nJOIN district AS T2 ON T1.userids_5 = T2.sequentialnumbers_0\nWHERE YEAR(T1.datecolumn_2) = 1996 AND (T2.region = 'East Bohemia' OR T2.region = 'North Bohemia')\n\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(*)\nFROM disp\nWHERE numericdata_2 BETWEEN 1 AND 10;\n\n\t----- bird -----\tfinancial",
    "173": "\nSELECT COUNT(*) AS statement_request_count, t2.transactiontype_4 AS aim_of_debiting\nFROM trans AS t1\nJOIN trans AS t2 ON t1.sequenceofnumbers_0 = t2.sequenceofnumbers_0\nWHERE t1.userids_5 = 3 AND t2.valueslist_5 = 3539\n\n\t----- bird -----\tfinancial",
    "174": "\nSELECT T2.birthdate_2 FROM disp AS T1 JOIN client AS T2 ON T1.sequentialnumbers_1 = T2.sequentialnumbers_0 JOIN account AS T3 ON T1.numericdata_2 = T3.sequentialnumbers_0 WHERE T2.sequentialnumbers_0 = 130\n\n\t----- bird -----\tfinancial",
    "175": "\nSELECT COUNT(DISTINCT a.sequentialnumbers_0) \nFROM account AS a\nJOIN disp AS d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN trans AS t ON a.sequentialnumbers_0 = t.allones_1\nWHERE d.ownerstatus_3 IS NOT NULL AND t.transactiontype_4 = 'statement'\n\n\t----- bird -----\tfinancial",
    "176": "\nSELECT SUM(l.valueslist_3 + l.valueslist_4) AS total_debt, \n       CASE \n         WHEN t.transactiontype_4 = 'payment' THEN 'Client is up to date with payments'\n         ELSE 'Client has missed some payments'\n       END AS payment_status\nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nJOIN disp d ON a.sequentialnumbers_0 = d.numericdata_2\nJOIN client c ON d.sequentialnumbers_1 = c.sequentialnumbers_0\nLEFT JOIN trans t ON c.sequentialnumbers_0 = t.useridentifier_9\nWHERE c.sequentialnumbers_0 = 992\nGROUP BY payment_status;\n\n\t----- bird -----\tfinancial",
    "177": "\nSELECT c.gendercode_1, SUM(t.prijem_3::integer) AS total_sum\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN trans t ON a.sequentialnumbers_0 = t.allones_1\nWHERE c.sequentialnumbers_0 = 4 AND t.sequenceofnumbers_0 = 851\nGROUP BY c.gendercode_1\n\n\t----- bird -----\tfinancial",
    "178": "\nSELECT card.tier_2 \nFROM client \nJOIN disp ON client.sequentialnumbers_0 = disp.sequentialnumbers_1 \nJOIN card ON disp.numericdata_2 = card.idnumbers_1 \nWHERE client.sequentialnumbers_0 = 9;\n\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(CASE WHEN EXTRACT(YEAR FROM t.datecolumn_2) = 1998 THEN CAST(REPLACE(t.prijem_3, ',', '') AS DECIMAL(10, 2)) ELSE 0 END) AS total_payment\nFROM trans t\nJOIN disp d ON t.userids_5 = d.sequentialnumbers_0\nWHERE d.sequentialnumbers_1 = 617;\n\n\t----- bird -----\tfinancial",
    "180": "\nSELECT c.sequentialnumbers_0 AS client_id, c.birthdate_2 AS birthdate\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN district dis ON c.agevalues_3 = dis.sequentialnumbers_0\nWHERE c.birthdate_2 BETWEEN '1983-01-01' AND '1987-12-31'\nAND dis.region_2 = 'East Bohemia';\n\n\t----- bird -----\tfinancial",
    "181": "\nSELECT c.sequentialnumbers_0 AS client_id, l.productids_0 AS loan_id\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN loan l ON a.sequentialnumbers_0 = l.idnumbers_1\nWHERE c.gendercode_1 = 'F'\nORDER BY l.valueslist_3 DESC, l.valueslist_5 DESC\nLIMIT 3\n\n\t----- bird -----\tfinancial",
    "182": "\nSELECT COUNT(DISTINCT c.sequentialnumbers_0) \nFROM client AS c\nJOIN disp AS d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account AS a ON d.numericdata_2 = a.sequentialnumbers_0\nJOIN trans AS t ON a.sequentialnumbers_0 = t.allones_1\nWHERE c.gendercode_1 = 'M' \nAND c.birthdate_2 BETWEEN '1974-01-01' AND '1976-12-31'\nAND t.transactiontype_4 = 'payment'\nAND CAST(REPLACE(t.prijem_3, ',', '') AS DECIMAL) > 4000\n\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(a.sequentialnumbers_0) \nFROM account a\nJOIN district d ON a.agevalues_1 = d.sequentialnumbers_0\nWHERE d.citynames_1 = 'Beroun' AND a.datecolumn_3 > '1996-01-01'\n\n\t----- bird -----\tfinancial",
    "184": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN card ca ON d.numericdata_2 = ca.idnumbers_1\nWHERE c.gendercode_1 = 'F' AND ca.tier_2 = 'junior'\n\n\t----- bird -----\tfinancial",
    "185": "\nSELECT CAST(SUM(CASE WHEN T1.gendercode_1 = 'F' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) AS female_proportion\nFROM client AS T1\nJOIN disp AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_1\nJOIN account AS T3 ON T2.numericdata_2 = T3.sequentialnumbers_0\nJOIN district AS T4 ON T1.agevalues_3 = T4.sequentialnumbers_0\nWHERE T4.citynames_1 = 'Prague'\n\n\t----- bird -----\tfinancial",
    "186": "\nSELECT CAST(COUNT(CASE WHEN T1.gendercode_1 = 'M' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM client AS T1 JOIN disp AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_1 JOIN account AS T3 ON T2.numericdata_2 = T3.sequentialnumbers_0 WHERE T3.datecolumn_3 IS NOT NULL\n\n\t----- bird -----\tfinancial",
    "187": "\nSELECT COUNT(DISTINCT c.sequentialnumbers_0) \nFROM client AS c\nJOIN disp AS d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account AS a ON d.numericdata_2 = a.sequentialnumbers_0\nWHERE a.monthlyfee_2 = 'statement of weekly issuance'\n\n\t----- bird -----\tfinancial",
    "188": "\nSELECT a.sequentialnumbers_0, l.valueslist_3 AS approved_amount, a.datecolumn_3 AS account_opening_date\nFROM loan l\nJOIN account a ON l.idnumbers_1 = a.sequentialnumbers_0\nWHERE DATE_PART('year', AGE(a.datecolumn_3, l.datecolumn_2)) > 2 AND a.datecolumn_3 < '1997-01-01'\nORDER BY l.valueslist_3 ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "189": "\nSELECT a.sequentialnumbers_0 AS account_number\nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN account a ON d.numericdata_2 = a.sequentialnumbers_0\nWHERE c.gendercode_1 = 'F'\nAND c.birthdate_2 = (\n    SELECT MIN(birthdate_2)\n    FROM client\n    WHERE gendercode_1 = 'F'\n)\nGROUP BY a.sequentialnumbers_0\nORDER BY AVG(a.valueslist_5) ASC\nLIMIT 1;\n\n\t----- bird -----\tfinancial",
    "190": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM client c\nJOIN district d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE EXTRACT(YEAR FROM c.birthdate_2) = 1920 AND d.region_2 = 'east Bohemia'\n\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(*) FROM loan WHERE valueslist_3 = 24 AND lettercolumn_6 = 'W'\n\n\t----- bird -----\tfinancial",
    "192": "\nSELECT l.productids_0, AVG(l.valueslist_3) AS average_loan_amount\nFROM loan l\nJOIN order o ON l.idnumbers_1 = o.numberslist_1\nJOIN trans t ON o.userids_3 = t.useridentifier_9\nWHERE l.lettercolumn_6 IS NULL AND o.servicecode_5 = 'statement issuance'\nGROUP BY l.productids_0\n\n\t----- bird -----\tfinancial",
    "193": "\nSELECT c.sequentialnumbers_0, d.citynames_1 \nFROM client AS c\nJOIN district AS d ON c.agevalues_3 = d.sequentialnumbers_0\nWHERE EXISTS (\n    SELECT 1 FROM order AS o WHERE o.numberslist_1 = c.sequentialnumbers_0 AND o.servicecode_5 IN ('permanent')\n)\nOR EXISTS (\n    SELECT 1 FROM loan AS l WHERE l.idnumbers_1 = c.sequentialnumbers_0\n);\n\n\t----- bird -----\tfinancial",
    "194": "\nSELECT c.sequentialnumbers_0, c.agevalues_3 \nFROM client c\nJOIN disp d ON c.sequentialnumbers_0 = d.sequentialnumbers_1\nJOIN card ca ON d.numericdata_2 = ca.idnumbers_1 AND ca.tier_2 = 'high level'\nJOIN loan l ON c.sequentialnumbers_0 IN (\n    SELECT a.sequentialnumbers_1 \n    FROM disp a \n    JOIN account b ON a.numericdata_2 = b.sequentialnumbers_0\n    WHERE b.sequentialnumbers_0 = l.idnumbers_1\n)\n\n\t----- bird -----\tfinancial",
    "195": "\nSELECT transactiontype_1 AS bond_type, COUNT(*) AS frequency\nFROM bond\nGROUP BY transactiontype_1\nORDER BY frequency DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE m.positivenegative_1 != 'carcinogenic' AND a.elementtype_2 = 'chlorine'\n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(COUNT_A) AS average_oxygen_atoms\nFROM (\n    SELECT COUNT(*) AS COUNT_A\n    FROM connected C\n    JOIN atom A ON C.transactioncodes_1 = A.transactioncodes_0 AND A.elementtype_2 = 'O'\n    JOIN bond B ON C.transactioncodes_2 = B.transactioncodes_0 AND B.statusindicator_2 = 'SINGLE'\n    GROUP BY C.transactioncodes_0\n) AS oxygen_counts\n\n\t----- bird -----\ttoxicology",
    "198": "\nSELECT AVG(CASE WHEN T3.statusindicator_2 = 'single bond' THEN 1 ELSE 0 END) \nFROM molecule AS T1 \nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_2 \nJOIN bond AS T3 ON T2.transactioncodes_2 = T3.transactioncodes_0 \nWHERE T1.positivenegative_1 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(a.transactioncodes_0) \nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON a.transactiontype_1 = m.transactioncodes_0\nWHERE a.elementtype_2 = 'sodium' AND b.statusindicator_2 != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "200": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c1 ON b.transactioncodes_0 = c1.transactioncodes_2\nJOIN connected c2 ON b.transactioncodes_0 = c2.transactioncodes_2\nWHERE b.statusindicator_2 LIKE '%triple-bonded%'\nAND m.positivenegative_1 LIKE '%carcinogenic%'\nGROUP BY m.transactioncodes_0\nHAVING COUNT(DISTINCT c1.transactioncodes_0) >= 2 AND COUNT(DISTINCT c2.transactioncodes_1) >= 2\n\n\t----- bird -----\ttoxicology",
    "201": "\nSELECT CAST(COUNT(CASE WHEN T1.elementtype_2 = 'C' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM atom AS T1 \nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_0 \nJOIN bond AS T3 ON T2.transactioncodes_2 = T3.transactioncodes_0 AND T3.statusindicator_2 = 'double' \n\n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(*) AS triple_bond_count \nFROM bond \nWHERE transactiontype_1 IN (\n    SELECT transactioncodes_0 \n    FROM molecule \n)\nAND statusindicator_2 = 'triple'\n\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(*) FROM atom WHERE elementtype_2 != 'Br'\n\n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(m.transactioncodes_0) \nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nWHERE b.statusindicator_2 LIKE '%carcinogenic%'\nLIMIT 100;\n\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT DISTINCT m.transactioncodes_0\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 = 'silicon'\n\n\t----- bird -----\ttoxicology",
    "206": "\nSELECT DISTINCT a1.transactioncodes_0 \nFROM connected c\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE b.transactioncodes_0 = 'TR004_8_9'\nUNION\nSELECT DISTINCT a2.transactioncodes_0 \nFROM connected c\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE b.transactioncodes_0 = 'TR004_8_9'\n\n\t----- bird -----\ttoxicology",
    "207": "\nSELECT DISTINCT a1.transactioncodes_0 AS element1, a2.transactioncodes_0 AS element2\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 = 'double'\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "208": "\nSELECT elementtype_2 AS most_numerous_label\nFROM atom\nWHERE transactioncodes_0 IN (\n    SELECT transactioncodes_1\n    FROM connected\n    WHERE transactioncodes_2 IN (\n        SELECT transactioncodes_0\n        FROM bond\n        WHERE statusindicator_2 LIKE '%hydrogen%'\n    )\n)\nGROUP BY elementtype_2\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "209": "\nSELECT b.statusindicator_2 FROM atom a JOIN connected c ON a.transactioncodes_0 = c.transactioncodes_1 JOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 WHERE a.elementtype_2 = 'Tellurium'\n\n\t----- bird -----\ttoxicology",
    "210": "\nSELECT a1.transactioncodes_0 AS atom1, a2.transactioncodes_0 AS atom2\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 = 'single'\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT a1.transactioncodes_0 AS atom1, a2.transactioncodes_0 AS atom2\nFROM connected c\nJOIN molecule m ON c.transactioncodes_2 = m.transactioncodes_0\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE m.positivenegative_1 != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT elementtype_2 AS least_numerous_element\nFROM atom A\nJOIN connected C ON A.transactioncodes_0 = C.transactioncodes_0\nJOIN bond B ON C.transactioncodes_2 = B.transactioncodes_0\nJOIN molecule M ON B.transactiontype_1 = M.transactioncodes_0\nWHERE statusindicator_2 != 'carcinogenic'\nGROUP BY elementtype_2\nORDER BY COUNT(*) ASC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "213": "\nSELECT b.transactiontype_1 FROM bond AS b JOIN connected AS c ON b.transactioncodes_0 = c.transactioncodes_2 WHERE (c.transactioncodes_0 = 'TR004_8' AND c.transactioncodes_1 = 'TR004_20') OR (c.transactioncodes_0 = 'TR004_20' AND c.transactioncodes_1 = 'TR004_8')\n\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT DISTINCT m.positivenegative_1 \nFROM molecule m\nWHERE m.transactioncodes_0 NOT IN (\n    SELECT c.transactioncodes_1 \n    FROM connected c\n    JOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\n    WHERE a.elementtype_2 = 'tin'\n)\nAND EXISTS (\n    SELECT 1 \n    FROM connected c\n    JOIN atom a ON c.transactioncodes_0 = a.transactioncodes_0\n    WHERE a.elementtype_2 = 'tin'\n) \nUNION ALL \nSELECT DISTINCT m.positivenegative_1 \nFROM molecule m\nWHERE NOT EXISTS (\n    SELECT 1 \n    FROM connected c\n    JOIN atom a ON c.transactioncodes_0 = a.transactioncodes_0\n    WHERE a.elementtype_2 = 'tin' AND c.transactioncodes_1 IN (\n        SELECT transactioncodes_0 \n        FROM atom \n        WHERE elementtype_2 = 'tin'\n    )\n)\n\n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(DISTINCT A1.transactioncodes_0) \nFROM atom AS A1\nJOIN connected AS C ON A1.transactioncodes_0 = C.transactioncodes_0\nJOIN bond AS B ON C.transactioncodes_2 = B.transactioncodes_0\nJOIN atom AS A2 ON C.transactioncodes_1 = A2.transactioncodes_0\nWHERE A1.elementtype_2 IN ('iodine', 'sulfur') \nAND A2.elementtype_2 IN ('iodine', 'sulfur')\nAND B.statusindicator_2 = 'single'\nGROUP BY B.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "216": "\nSELECT DISTINCT a1.transactioncodes_0 AS atom1, a2.transactioncodes_0 AS atom2\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 = 'triple'\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "217": "\nSELECT DISTINCT a1.transactioncodes_0 \nFROM atom a1\nJOIN connected c ON a1.transactioncodes_0 = c.transactioncodes_1\nJOIN molecule m ON a1.transactiontype_1 = m.transactioncodes_0\nWHERE m.transactioncodes_0 = 'TR181'\nUNION\nSELECT DISTINCT a2.transactioncodes_0 \nFROM atom a2\nJOIN connected c ON a2.transactioncodes_0 = c.transactioncodes_0\nJOIN molecule m ON a2.transactiontype_1 = m.transactioncodes_0\nWHERE m.transactioncodes_0 = 'TR181';\n\n\t----- bird -----\ttoxicology",
    "218": "\nWITH carcinogenic_molecules AS (\n    SELECT transactioncodes_0 FROM molecule WHERE positivenegative_1 = 'carcinogenic'\n),\nfluorine_containing_molecules AS (\n    SELECT DISTINCT m.transactioncodes_0 \n    FROM molecule m\n    JOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\n    WHERE a.elementtype_2 = 'F'\n)\nSELECT CAST(COUNT(DISTINCT cm.transactioncodes_0) - COUNT(DISTINCT fcm.transactioncodes_0) AS FLOAT) * 100 / COUNT(DISTINCT cm.transactioncodes_0) AS percentage\nFROM carcinogenic_molecules cm\nLEFT JOIN fluorine_containing_molecules fcm ON cm.transactioncodes_0 = fcm.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "219": "\nSELECT CAST(COUNT(CASE WHEN m.positivenegative_1 = 'carcinogenic' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nWHERE c.transactioncodes_2 IN (\n    SELECT transactioncodes_0 FROM bond WHERE statusindicator_2 = 'triple'\n)\n\n\t----- bird -----\ttoxicology",
    "220": "\nSELECT a.elementtype_2\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = a.transactiontype_1\nWHERE m.transactioncodes_0 = 'TR000'\nGROUP BY a.elementtype_2\nORDER BY a.elementtype_2\nLIMIT 3;\n\n\t----- bird -----\ttoxicology",
    "221": "\nSELECT a1.transactioncodes_0, a2.transactioncodes_0 \nFROM connected c\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON m.transactioncodes_0 = b.transactiontype_1\nWHERE m.transactioncodes_0 = 'TR001' AND b.transactioncodes_0 = 'TR001_2_6'\n\n\t----- bird -----\ttoxicology",
    "222": "\nSELECT SUM(CASE WHEN positivenegative_1 = 'carcinogenic' THEN 1 ELSE 0 END) - \n       SUM(CASE WHEN positivenegenative_1 != 'carcinogenic' THEN 1 ELSE 0 END) AS difference\nFROM molecule\nWHERE positivenegative_1 IN ('carcinogenic', 'non-carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT T1.transactioncodes_0, T2.transactioncodes_1 FROM bond AS T1 JOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_2 WHERE T1.transactioncodes_0 = 'TR_000_2_5'\n\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT DISTINCT T3.transactioncodes_0 \nFROM connected AS T1\nJOIN connected AS T2 ON T1.transactioncodes_2 = T2.transactioncodes_2 AND T1.transactioncodes_0 = T2.transactioncodes_1\nJOIN bond AS T3 ON T2.transactioncodes_2 = T3.transactioncodes_0\nWHERE T1.transactioncodes_0 = 'TR000_2' OR T2.transactioncodes_0 = 'TR000_2'\n\n\t----- bird -----\ttoxicology",
    "225": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE b.statusindicator_2 LIKE '%double%'\nGROUP BY m.transactioncodes_0\nORDER BY m.transactioncodes_0 ASC\nLIMIT 5;\n\n\t----- bird -----\ttoxicology",
    "226": "\nSELECT CAST(COUNT(CASE WHEN T3.statusindicator_2 = 'double' THEN 1 END) AS FLOAT) * 100 / COUNT(T3.transactioncodes_0) \nFROM molecule AS T1 \nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_2 \nJOIN bond AS T3 ON T2.transactioncodes_2 = T3.transactioncodes_0 \nWHERE T1.transactioncodes_0 = 'TR008'\n\n\t----- bird -----\ttoxicology",
    "227": "\nSELECT CAST(COUNT(CASE WHEN positivenegative_1 = 'carcinogenic' THEN transactioncodes_0 END) AS FLOAT) * 100 / COUNT(*) AS carcinogenic_percentage\nFROM molecule\n\n\t----- bird -----\ttoxicology",
    "228": "\nSELECT CAST(SUM(CASE WHEN T1.elementtype_2 = 'H' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(T1.transactioncodes_0) AS hydrogen_percentage_accounted\nFROM atom AS T1\nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_0\nWHERE T2.transactioncodes_1 IN (\n    SELECT transactioncodes_0 FROM molecule WHERE positivenegative_1 = 'TR206'\n)\n\n\t----- bird -----\ttoxicology",
    "229": "\nSELECT b.transactiontype_1 FROM bond b JOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2 WHERE c.transactioncodes_0 = 'TR000' OR c.transactioncodes_1 = 'TR000'\n\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT atom.elementtype_2 FROM atom\nJOIN connected ON atom.transactioncodes_0 = connected.transactioncodes_0\nJOIN bond ON bond.transactioncodes_0 = connected.transactioncodes_2\nJOIN molecule ON molecule.transactioncodes_0 = atom.transactiontype_1\nWHERE molecule.transactioncodes_0 = 'TR060' AND bond.statusindicator_2 IN ('toxicology', 'label')\n\n\t----- bird -----\ttoxicology",
    "231": "\nSELECT b.transactiontype_1, COUNT(b.transactioncodes_0) AS bond_count,\nCASE \n    WHEN m.positivenegative_1 = 'carcinogenic' THEN 'Yes'\n    ELSE 'No'\nEND AS is_carcinogenic\nFROM bond b\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = 'TR018'\nGROUP BY b.transactiontype_1, m.positivenegative_1\nORDER BY bond_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "232": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE b.statusindicator_2 = 'SINGLE' AND m.positivenegative_1 != 'CARCINOGENIC'\nGROUP BY m.transactioncodes_0\nORDER BY m.transactioncodes_0 ASC\nLIMIT 3;\n\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT b.transactioncodes_0, a1.transactioncodes_0 AS atom1, a2.transactioncodes_0 AS atom2\nFROM bond b\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nJOIN molecule m ON b.transactiontype_1 = m.transactioncodes_0\nWHERE m.transactioncodes_0 = 'TR006'\nORDER BY b.transactioncodes_0 ASC\nLIMIT 2;\n\n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(DISTINCT T3.transactioncodes_2) AS bond_count\nFROM molecule AS T1\nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_0\nWHERE T1.transactioncodes_0 = 'TR009' AND (T2.transactioncodes_1 = '12' OR T2.transactioncodes_0 = '12')\n\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE m.positivenegative_1 LIKE '%carcinogenic%' AND a.elementtype_2 = 'bromine'\n\n\t----- bird -----\ttoxicology",
    "236": "\nSELECT b.transactiontype_1, a1.transactioncodes_0 AS atom1, a2.transactioncodes_0 AS atom2\nFROM bond b\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE b.transactioncodes_0 = 'TR001_6_9'\n\n\t----- bird -----\ttoxicology",
    "237": "\nSELECT m.transactioncodes_0, m.positivenegative_1 \nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.transactioncodes_0 = 'TR001_10'\nAND m.positivenegative_1 IN ('carcinogenic', 'not carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(DISTINCT T1.transactioncodes_0) \nFROM molecule AS T1 \nJOIN bond AS T2 ON T1.transactioncodes_0 = T2.transactiontype_1 \nWHERE T2.statusindicator_2 = 'triple'\n\n\t----- bird -----\ttoxicology",
    "239": "\nSELECT COUNT(*) FROM connected WHERE transactioncodes_0 = '19'\n\n\t----- bird -----\ttoxicology",
    "240": "\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM atom \nJOIN molecule ON atom.transactiontype_1 = molecule.transactioncodes_0 \nWHERE molecule.transactioncodes_0 = 'TR004'\n\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(*) FROM molecule WHERE transactioncodes_0 NOT IN (SELECT transactiontype_1 FROM bond WHERE statusindicator_2 LIKE '%carcinogenic%')\n\n\t----- bird -----\ttoxicology",
    "242": "\nSELECT DISTINCT m.transactioncodes_0\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.transactioncodes_0 BETWEEN '21' AND '25'\nAND b.statusindicator_2 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "243": "\nSELECT DISTINCT b.transactioncodes_0\nFROM bond AS b\nJOIN connected AS c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom AS a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom AS a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE a1.elementtype_2 IN ('phosphorus', 'nitrogen') AND a2.elementtype_2 IN ('phosphorus', 'nitrogen')\n\n\t----- bird -----\ttoxicology",
    "244": "\nWITH DoubleBonds AS (\n    SELECT transactioncodes_0, COUNT(transactioncodes_2) AS double_bond_count\n    FROM connected\n    JOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0\n    WHERE statusindicator_2 = 'double'\n    GROUP BY transactioncodes_0\n),\nMoleculeWithMaxDoubleBonds AS (\n    SELECT transactioncodes_0\n    FROM DoubleBonds\n    ORDER BY double_bond_count DESC\n    LIMIT 1\n)\nSELECT m.transactioncodes_0, m.positivenegative_1\nFROM MoleculeWithMaxDoubleBonds mb\nJOIN molecule m ON mb.transactioncodes_0 = m.transactioncodes_0;\n\n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT COUNT(DISTINCT transactioncodes_2) AS bond_count\n    FROM connected\n    JOIN atom ON connected.transactioncodes_0 = atom.transactioncodes_0\n    WHERE elementtype_2 = 'iodine'\n    GROUP BY connected.transactioncodes_0\n) AS iodine_bond_counts\n\n\t----- bird -----\ttoxicology",
    "246": "\nSELECT b.transactioncodes_0, m.transactioncodes_0 \nFROM bond b\nJOIN connected c ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE c.transactioncodes_0 = '45'\n\n\t----- bird -----\ttoxicology",
    "247": "\nSELECT a.transactioncodes_0, a.elementtype_2 \nFROM atom a\nLEFT JOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0 OR a.transactioncodes_0 = c.transactioncodes_1\nWHERE c.transactioncodes_0 IS NULL AND c.transactioncodes_1 IS NULL\n\n\t----- bird -----\ttoxicology",
    "248": "\nSELECT a1.transactioncodes_0, a2.transactioncodes_0 \nFROM connected c\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON b.transactiontype_1 = m.transactioncodes_0\nWHERE m.transactioncodes_0 = 'TR447' AND b.statusindicator_2 = 'triple'\n\n\t----- bird -----\ttoxicology",
    "249": "\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM atom \nJOIN connected ON atom.transactioncodes_0 = connected.transactioncodes_0 \nWHERE connected.transactioncodes_1 IN (\n    SELECT transactioncodes_0 FROM molecule WHERE transactioncodes_0 = 'TR144_8_19'\n);\n\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT m.transactioncodes_0, COUNT(b.transactioncodes_0) AS double_bond_count\nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 = 'double'\nWHERE m.positivenegative_1 = 'carcinogenic'\nGROUP BY m.transactioncodes_0\nORDER BY double_bond_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "251": "\nWITH CarcinogenicMolecules AS (\n    SELECT transactioncodes_0 FROM molecule WHERE positivenegative_1 = 'carcinogenic'\n),\nAtomsInCarcinogens AS (\n    SELECT DISTINCT a.transactioncodes_0, a.elementtype_2 \n    FROM atom a\n    JOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\n    JOIN CarcinogenicMolecules m ON m.transactioncodes_0 = c.transactioncodes_1\n)\nSELECT elementtype_2 AS least_common_element\nFROM (\n    SELECT elementtype_2, COUNT(*) AS count\n    FROM AtomsInCarcinogens\n    GROUP BY elementtype_2\n) t\nORDER BY t.count ASC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "252": "\nSELECT a1.transactioncodes_0, a2.transactioncodes_0 \nFROM atom AS a1\nJOIN connected AS c ON a1.transactioncodes_0 = c.transactioncodes_0\nJOIN atom AS a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE a1.elementtype_2 = 'lead' AND a1.transactioncodes_0 != a2.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT DISTINCT a1.transactioncodes_0 AS element1, a2.transactioncodes_0 AS element2\nFROM connected c\nJOIN atom a1 ON c.transactioncodes_1 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_2 = a2.transactioncodes_0\nWHERE c.transactioncodes_2 IN (\n    SELECT transactioncodes_0 FROM bond WHERE statusindicator_2 LIKE '%triple%'\n)\n\n\t----- bird -----\ttoxicology",
    "254": "\nWITH atom_combinations AS (\n    SELECT c.transactioncodes_2, a1.elementtype_2 AS element_type_a, a2.elementtype_2 AS element_type_b\n    FROM connected c\n    JOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\n    JOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\n),\nmost_common_combination AS (\n    SELECT element_type_a, element_type_b, COUNT(*) as count\n    FROM atom_combinations\n    GROUP BY element_type_a, element_type_b\n    ORDER BY count DESC\n    LIMIT 1\n)\nSELECT \n    (SELECT CAST(COUNT(*) AS FLOAT) FROM atom_combinations WHERE element_type_a = most_common.element_type_a AND element_type_b = most_common.element_type_b) / \n    (SELECT COUNT(*) FROM bond) * 100 as percentage\nFROM most_common_combination most_common;\n\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT CAST(COUNT(CASE WHEN T3.statusindicator_2 = 'carcinogenic' THEN 1 END) AS FLOAT) / COUNT(*) AS proportion_carcinogenic_single_bonds\nFROM bond AS T3\nWHERE T3.statusindicator_2 IN ('single', 'carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(*) AS total_atoms\nFROM atom\nWHERE elementtype_2 IN ('carbon', 'hydrogen')\n\n\t----- bird -----\ttoxicology",
    "257": "\nSELECT transactioncodes_0 FROM atom WHERE elementtype_2 = 'sulfur'\n\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT b.transactioncodes_0 AS bond_type\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE a.elementtype_2 = 'Tin'\nGROUP BY b.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(DISTINCT A.transactioncodes_0) AS element_count\nFROM atom A\nJOIN connected C ON A.transactioncodes_0 = C.transactioncodes_0 OR A.transactioncodes_0 = C.transactioncodes_1\nJOIN bond B ON C.transactioncodes_2 = B.transactioncodes_0\nWHERE B.statusindicator_2 = 'single'\n\n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(DISTINCT a.transactioncodes_0) \nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE (a.elementtype_2 = 'phosphorus' OR a.elementtype_2 = 'bromine')\nAND b.statusindicator_2 = 'triple-bond'\n\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT DISTINCT b.transactioncodes_0 AS bond_id\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0 OR a.transactioncodes_0 = c.transactioncodes_1\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE m.positivenegative_1 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "262": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nWHERE b.statusindicator_2 != 'carcinogenic'\nAND b.transactioncodes_0 IN (\n    SELECT cb.transactioncodes_2\n    FROM connected cb\n    WHERE cb.transactioncodes_2 IN (\n        SELECT b.transactioncodes_0\n        FROM bond b\n        WHERE b.statusindicator_2 = 'single'\n    )\n)\n\n\t----- bird -----\ttoxicology",
    "263": "\nSELECT CAST(COUNT(CASE WHEN T1.elementtype_2 = 'Cl' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS chlorine_percentage\nFROM atom AS T1\nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_0\nJOIN bond AS T3 ON T2.transactioncodes_2 = T3.transactioncodes_0\nWHERE T3.statusindicator_2 = 'single'\n\n\t----- bird -----\ttoxicology",
    "264": "\nSELECT transactioncodes_0 FROM molecule WHERE transactioncodes_0 IN ('TR000', 'TR001', 'TR002')\n\n\t----- bird -----\ttoxicology",
    "265": "\nSELECT transactioncodes_0 FROM molecule WHERE positivenegative_1 != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(*)\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE m.transactioncodes_0 BETWEEN 'TR000' AND 'TR030'\nAND a.elementtype_2 IN ('benzene', 'asbestos');\n\n\t----- bird -----\ttoxicology",
    "267": "\nSELECT b.transactioncodes_0 AS bond_type\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON c.transactioncodes_0 = m.transactioncodes_0\nWHERE m.transactioncodes_0 BETWEEN 'TR000' AND 'TR050'\nGROUP BY b.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "268": "\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM connected \nJOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0 \nJOIN atom ON connected.transactioncodes_0 = atom.transactioncodes_0 \nWHERE bond.transactioncodes_0 = 'TR001_10_11'\nUNION\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM connected \nJOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0 \nJOIN atom ON connected.transactioncodes_1 = atom.transactioncodes_0 \nWHERE bond.transactioncodes_0 = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(DISTINCT b.transactioncodes_0) \nFROM bond b\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE a.elementtype_2 = 'iodine'\n\n\t----- bird -----\ttoxicology",
    "270": "\nSELECT m.transactioncodes_0, COUNT(CASE WHEN b.statusindicator_2 = 'carcinogenic' THEN 1 END) AS carcinogenic_count, \n       COUNT(CASE WHEN b.statusindicator_2 != 'carcinogenic' THEN 1 END) AS non_carcinogenic_count\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE a.elementtype_2 = 'Calcium'\nGROUP BY m.transactioncodes_0;\n\n\t----- bird -----\ttoxicology",
    "271": "\nSELECT CASE WHEN COUNT(DISTINCT CASE WHEN t3.elementtype_2 IN ('Cl', 'C') THEN t3.transactioncodes_0 END) = 2 THEN 'YES' ELSE 'NO' END AS result\nFROM bond AS t1\nJOIN connected AS t2 ON t1.transactioncodes_0 = t2.transactioncodes_2\nJOIN atom AS t3 ON t2.transactioncodes_1 = t3.transactioncodes_0\nWHERE t1.transactioncodes_0 = 'TR001_1_8';\n\n\t----- bird -----\ttoxicology",
    "272": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c1 ON b.transactioncodes_0 = c1.transactioncodes_2\nJOIN atom a1 ON c1.transactioncodes_0 = a1.transactioncodes_0 AND a1.elementtype_2 = 'carbon'\nJOIN connected c2 ON b.transactioncodes_0 = c2.transactioncodes_2\nJOIN atom a2 ON c2.transactioncodes_1 = a2.transactioncodes_0 AND a2.elementtype_2 = 'carbon'\nWHERE b.statusindicator_2 = 'triple bond' AND m.positivenegative_1 != 'carcinogenic'\nLIMIT 2;\n\n\t----- bird -----\ttoxicology",
    "273": "\nSELECT CAST(COUNT(DISTINCT m.transactioncodes_0) AS FLOAT) * 100 / (SELECT COUNT(*) FROM molecule) \nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON a.transactiontype_1 = m.transactioncodes_0\nWHERE a.elementtype_2 = 'chlorine'\nAND b.statusindicator_2 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "274": "\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM atom \nJOIN molecule ON atom.transactiontype_1 = molecule.transactioncodes_0 \nWHERE molecule.transactioncodes_0 = 'TR001'\n\n\t----- bird -----\ttoxicology",
    "275": "\nSELECT DISTINCT m.transactioncodes_0\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nWHERE b.statusindicator_2 = 'double'\n\n\t----- bird -----\ttoxicology",
    "276": "\nSELECT a1.transactioncodes_0, a2.transactioncodes_0\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 = 'triple'\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE c.transactioncodes_2 IN (\n    SELECT transactioncodes_0 FROM bond WHERE statusindicator_2 = 'triple'\n)\nGROUP BY a1.transactioncodes_0, a2.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT atom.transactioncodes_0, atom.elementtype_2\nFROM connected\nJOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0 AND bond.transactioncodes_0 = 'TR005_16_26'\nJOIN atom ON connected.transactioncodes_0 = atom.transactioncodes_0 OR connected.transactioncodes_1 = atom.transactioncodes_0\nWHERE connected.transactioncodes_2 = 'TR005_16_26'\n\n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(*) \nFROM bond AS b\nJOIN molecule AS m ON b.transactiontype_1 = m.transactioncodes_0\nWHERE b.statusindicator_2 = 'non-carcinogenic' AND b.transactiontype_1 IN (\n    SELECT transactiontype_1 \n    FROM atom \n    WHERE elementtype_2 = 'single'\n)\n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT statusindicator_2 FROM bond WHERE transactioncodes_0 = 'TR001_10_11'\n\n\t----- bird -----\ttoxicology",
    "280": "\nSELECT b.transactioncodes_0, m.positivenegative_1 AS carcinogenic_or_not\nFROM bond b\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON c.transactioncodes_0 = m.transactioncodes_0\nWHERE b.statusindicator_2 = 'triple'\n\n\t----- bird -----\ttoxicology",
    "281": "\nSELECT m.transactioncodes_0, a.elementtype_2 AS toxicology_element\nFROM molecule m\nJOIN connected c1 ON m.transactioncodes_0 = c1.transactioncodes_1\nJOIN atom a ON c1.transactioncodes_2 = a.transactioncodes_0 AND a.transactiontype_1 = 'carcinogenic'\nWHERE c1.transactioncodes_0 IN (\n    SELECT transactioncodes_0\n    FROM connected\n    WHERE transactioncodes_1 = m.transactioncodes_0\n    ORDER BY transactioncodes_0\n    LIMIT 3, 1\n)\n\n\t----- bird -----\ttoxicology",
    "282": "\nSELECT COUNT(CASE WHEN T1.elementtype_2 = 'Hydrogen' THEN 1 END) * 1.0 / COUNT(*) AS ratio, T1.elementtype_2 AS label\nFROM atom AS T1\nJOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_0\nJOIN molecule AS T3 ON T2.transactioncodes_1 = T3.transactioncodes_0\nWHERE T3.transactioncodes_0 = 'TR006'\n\n\t----- bird -----\ttoxicology",
    "283": "\nSELECT m.transactioncodes_0, m.positivenegative_1 \nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 = 'Calcium'\nAND EXISTS (\n    SELECT 1 FROM bond b JOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2 WHERE c.transactioncodes_0 IN (SELECT transactioncodes_0 FROM atom WHERE elementtype_2 = 'Calcium') AND b.statusindicator_2 LIKE '%carcinogenic%'\n)\n\n\t----- bird -----\ttoxicology",
    "284": "\nSELECT DISTINCT b.transactioncodes_0 AS bond_type\nFROM connected c\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0 AND a.elementtype_2 = 'Tellurium'\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "285": "\nSELECT DISTINCT a1.transactioncodes_0 AS element1, a2.transactioncodes_0 AS element2\nFROM connected c\nJOIN atom a1 ON c.transactioncodes_1 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_2 = a2.transactioncodes_0\nWHERE c.transactioncodes_0 IN (\n    SELECT transactioncodes_0 FROM bond WHERE transactiontype_1 = 'TR001_10_11'\n)\n\n\t----- bird -----\ttoxicology",
    "286": "\nWITH total_molecules AS (\n    SELECT COUNT(*) AS total_count FROM molecule\n),\ntriple_bond_molecules AS (\n    SELECT DISTINCT c.transactioncodes_1 AS transactioncode\n    FROM connected c\n    JOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\n    WHERE b.statusindicator_2 LIKE '%TRIPLE-BOND%'\n)\nSELECT \n    (CAST((SELECT COUNT(*) FROM triple_bond_molecules) AS FLOAT) / (SELECT total_count FROM total_molecules)) * 100 AS percentage_triple_bond_compounds\n\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT CAST(COUNT(CASE WHEN b.statusindicator_2 = 'double-bond' THEN 1 END) AS FLOAT) * 100 / COUNT(c.transactioncodes_2) \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_0 OR m.transactioncodes_0 = c.transactioncodes_1\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE m.transactioncodes_0 = 'TR047' OR EXISTS (SELECT 1 FROM molecule WHERE transactioncodes_0 = c.transactioncodes_0 AND positivenegative_1 IS NOT DISTINCT FROM m.positivenegative_1)\nOR m.transactioncodes_0 = c.transactioncodes_1\n\n\t----- bird -----\ttoxicology",
    "288": "\nSELECT m.transactioncodes_0, m.positivenegative_1 \nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.transactioncodes_0 IN (\n    SELECT transactioncodes_0 FROM atom WHERE transactioncodes_0 = 'TR001_1'\n)\nAND m.positivenegative_1 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "289": "\nSELECT CASE WHEN EXISTS (SELECT 1 FROM molecule WHERE transactioncodes_0 = 'TR151') THEN 'Yes' ELSE 'No' END AS is_carcinogenic\n\n\t----- bird -----\ttoxicology",
    "290": "\nSELECT T3.elementtype_2 FROM molecule AS T1 JOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_2 JOIN atom AS T3 ON T2.transactioncodes_1 = T3.transactioncodes_0 WHERE T1.transactioncodes_0 = 'TR151' AND T3.elementtype_2 LIKE '%toxic%'\n\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(*) FROM molecule WHERE positivenegative_1 = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT a.transactioncodes_0, m.transactioncodes_0 AS molecule_id\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = b.transactiontype_1\nWHERE a.elementtype_2 = 'carbon' AND m.transactioncodes_0 BETWEEN 'TR010' AND 'TR050'\nGROUP BY a.transactioncodes_0, m.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(*) \nFROM atom AS a\nJOIN connected AS c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond AS b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule AS m ON b.transactiontype_1 = m.transactioncodes_0\nWHERE m.positivenegative_1 = 'carcinogenic compounds'\n\n\t----- bird -----\ttoxicology",
    "294": "\nSELECT DISTINCT b.transactioncodes_0 AS bond_id\nFROM connected c\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0 AND a.elementtype_2 IN ('C', 'H') -- Assuming carcinogenic compounds are organic and contain C or H\nJOIN molecule m ON a.transactiontype_1 = m.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE m.positivenegative_1 LIKE '%carcinogenic%' AND b.statusindicator_2 LIKE '%double-bond%'\n\n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(a.transactioncodes_0) \nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule m ON a.transactiontype_1 = m.transactioncodes_0\nWHERE a.elementtype_2 = 'hydrogen' AND b.statusindicator_2 LIKE '%carcinogenic compound%'\n\n\t----- bird -----\ttoxicology",
    "296": "\nSELECT m.transactioncodes_0 \nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE c.transactioncodes_0 = 'TR00_1' AND c.transactioncodes_1 IN (\n    SELECT transactioncodes_0 \n    FROM atom \n    WHERE transactioncodes_0 LIKE 'TR00_1%'\n) AND b.transactioncodes_0 = 'TR00_1_2'\n\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT a.transactioncodes_0 \nFROM atom a\nLEFT JOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0 OR a.transactioncodes_0 = c.transactioncodes_1\nLEFT JOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE a.elementtype_2 = 'carbon'\nAND b.transactioncodes_0 IS NULL\nGROUP BY a.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "298": "\nSELECT CAST(COUNT(DISTINCT CASE WHEN a.elementtype_2 = 'hydrogen' THEN m.transactioncodes_0 END) AS FLOAT) * 100 / COUNT(DISTINCT m.transactioncodes_0) AS percentage\nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE EXISTS (\n    SELECT 1 FROM bond b WHERE c.transactioncodes_2 = b.transactioncodes_0 AND b.statusindicator_2 LIKE '%carcinogenic%'\n)\n\n\t----- bird -----\ttoxicology",
    "299": "\nSELECT positivenegative_1 FROM molecule WHERE transactioncodes_0 = 'TR124'\n\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM connected \nJOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0 \nJOIN atom ON connected.transactioncodes_1 = atom.transactioncodes_0 \nWHERE bond.transactioncodes_0 = 'TR186'\nUNION ALL\nSELECT atom.transactioncodes_0, atom.elementtype_2 \nFROM connected \nJOIN bond ON connected.transactioncodes_2 = bond.transactioncodes_0 \nJOIN atom ON connected.transactioncodes_0 = atom.transactioncodes_0 \nWHERE bond.transactioncodes_0 = 'TR186'\n\n\t----- bird -----\ttoxicology",
    "301": "\nSELECT b.transactiontype_1 FROM bond AS b JOIN connected AS c ON b.transactioncodes_0 = c.transactioncodes_2 WHERE c.transactioncodes_2 = 'TR007_4_19' LIMIT 1\n\n\t----- bird -----\ttoxicology",
    "302": "\nSELECT a.elementtype_2 FROM atom AS a JOIN connected AS c ON a.transactioncodes_0 = c.transactioncodes_0 WHERE c.transactioncodes_2 = 'TR001_2_4'\n\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(c.transactioncodes_2) AS double_bonds_count, m.positivenegative_1 AS carcinogenicity\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE m.transactioncodes_0 = 'TR006' AND b.statusindicator_2 = 'double'\n\n\t----- bird -----\ttoxicology",
    "304": "\nSELECT m.transactioncodes_0 AS molecule, a.transactioncodes_0 AS element\nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE m.positivenegative_1 LIKE '%carcinogenic%';\n\n\t----- bird -----\ttoxicology",
    "305": "\nSELECT b.transactioncodes_0 AS bond_id, a1.transactioncodes_0 AS atom1_id, a2.transactioncodes_0 AS atom2_id\nFROM connected c\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE b.statusindicator_2 = 'single'\n\n\t----- bird -----\ttoxicology",
    "306": "\nSELECT m.transactioncodes_0, a1.transactioncodes_0 AS element1, a2.transactioncodes_0 AS element2, a3.transactioncodes_0 AS element3\nFROM molecule m\nJOIN connected c1 ON m.transactioncodes_0 = c1.transactiontype_1\nJOIN atom a1 ON c1.transactioncodes_0 = a1.transactioncodes_0\nJOIN connected c2 ON m.transactioncodes_0 = c2.transactiontype_1 AND c1.transactioncodes_1 = c2.transactioncodes_1\nJOIN atom a2 ON c2.transactioncodes_0 = a2.transactioncodes_0\nJOIN connected c3 ON m.transactioncodes_0 = c3.transactiontype_1 AND c2.transactioncodes_1 = c3.transactioncodes_1\nJOIN bond b ON c3.transactioncodes_2 = b.transactioncodes_0\nWHERE b.statusindicator_2 = 'triple'\nGROUP BY m.transactioncodes_0, a1.transactioncodes_0, a2.transactioncodes_0, a3.transactioncodes_0\nORDER BY m.transactioncodes_0;\n\n\t----- bird -----\ttoxicology",
    "307": "\nSELECT a1.elementtype_2, a2.elementtype_2 \nFROM connected c\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE b.transactioncodes_0 = 'TR000_2_3'\n\n\t----- bird -----\ttoxicology",
    "308": "\nSELECT COUNT(DISTINCT b.transactioncodes_0) \nFROM bond AS b\nJOIN connected AS c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom AS a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom AS a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE (a1.elementtype_2 = 'chlorine' OR a2.elementtype_2 = 'chlorine')\n\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT a.transactioncodes_0, COUNT(DISTINCT b.transactioncodes_0) AS bond_count\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = a.transactiontype_1\nWHERE m.transactioncodes_0 = 'TR346'\nGROUP BY a.transactioncodes_0\n\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) AS total_molecules, \n       SUM(CASE WHEN b.statusindicator_2 = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_count\nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nWHERE b.statusindicator_2 IN ('double', 'carcinogenic')\nGROUP BY m.transactioncodes_0\nHAVING COUNT(DISTINCT CASE WHEN b.statusindicator_2 = 'double' THEN b.transactioncodes_0 END) > 0\n\n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nLEFT JOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nLEFT JOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0 AND a.elementtype_2 != 'S'\nWHERE c.transactioncodes_2 NOT IN (\n    SELECT transactioncodes_0 FROM bond WHERE statusindicator_2 LIKE '%double%'\n) OR c.transactioncodes_2 IS NULL\nGROUP BY m.transactioncodes_0\nHAVING COUNT(DISTINCT a.transactioncodes_0) = 0\n\n\t----- bird -----\ttoxicology",
    "312": "\nSELECT T3.statusindicator_2 FROM connected AS T1 JOIN bond AS T3 ON T1.transactioncodes_2 = T3.transactioncodes_0 WHERE T3.transactioncodes_0 = 'TR001_2_4'\n\n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(*) \nFROM atom AS a\nJOIN connected AS c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN molecule AS m ON m.transactioncodes_0 = c.transactioncodes_2\nWHERE m.transactioncodes_0 = 'TR005'\n\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(*) AS single_bond_count \nFROM bond \nWHERE statusindicator_2 = 'single';\n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 LIKE '%cl%'\nAND EXISTS (\n    SELECT 1 FROM bond b JOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\n    WHERE b.statusindicator_2 = 'carcinogenic'\n    AND (c.transactioncodes_0 = m.transactioncodes_0 OR c.transactioncodes_1 = m.transactioncodes_0)\n)\n\t----- bird -----\ttoxicology",
    "316": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 LIKE '%c%'\nAND NOT EXISTS (\n    SELECT 1 FROM bond b JOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\n    WHERE b.statusindicator_2 LIKE '%carcinogenic%' AND b.transactiontype_1 = m.transactioncodes_0\n)\n\n\t----- bird -----\ttoxicology",
    "317": "\nSELECT CAST(COUNT(DISTINCT m.transactioncodes_0) AS FLOAT) / (SELECT COUNT(*) FROM molecule WHERE positivenegative_1 = 'Carcinogenic') * 100 \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE m.positivenegative_1 = 'Carcinogenic' AND a.elementtype_2 = 'Chlorine'\n\n\t----- bird -----\ttoxicology",
    "318": "\nSELECT T4.transactioncodes_0 FROM bond AS T1 JOIN connected AS T2 ON T1.transactioncodes_0 = T2.transactioncodes_2 JOIN atom AS T3 ON T2.transactioncodes_1 = T3.transactioncodes_0 JOIN molecule AS T4 ON T3.transactiontype_1 = T4.transactioncodes_0 WHERE T1.transactioncodes_0 = 'TR001_1_7'\n\n\t----- bird -----\ttoxicology",
    "319": "\nSELECT COUNT(DISTINCT T1.transactioncodes_0) AS element_count\nFROM connected AS T1\nJOIN bond AS T2 ON T1.transactioncodes_2 = T2.transactioncodes_0\nWHERE T2.transactioncodes_0 = 'TR001_3_4'\n\n\t----- bird -----\ttoxicology",
    "320": "\nSELECT b.transactiontype_1 FROM bond AS b JOIN connected AS c ON b.transactioncodes_0 = c.transactioncodes_2 WHERE c.transactioncodes_0 = 'TR000_1' AND c.transactioncodes_1 = 'TR000_2'\n\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT m.transactioncodes_0 \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nWHERE (c.transactioncodes_0 = 'TR000_2' AND c.transactioncodes_1 = 'TR000_4') OR (c.transactioncodes_0 = 'TR000_4' AND c.transactioncodes_1 = 'TR000_2')\n\n\t----- bird -----\ttoxicology",
    "322": "\nSELECT elementtype_2 FROM atom WHERE transactioncodes_0 = 'TR000_1'\n\n\t----- bird -----\ttoxicology",
    "323": "\nSELECT positivenegative_1 FROM molecule WHERE transactioncodes_0 = 'TR000'\n\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT CAST(COUNT(DISTINCT C.transactioncodes_1) AS FLOAT) * 100 / (SELECT COUNT(*) FROM atom) AS percentage_single_bond\nFROM connected C\nJOIN bond B ON C.transactioncodes_2 = B.transactioncodes_0\nWHERE B.statusindicator_2 = 'single'\n\n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 = 'Nitrogen' AND m.positivenegative_1 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "326": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN atom a ON m.transactioncodes_0 = a.transactiontype_1\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE a.elementtype_2 = 'Sulphur' AND b.statusindicator_2 = 'Double'\n\n\t----- bird -----\ttoxicology",
    "327": "\nSELECT m.transactioncodes_0\nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nGROUP BY m.transactioncodes_0\nHAVING COUNT(DISTINCT c.transactioncodes_0) > 5 AND m.positivenegative_1 != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "328": "\nSELECT a.transactioncodes_0, b.statusindicator_2 \nFROM atom AS a\nJOIN connected AS c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond AS b ON c.transactioncodes_2 = b.transactioncodes_0\nJOIN molecule AS m ON a.transactiontype_1 = m.transactioncodes_0\nWHERE b.statusindicator_2 LIKE '%double%' AND m.transactioncodes_0 = 'TR024'\n\n\t----- bird -----\ttoxicology",
    "329": "\nSELECT m.transactioncodes_0, COUNT(a.transactioncodes_0) AS atom_count\nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_0 = a.transactioncodes_0 OR c.transactioncodes_1 = a.transactioncodes_0\nWHERE m.positivenegative_1 LIKE '%carcinogenic%'\nGROUP BY m.transactioncodes_0\nORDER BY atom_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "330": "\nSELECT CAST(COUNT(DISTINCT m.transactioncodes_0) AS FLOAT) * 100 / (SELECT COUNT(*) FROM molecule) \nFROM molecule m\nJOIN connected c ON m.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a1 ON c.transactioncodes_0 = a1.transactioncodes_0\nJOIN atom a2 ON c.transactioncodes_1 = a2.transactioncodes_0\nWHERE m.positivenegative_1 = 'carcinogenic' \nAND (a1.elementtype_2, a2.elementtype_2) IN (('Hydrogen', 'Carbon'), ('Carbon', 'Hydrogen'))\nAND c.transactioncodes_2 IN (\n    SELECT transactioncodes_0 FROM bond WHERE statusindicator_2 LIKE '%triple%')\n\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(*) FROM molecule WHERE transactioncodes_0 IN (SELECT transactiontype_1 FROM atom WHERE elementtype_2 = 'carcinogenic' UNION SELECT transactiontype_1 FROM bond WHERE statusindicator_2 = 'carcinogenic')\n\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE m.transactioncodes_0 BETWEEN 'TR004' AND 'TR010'\nAND b.statusindicator_2 = 'SINGLE';\n\n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(*) FROM atom AS a JOIN molecule AS m ON a.transactiontype_1 = m.transactioncodes_0 WHERE m.transactioncodes_0 = 'TR008' AND a.elementtype_2 = 'C'\n\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT T3.elementtype_2 FROM connected AS T1 JOIN bond AS T2 ON T1.transactioncodes_2 = T2.transactioncodes_0 JOIN atom AS T3 ON T1.transactioncodes_1 = T3.transactioncodes_0 WHERE T1.transactioncodes_0 = 'TR004_7' AND T2.statusindicator_2 != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN atom a ON c.transactioncodes_1 = a.transactioncodes_0\nWHERE b.statusindicator_2 = 'double' AND a.elementtype_2 = 'oxygen'\n\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(DISTINCT m.transactioncodes_0) \nFROM molecule m\nJOIN bond b ON m.transactioncodes_0 = b.transactiontype_1\nJOIN connected c ON b.transactioncodes_0 = c.transactioncodes_2\nWHERE b.statusindicator_2 LIKE '%triple%' AND NOT EXISTS (\n    SELECT 1 FROM atom a WHERE a.transactiontype_1 = m.transactioncodes_0 AND a.elementtype_2 LIKE '%carcinogenic%'\n)\n\n\t----- bird -----\ttoxicology",
    "337": "\nSELECT a.transactiontype_1 AS element_type, b.transactiontype_1 AS bond_type\nFROM connected c\nJOIN atom a ON c.transactioncodes_0 = a.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE c.transactioncodes_1 IN (\n    SELECT transactioncodes_0 FROM molecule WHERE transactioncodes_0 = 'TR016'\n)\n\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT a.transactioncodes_0 \nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON c.transactioncodes_2 = b.transactioncodes_0\nWHERE a.elementtype_2 = 'C' AND b.statusindicator_2 = 'double' AND EXISTS (\n    SELECT m.transactioncodes_0 \n    FROM molecule m\n    WHERE m.transactioncodes_0 = 'TR012'\n)\n\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT DISTINCT a.transactioncodes_0 AS atom_id\nFROM atom a\nJOIN connected c ON a.transactioncodes_0 = c.transactioncodes_0\nJOIN bond b ON b.transactioncodes_0 = c.transactioncodes_2\nJOIN molecule m ON m.transactioncodes_0 = a.transactiontype_1\nWHERE a.elementtype_2 = 'O' AND m.positivenegative_1 LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "340": "\nSELECT cardnames_48, itemrarity_58 \nFROM cards \nWHERE itemrarity_58 LIKE '%incredibly powerful foil%' \nOR cardabilities_51 LIKE '%incredibly powerful foil%'\nOR abilityeffects_35 LIKE '%incredibly powerful foil%'\nOR cardtype_52 LIKE '%incredibly powerful foil%'\nORDER BY ratings_10 DESC\nLIMIT 10\n\n\t----- bird -----\tcard_games",
    "341": "\nSELECT cardnames_48, itemrarity_58 \nFROM cards \nWHERE itemrarity_58 NOT LIKE '%Powerful Foil%' AND formatdbrawlcommanderoathbreaker_37 = 'Borderless'\n\n\t----- bird -----\tcard_games",
    "342": "\nSELECT cardnames_48, valuecounts_54 \nFROM cards \nORDER BY CAST(SUBSTRING_INDEX(valuecounts_54, ',', -1) AS UNSIGNED) DESC\nLIMIT 10;\n\n\t----- bird -----\tcard_games",
    "343": "\nSELECT cardnames_48 FROM cards WHERE year_18 = '2015' AND ratings_10 < 100 AND formatdbrawlcommanderoathbreaker_37 LIKE '%EDHRec%' \n\n\t----- bird -----\tcard_games",
    "344": "\nSELECT c.cardnames, l.formattype \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.itemrarity_58 = 'Mythic' AND l.formattype_1 = 'Gladiator' AND l.legaldepartment_2 = 'Banned'\n\n\t----- bird -----\tcard_games",
    "345": "\nSELECT l.formattype_1, l.legaldepartment_2 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.cardtype_52 = 'Artifact' AND c.cardtype_69 != 'SplitCard'\nAND l.formattype_1 = 'Vintage'\n\n\t----- bird -----\tcard_games",
    "346": "\nSELECT c.idnumbers_6, c.artistnames_1 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.formattype_1 = 'commander' AND c.ratings_10 IS NULL;\n\n\t----- bird -----\tcard_games",
    "347": "\nSELECT c.cardnames_48, r.cardrulesexplanations_2, \nCASE \n    WHEN c.artistnames_1 IS NULL OR c.artistnames_1 = '' THEN 'Missing artist name'\n    ELSE ''\nEND AS missing_artist_name,\nCASE \n    WHEN c.quotesandtext_16 IS NULL OR c.quotesandtext_16 = '' THEN 'Missing quotes and text'\n    ELSE ''\nEND AS missing_quotes_and_text\nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE c.artistnames_1 = 'Stephen Daniel';\n\n\t----- bird -----\tcard_games",
    "348": "\nSELECT r.datecolumn_1, r.cardrulesexplanations_2 \nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE c.cardnames_48 = 'Sublime Epiphany' AND c.productcodes_5 = '74s';\n\n\t----- bird -----\tcard_games",
    "349": "\nSELECT c.cardnames_48, c.artistnames_1, l.promotionflag \nFROM cards c\nJOIN (\n    SELECT uniqueidentifier_71, COUNT(*) AS ruling_count, CASE WHEN formatdbrawlcommanderoathbreaker_37 = 'Promo' THEN 1 ELSE 0 END AS promotionflag\n    FROM cards\n    JOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\n    GROUP BY uniqueidentifier_71\n) l ON c.uniqueidentifier_71 = l.uniqueidentifier_71\nORDER BY l.ruling_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "350": "\nSELECT DISTINCT T2.languages_2 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 WHERE T1.cardnames_48 = 'Annul' AND T1.sequentialnumbers_0 = 29;\n\n\t----- bird -----\tcard_games",
    "351": "\nSELECT c.cardnames_48, fd.quotesinmultiplelanguages_1 \nFROM cards c\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE fd.languages_2 = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "352": "\nSELECT CAST(COUNT(f.quotesinmultiplelanguages_1) AS FLOAT) * 100 / COUNT(c.sequentialnumbers_0) AS chinese_simplified_percentage\nFROM cards c\nLEFT JOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nWHERE f.languages_2 = 'Chinese Simplified'\n\n\t----- bird -----\tcard_games",
    "353": "\nSELECT st.languages, st.editionseriesname, COUNT(c.sequentialnumbers_0) AS total_cards\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nJOIN sets s ON l.uuididentifier_3 LIKE CONCAT('%', s.cardcodes_10)\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant\nWHERE st.languages = 'Italian'\nGROUP BY st.languages, st.editionseriesname\n\n\t----- bird -----\tcard_games",
    "354": "\nSELECT COUNT(DISTINCT cardtype_52) \nFROM cards\nWHERE artistnames_1 = 'Aaron Boyd';\n\n\t----- bird -----\tcard_games",
    "355": "\nSELECT abilityeffects_35 FROM cards WHERE cardnames_48 = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "356": "\nSELECT COUNT(*) FROM cards WHERE cardabilities LIKE '%infinite power%' OR abilityeffects LIKE '%infinite power%'\n\n\t----- bird -----\tcard_games",
    "357": "\nSELECT T1.cardtype FROM cards AS T1 JOIN rulings AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_3 WHERE T1.cardnames_48 = 'Duress'\n\n\t----- bird -----\tcard_games",
    "358": "\nSELECT color_4 FROM cards WHERE cardnames_48 = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "359": "\nSELECT T1.cardtype_52 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 WHERE T2.ancestralchosenname_4 = 'Ancestor\\'s Chosen' AND T1.cardnames_48 = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "360": "\nSELECT DISTINCT T3.languages FROM cards AS T1 JOIN sets AS T2 ON T1.editioncodes_55 = T2.cardsetcodes_4 JOIN set_translations AS T3 ON T2.cardsetcodes_4 = T3.codevariant WHERE T1.cardnames_48 = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "361": "\nSELECT COUNT(c.uniqueidentifier_71) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.legaldepartment_2 = 'restricted' AND c.quotesandtext_16 IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "362": "\nSELECT r.cardrulesexplanations, c.cardnames\nFROM rulings AS r\nJOIN cards AS c ON r.uniqueidentifier_3 = c.uniqueidentifier_71\nWHERE c.cardnames = 'Condemn'\nORDER BY r.datecolumn_1 DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(c.uniqueidentifier_71) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.legaldepartment_2 = 'restricted'\nAND EXISTS (\n    SELECT 1 FROM sets s WHERE s.cardcodes_10 = c.productcodes_5 AND s.settype_20 = 'Starter Deck'\n)\n\n\t----- bird -----\tcard_games",
    "364": "\nSELECT statusvalue_36 FROM cards WHERE cardnames_48 = 'Cloudchaser Eagle'\n\n\t----- bird -----\tcard_games",
    "365": "\nSELECT cardtype_52 FROM cards WHERE cardnames_48 = 'Benalish Knight'\n\n\t----- bird -----\tcard_games",
    "366": "\nSELECT r.cardrulesexplanations_2 \nFROM rulings r\nJOIN cards c ON r.uniqueidentifier_3 = c.uniqueidentifier_71\nWHERE c.cardnames_48 = 'Benalish Knight'\nORDER BY r.datecolumn_1 DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "367": "\nSELECT DISTINCT c.artistnames_1\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.formattype_1 = 'Phyrexian'\nAND c.artistnames_1 IS NOT NULL;\n\n\t----- bird -----\tcard_games",
    "368": "\nSELECT CAST(COUNT(CASE WHEN formatdbrawlcommanderoathbreaker_37 = 'borderless' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS borderless_percentage\nFROM cards\n\n\t----- bird -----\tcard_games",
    "369": "\nSELECT COUNT(DISTINCT c.sequentialnumbers_0) \nFROM cards c\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE fd.languages_2 = 'German'\n\n\t----- bird -----\tcard_games",
    "370": "\nSELECT COUNT(*) FROM cards AS c JOIN foreign_data AS fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7 WHERE fd.languages_2 = 'Russian' AND c.formatdbrawlcommanderoathbreaker_37 LIKE '%borderless%'\n\n\t----- bird -----\tcard_games",
    "371": "\nSELECT CAST(COUNT(CASE WHEN T2.languages_1 = 'French' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 \nWHERE T1.settype_20 = 'Story Spotlight'\n\n\t----- bird -----\tcard_games",
    "372": "\nSELECT COUNT(*) FROM cards WHERE toughness = 99\n\n\t----- bird -----\tcard_games",
    "373": "\nSELECT cardnames_48 FROM cards WHERE artistnames_1 = 'Aaron Boyd'\n\n\t----- bird -----\tcard_games",
    "374": "\nSELECT COUNT(*) FROM cards WHERE color_4 = 'Black' AND mtgoplatforms_3 LIKE '%mtgo%' AND NOT mtgoplatforms_3 LIKE '%other_platform%'\n\n\t----- bird -----\tcard_games",
    "375": "\nSELECT idnumbers_6 FROM cards WHERE value10e_62 = '0'\n\n\t----- bird -----\tcard_games",
    "376": "\nSELECT DISTINCT cardtype_52, cardtype_69, cardtype_70 \nFROM cards \nWHERE cardabilities_51 LIKE '%flying%' OR cardabilities_67 LIKE '%flying%'\n\n\t----- bird -----\tcard_games",
    "377": "\nSELECT COUNT(*)\nFROM cards\nWHERE cardtype_52 = 'Summon - Angel'\nAND creaturetype_64 NOT LIKE '%Angel%'\n\n\t----- bird -----\tcard_games",
    "378": "\nSELECT T1.uniqueidentifier_71 \nFROM cards AS T1\nJOIN legalities AS T2 ON T1.uniqueidentifier_71 = T2.uuididentifier_3\nWHERE T1.itemrarity_58 = 'Mythic Rare' OR T1.itemrarity_58 = 'Rare'\nAND T2.formattype_1 = 'Standard'\nAND T1.cardabilities_51 LIKE '%foil%'\nUNION\nSELECT T1.uniqueidentifier_71 \nFROM cards AS T1\nJOIN legalities AS T2 ON T1.uniqueidentifier_71 = T2.uuididentifier_3\nWHERE (T1.itemrarity_58 = 'Common' OR T1.itemrarity_58 = 'Uncommon')\nAND T2.formattype_1 = 'Standard'\nAND T1.cardabilities_51 NOT LIKE '%foil%'\n\n\t----- bird -----\tcard_games",
    "379": "\nSELECT c.idnumbers_6 FROM cards AS c JOIN sets AS s ON c.editioncodes_55 = s.cardsetcodes_4 WHERE s.setname_13 = 'Duel Deck: A'\n\n\t----- bird -----\tcard_games",
    "380": "\nSELECT T1.cardnames AS edhrecRank\nFROM cards AS T1\nLEFT JOIN legalities AS T2 ON T1.uniqueidentifier_71 = T2.uuididentifier_3\nWHERE T2.formattype_1 = 'edhrec' AND T1.activitypattern_22 = 2015\n\n\t----- bird -----\tcard_games",
    "381": "\nSELECT DISTINCT T1.artistnames_1 \nFROM cards AS T1\nJOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7\nWHERE T2.languages_2 = 'Chinese Simplified'\nGROUP BY T1.artistnames_1\n\n\t----- bird -----\tcard_games",
    "382": "\nSELECT c.cardnames_48, s.setname_15, r.languages_1\nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nLEFT JOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nLEFT JOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE s.settype_20 = 'Paper' AND r.languages_1 = 'Japanese'\nGROUP BY c.cardnames_48, s.setname_15, r.languages_1\nHAVING COUNT(DISTINCT r.languages_1) = 1 AND COUNT(DISTINCT s.settype_20) = 1\n\n\t----- bird -----\tcard_games",
    "383": "\nSELECT COUNT(c.uniqueidentifier_71) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.formattype_1 = 'Banned' AND c.color_4 = 'W'\n\n\t----- bird -----\tcard_games",
    "384": "\nSELECT c.uniqueidentifier_71 AS uuid, fd.languages_2 AS foreign_language\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE l.formattype_1 = 'Legacy'\n\n\t----- bird -----\tcard_games",
    "385": "\nSELECT r.cardrulesexplanations_2 \nFROM rulings r\nJOIN cards c ON r.uniqueidentifier_3 = c.uniqueidentifier_71\nWHERE c.cardnames_48 = 'Beacon of Immortality'\nORDER BY r.datecolumn_1 DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "386": "\nSELECT COUNT(c.uniqueidentifier_71) AS card_count, l.formattype_1 AS legality_status\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.cardtype_52 LIKE '%future%'\nGROUP BY l.formattype_1\n\n\t----- bird -----\tcard_games",
    "387": "\nSELECT c.cardnames_48, c.color_4 \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'OGW'\n\n\t----- bird -----\tcard_games",
    "388": "\nSELECT c.cardnames_48, st.languages_1 \nFROM cards c\nJOIN set_translations st ON c.editioncodes_55 = st.codevariant_2\nWHERE c.value10e_62 = '10E' AND c.valuecounts_54 = '5'\n\n\t----- bird -----\tcard_games",
    "389": "\nSELECT c.cardnames_48, r.datecolumn_1 \nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE c.cardtype_52 = 'Creature - Elf'\n\n\t----- bird -----\tcard_games",
    "390": "\nSELECT color_4, formatdbrawlcommanderoathbreaker_37 FROM cards WHERE sequentialnumbers_0 BETWEEN 1 AND 20;\n\n\t----- bird -----\tcard_games",
    "391": "\nSELECT c.cardnames_48, f.languages_2 \nFROM cards c \nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7 \nWHERE c.color_4 = 'Black' AND c.cardtype_52 = 'Artifact'\n\n\t----- bird -----\tcard_games",
    "392": "\nSELECT c.cardnames_48, r.datecolumn_1\nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_61 = r.uniqueidentifier_3\nWHERE c.itemrarity_58 = 'Uncommon'\nORDER BY r.datecolumn_1 ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "393": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE c.artistnames_1 = 'John Avon' AND c.mtgoplatforms_3 NOT LIKE '%cardKingdomFoildId%'\n\n\t----- bird -----\tcard_games",
    "394": "\nSELECT COUNT(*) \nFROM cards \nWHERE color = 'white' AND productcodes_5 IS NOT NULL AND productcodes_5 = cardmarketlinks_57\n\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(*) FROM cards WHERE artistnames_1 = 'UDON' AND mtgoplatforms_3 = 'mtgo' AND initialzeros_20 = -1\n\n\t----- bird -----\tcard_games",
    "396": "\nSELECT COUNT(*)\nFROM cards\nWHERE year_18 = '1993' AND formatdbrawlcommanderoathbreaker_37 LIKE '%paper%' AND statusvalue_36 LIKE '%Sensitive Content Warning%'\n\n\t----- bird -----\tcard_games",
    "397": "\nSELECT cardnames_48, itemcodes_49 \nFROM cards \nWHERE frameVersion = '2003' AND borderColor = 'black' AND formatdbrawlcommanderoathbreaker_37 IN ('paper', 'mtgo') AND cardtype_52 = 'normal'\n\n\t----- bird -----\tcard_games",
    "398": "\nSELECT SUM(value10e_62::integer) AS total_unconverted_mana_cost\nFROM cards\nWHERE artistnames_1 = 'Rob Alexander';\n\n\t----- bird -----\tcard_games",
    "399": "\nSELECT DISTINCT cardtype_52 FROM cards WHERE cardtype_52 IS NOT NULL AND cardtype_52 != ''\n\n\t----- bird -----\tcard_games",
    "400": "\nSELECT DISTINCT T1.cardsetcodes_4 \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 \nWHERE T2.languages_1 = 'Spanish'\n\n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(COUNT(CASE WHEN legendarystatus_65 = '+3' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage\nFROM cards\nWHERE cardtype_70 = 'Legendary Frame Effect'\n\n\t----- bird -----\tcard_games",
    "402": "\nSELECT \n    c.idnumbers_6 AS id,\n    CASE \n        WHEN c.statusvalue_36 = 'Story Spotlight' AND c.quotesandtext_16 IS NOT NULL THEN 1\n        ELSE 0\n    END AS has_text_box\nFROM cards c\nWHERE c.statusvalue_36 = 'Story Spotlight'\n\n\t----- bird -----\tcard_games",
    "403": "\nSELECT c.cardnames_48, f.quotesinmultiplelanguages_1\nFROM cards c\nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nWHERE f.languages_2 = 'Spanish'\n\n\t----- bird -----\tcard_games",
    "404": "\nSELECT T2.languages_1 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 WHERE T1.valueslist_1 = 309\n\n\t----- bird -----\tcard_games",
    "405": "\nSELECT COUNT(st.sequentialnumbers_0) \nFROM set_translations st\nJOIN sets s ON st.codevariant_2 = s.cardsetcodes_4\nWHERE st.languages_1 = 'Portuguese (Brasil)' AND s.settype_20 = 'Commander'\n\n\t----- bird -----\tcard_games",
    "406": "\nSELECT c.idnumbers_6, l.formattype_1\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.cardtype_52 = 'Creature'\nAND l.legaldepartment_2 = 'Legal'\n\n\t----- bird -----\tcard_games",
    "407": "\nSELECT DISTINCT T1.cardtype_52, T3.languages_1 \nFROM cards AS T1 \nJOIN rulings AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_3 \nJOIN set_translations AS T4 ON T1.editioncodes_55 = T4.codevariant_2 \nJOIN sets AS T5 ON T4.codevariant_2 = T5.cardsetcodes_4 \nJOIN set_translations AS T3 ON T5.setname_2 = T3.editionseriesname_3 \nWHERE T3.languages_1 = 'German'\n\n\t----- bird -----\tcard_games",
    "408": "\nSELECT COUNT(*)\nFROM cards\nWHERE cardabilities LIKE '%triggered ability%' AND (abilityeffects_35 IS NULL OR abilityeffects_35 = '')\n\n\t----- bird -----\tcard_games",
    "409": "\nSELECT COUNT(c.uniqueidentifier_71) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE l.formattype_1 = 'pre-modern' AND r.cardrulesexplanations_2 = 'This is a triggered mana ability' AND c.abilityeffects_35 NOT LIKE '%double-faced%'\n\n\t----- bird -----\tcard_games",
    "410": "\nSELECT c.idnumbers_6, l.formattype_1\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.artistnames_1 = 'Erica Yang' AND l.formattype_1 = 'Pauper'\nAND EXISTS (\n    SELECT 1\n    FROM sets s\n    WHERE c.productcodes_5 = s.cardsetcodes_4 AND s.settype_20 = 'Paper'\n);\n\n\t----- bird -----\tcard_games",
    "411": "\nSELECT T1.artistnames_1 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 WHERE T2.quotesinmultiplelanguages_1 = 'Das perfekte Gegenmittel zu einer dichten Formation'\n\n\t----- bird -----\tcard_games",
    "412": "\nSELECT T2.quotesinmultiplelanguages_1 \nFROM cards AS T1 \nJOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 \nWHERE T1.artistnames_1 = 'Matthew D. Wilson' AND T1.color_4 = 'Black' AND T1.cardtype_52 = 'Creature' AND T2.languages_2 = 'French'\n\n\t----- bird -----\tcard_games",
    "413": "\nSELECT COUNT(cards.cardnames_48) \nFROM cards\nJOIN rulings ON cards.uniqueidentifier_61 = rulings.uniqueidentifier_3\nWHERE rulings.datecolumn_1 = '2009-10-01' AND cards.itemrarity_58 IS NOT NULL;\n\n\t----- bird -----\tcard_games",
    "414": "\nSELECT T2.languages_1 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 WHERE T1.setname_2 IN ('Ravnica Allegiance', 'Guilds of Ravnica') AND T1.valueslist_1 = 180\n\n\t----- bird -----\tcard_games",
    "415": "\nSELECT CAST(SUM(CASE WHEN formatdbrawlcommanderoathbreaker_37 = 'commander' AND statusvalue_36 = 'legal' AND nonevalues_38 IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE formatdbrawlcommanderoathbreaker_37 = 'commander' AND statusvalue_36 = 'legal'\n\n\t----- bird -----\tcard_games",
    "416": "\nSELECT \n    (COUNT(CASE WHEN T2.languages = 'French' AND T1.uniqueidentifier_7 IS NULL THEN 1 END) * 100.0 / COUNT(CASE WHEN T1.uniqueidentifier_7 IS NULL THEN 1 END)) AS percentage_in_french\nFROM foreign_data T1\nJOIN sets T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0\nWHERE T1.uniqueidentifier_7 IS NULL OR T1.uniqueidentifier_7 = '*'\n\n\t----- bird -----\tcard_games",
    "417": "\nSELECT CAST(COUNT(CASE WHEN T2.languages = 'Japanese' AND T1.settype = 'Expansion' THEN 1 END) AS FLOAT) * 100 / COUNT(T2.languages)\nFROM sets AS T1\nJOIN set_translations AS T2 ON T1.cardsetcodes = T2.codevariant\nWHERE T2.languages = 'Japanese'\n\n\t----- bird -----\tcard_games",
    "418": "\nSELECT T1.cardnames, T2.creaturetype \nFROM cards AS T1 \nJOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 \nWHERE T2.ancestralchosenname = 'Daren Bader'\n\n\t----- bird -----\tcard_games",
    "419": "\nSELECT COUNT(*) FROM cards WHERE color_4 IS NOT NULL AND formatdbrawlcommanderoathbreaker_37 = 'EDHRec' AND ratings_10 > 12000\n\n\t----- bird -----\tcard_games",
    "420": "\nSELECT COUNT(*)\nFROM cards\nWHERE cardtype LIKE '%Oversized%' AND cardtype LIKE '%Reprinted%' AND cardtype LIKE '%Promo%'\n\n\t----- bird -----\tcard_games",
    "421": "\nSELECT c.cardnames_48, c.cardtype_52 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.cardtype_52 LIKE '%Promotional%' AND l.formattype_1 = 'arena league'\nORDER BY c.cardnames_48 ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "422": "\nSELECT T2.languages_2 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uniqueidentifier_61 = T2.uniqueidentifier_7 WHERE T1.sequentialnumbers_0 = 149934;\n\n\t----- bird -----\tcard_games",
    "423": "\nSELECT c.idnumbers_6, c.cardnames_48 \nFROM cards c\nWHERE c.itemrarity_58 = 'Powerful' AND (c.cardtype_52 LIKE '%Kingdom Foil%' OR c.cardtype_70 LIKE '%Kingdom Foil%') \nORDER BY c.idnumbers_6 ASC \nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "424": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM cards) \nFROM cards \nWHERE cardtype_52 NOT IN ('normal') OR cardtype_70 NOT IN ('normal')\n\n\t----- bird -----\tcard_games",
    "425": "\nSELECT sequentialnumbers_0 FROM cards WHERE creaturetype_64 = 'Angel' AND creaturetype_70 = 'Wizard'\n\n\t----- bird -----\tcard_games",
    "426": "\nSELECT s.setname, COUNT(*) AS count\nFROM sets s\nLEFT JOIN cards c ON s.cardsetcodes_4 = c.editioncodes_55\nWHERE c.mtgoplatforms_3 NOT LIKE '%Magic: The Gathering Online%'\nGROUP BY s.setname\nORDER BY setname ASC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "427": "\nSELECT T2.languages_1 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 WHERE T1.setname_2 = 'Archenemy' AND T1.cardsetcodes_4 = 'ARC'\n\n\t----- bird -----\tcard_games",
    "428": "\nSELECT s.setname, st.editionseriesname \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant\nWHERE s.sequentialnumbers_0 = 5;\n\n\t----- bird -----\tcard_games",
    "429": "\nSELECT T1.languages_1, T2.settype_20 \nFROM set_translations AS T1 \nJOIN sets AS T2 ON T1.codevariant_2 = T2.cardsetcodes_4 \nWHERE T2.sequentialnumbers_0 = 206;\n\n\t----- bird -----\tcard_games",
    "430": "\nSELECT s.setname, c.uniqueidentifier_71 AS card_id\nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nJOIN cards c ON TRUE\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE st.languages_1 = 'Italian' AND s.setname LIKE '%Shadowmoor%'\nGROUP BY s.setname, c.uniqueidentifier_71\nORDER BY s.setname ASC\nLIMIT 2\n\n\t----- bird -----\tcard_games",
    "431": "\nSELECT s.sequentialnumbers_0 AS set_id, st.languages, st.editionseriesname \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant\nWHERE st.languages = 'Japanese' AND s.settype_20 NOT LIKE '%International%' OR s.settype_20 LIKE '%Japan%';\n\n\t----- bird -----\tcard_games",
    "432": "\nSELECT s.setname, COUNT(c.sequentialnumbers_0) AS card_count\nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant\nJOIN cards c ON s.cardcodes_10 = c.productcodes_5\nWHERE st.languages_1 = 'Russian'\nGROUP BY s.setname\nORDER BY card_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "433": "\nSELECT CAST(COUNT(DISTINCT c.sequentialnumbers_0) AS FLOAT) / (SELECT COUNT(*) FROM cards) * 100 \nFROM foreign_data fd\nJOIN cards c ON fd.uniqueidentifier_7 = c.uniqueidentifier_71\nWHERE fd.languages_2 = 'Chinese Simplified' AND c.mtgoplatforms_3 = 'online'\n\n\t----- bird -----\tcard_games",
    "434": "\nSELECT COUNT(DISTINCT s.sequentialnumbers_0) \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nWHERE st.languages_1 = 'Japanese'\nAND NOT EXISTS (\n    SELECT 1 FROM cards c WHERE c.mtgoplatforms_3 = 'Magic: The Gathering Online' AND c.editioncodes_55 = s.cardsetcodes_4\n)\n\n\t----- bird -----\tcard_games",
    "435": "\nSELECT idnumbers_6 FROM cards WHERE color_4 = 'black'\n\n\t----- bird -----\tcard_games",
    "436": "\nSELECT idnumbers_6 FROM cards WHERE abilityeffects_35 = 'extendedart'\n\n\t----- bird -----\tcard_games",
    "437": "\nSELECT T1.cardnames_48, T1.uniqueidentifier_61 \nFROM cards AS T1 \nJOIN legalities AS T2 ON T1.uniqueidentifier_71 = T2.uuididentifier_3 \nWHERE T1.color_4 = 'Black' AND T1.formatdbrawlcommanderoathbreaker_37 = 'Full Art'\n\n\t----- bird -----\tcard_games",
    "438": "\nSELECT T2.languages_1 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 WHERE T1.sequentialnumbers_0 = 174;\n\n\t----- bird -----\tcard_games",
    "439": "\nSELECT T1.setname FROM sets AS T1 WHERE T1.cardsetcodes = 'ALL'\n\n\t----- bird -----\tcard_games",
    "440": "\nSELECT T2.languages_2 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7 WHERE T1.cardnames_48 = 'A Pedra Fellwar'\n\n\t----- bird -----\tcard_games",
    "441": "\nSELECT cardsetcodes_4 FROM sets WHERE datecolumn_17 = '2007-07-13'\n\n\t----- bird -----\tcard_games",
    "442": "\nSELECT s.setname, s.cardsetcodes AS set_code, s.valueslist_1 AS base_set_size\nFROM sets s\nWHERE s.setname IN ('Masques', 'Mirage')\nGROUP BY s.setname, s.cardsetcodes, s.valueslist_1\n\n\t----- bird -----\tcard_games",
    "443": "\nSELECT cardsetcodes_4 FROM sets WHERE settype_20 = 'expansion'\n\n\t----- bird -----\tcard_games",
    "444": "\nSELECT f.quotesinmultiplelanguages_1, c.cardtype_52 \nFROM cards c\nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nWHERE c.color_4 = 'boros'\n\n\t----- bird -----\tcard_games",
    "445": "\nSELECT T1.languages_2, T1.quotesinmultiplelanguages_1, T2.cardtype_52 \nFROM foreign_data AS T1 \nJOIN cards AS T2 ON T1.uniqueidentifier_7 = T2.uniqueidentifier_71 \nWHERE T2.color_4 LIKE '%colorpie watermark%'\n\n\t----- bird -----\tcard_games",
    "446": "\nSELECT CAST(COUNT(CASE WHEN value10e_62 = '10' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Abyssal Horror'\n\n\t----- bird -----\tcard_games",
    "447": "\nSELECT cardsetcodes_4 FROM sets WHERE settype_20 = 'expansion commander'\n\n\t----- bird -----\tcard_games",
    "448": "\nSELECT f.quotesinmultiplelanguages_1, c.cardtype_52 \nFROM cards c\nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nWHERE c.color_4 = 'Abzan';\n\n\t----- bird -----\tcard_games",
    "449": "\nSELECT T2.languages, T1.cardtype_52 \nFROM cards AS T1\nJOIN foreign_data AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_7\nWHERE T1.symbolpattern_40 LIKE '%azorius%'\n\n\t----- bird -----\tcard_games",
    "450": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.artistnames_1 = 'Aaron Miller' AND c.ratings_10 > 8.5 -- Assuming a rating above 8.5 indicates incredibly powerful\n\n\t----- bird -----\tcard_games",
    "451": "\nSELECT COUNT(*) FROM cards WHERE activityindicator_23 > 0 AND mtgoplatforms_3 = 'paper'\n\n\t----- bird -----\tcard_games",
    "452": "\nSELECT cardnames_48 FROM cards WHERE quotesandtext_16 IS NOT NULL OR abilityeffects_35 IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "453": "\nSELECT value10e_62 FROM cards WHERE cardnames_48 = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "454": "\nSELECT COUNT(*) FROM cards WHERE color_4 = 'white' AND abilityeffects_35 IS NULL OR abilityeffects_35 = ''\n\n\t----- bird -----\tcard_games",
    "455": "\nSELECT cardnames_48 FROM cards WHERE cardtype_52 = 'Promotional Painting' AND creaturetype_64 IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "456": "\nSELECT cardtype_52, cardtype_69, cardtype_70 FROM cards WHERE cardnames_48 = 'Molimo, Maro-Sorcerer'\n\n\t----- bird -----\tcard_games",
    "457": "\nSELECT DISTINCT T1.cardmarketlinks_57 \nFROM cards AS T1 \nJOIN sets AS T2 ON T1.editioncodes_55 = T2.cardsetcodes_4 \nWHERE T2.settype_20 = 'bundle'\n\n\t----- bird -----\tcard_games",
    "458": "\nSELECT COUNT(DISTINCT artistnames_1) \nFROM cards \nWHERE color_4 = 'black' AND mtgoplatforms_3 IN ('arena', 'mtgo')\n\n\t----- bird -----\tcard_games",
    "459": "\nSELECT cardnames_48, itemrarity_58 \nFROM cards \nWHERE cardnames_48 IN ('Serra Angel', 'Shrine Keeper')\n\n\t----- bird -----\tcard_games",
    "460": "\nSELECT artistnames_1 FROM cards WHERE cardnames_48 = 'Battra, Dark Destroyer'\n\n\t----- bird -----\tcard_games",
    "461": "\nSELECT c.cardnames_48, c.value10e_62 AS converted_mana_cost\nFROM cards c\nWHERE c.uniqueidentifier_59 = '2003 Card Frame'\nORDER BY c.value10e_62 DESC\nLIMIT 3\n\n\t----- bird -----\tcard_games",
    "462": "\nSELECT T2.languages_1, T2.editionseriesname_3 \nFROM foreign_data AS T1\nJOIN set_translations AS T2 ON T1.uniqueidentifier_7 = T2.codevariant_2\nWHERE T1.ancestralchosenname_4 = 'Ancestor\\'s Chosen' AND T2.languages_1 = 'Italian'\n\n\t----- bird -----\tcard_games",
    "463": "\nSELECT COUNT(DISTINCT st.sequentialnumbers_0) AS translation_count\nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nJOIN cards c ON s.cardcodes_10 = c.itemcodes_49\nWHERE c.cardnames_48 = 'Angel of Mercy'\n\n\t----- bird -----\tcard_games",
    "464": "\nSELECT c.cardnames_48 FROM cards c JOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4 WHERE s.setname_13 = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "465": "\nSELECT DISTINCT f.languages_2, f.ancestralchosenname_4 \nFROM foreign_data f\nJOIN cards c ON f.uniqueidentifier_7 = c.uniqueidentifier_71\nWHERE f.ancestralchosenname_4 LIKE '%Ancestor%Chosen%' AND f.languages_2 = 'Korean'\n\n\t----- bird -----\tcard_games",
    "466": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Hauptset Zehnte Edition' AND c.artistnames_1 = 'Adam Rex'\n\n\t----- bird -----\tcard_games",
    "467": "\nSELECT COUNT(s.sequentialnumbers_0) \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nWHERE st.editionseriesname_3 = 'Hauptset Zehnte Edition' AND s.settype_20 = 'Base Set'\n\n\t----- bird -----\tcard_games",
    "468": "\nSELECT T2.languages_1, T2.editionseriesname_3 \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 \nWHERE T1.setname_15 = 'Eighth Edition' AND T2.languages_1 = 'Simplified Chinese'\n\n\t----- bird -----\tcard_games",
    "469": "\nSELECT DISTINCT c.mtgoplatforms_3 \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE c.cardnames_48 = 'Angel of Mercy' AND c.mtgoplatforms_3 = 'Magic: The Gathering Online';\n\n\t----- bird -----\tcard_games",
    "470": "\nSELECT s.datecolumn_17 FROM sets s JOIN cards c ON s.cardcodes_10 = c.uniqueidentifier_44 WHERE c.cardnames_48 = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "471": "\nSELECT T2.settype_20 FROM set_translations AS T1 JOIN sets AS T2 ON T1.codevariant_2 = T2.cardsetcodes_4 WHERE T1.editionseriesname_3 = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "472": "\nSELECT COUNT(DISTINCT s.sequentialnumbers_0) \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nWHERE s.setname_15 = 'Ice Age' AND st.languages_1 = 'Italian'\n\n\t----- bird -----\tcard_games",
    "473": "\nSELECT DISTINCT c.uniqueidentifier_71, s.setname_2 \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE c.cardnames_48 = 'Adarkar Valkyrie'\nAND NOT EXISTS (\n    SELECT 1 FROM legalities l WHERE l.uuididentifier_3 = c.uniqueidentifier_71 AND l.legaldepartment_2 LIKE '%United States%'\n)\n\n\t----- bird -----\tcard_games",
    "474": "\nSELECT COUNT(DISTINCT s.cardsetcodes_4) \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes_4 = st.codevariant_2\nWHERE st.languages_1 = 'Italian' AND s.valueslist_1 < 10\n\n\t----- bird -----\tcard_games",
    "475": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Coldsnap' AND c.color_4 = 'Black'\n\n\t----- bird -----\tcard_games",
    "476": "\nSELECT c.cardnames_48, MAX(c.valuecounts_54) AS max_mana_cost\nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Coldsnap'\nGROUP BY c.cardnames_48\nORDER BY max_mana_cost DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "477": "\nSELECT DISTINCT c.artistnames_1\nFROM cards c\nJOIN sets s ON c.productcodes_5 = s.cardsetcodes_4\nWHERE s.setname_2 = 'Coldsnap' AND c.artistnames_1 IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\n\n\t----- bird -----\tcard_games",
    "478": "\nSELECT c.sequentialnumbers_0, s.setname_15 \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_15 = 'Coldsnap' AND c.sequentialnumbers_0 = 4;\n\n\t----- bird -----\tcard_games",
    "479": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Coldsnap' AND c.valuecounts_54 > 5 AND c.abilityeffects_35 LIKE '%unknown power%'\n\n\t----- bird -----\tcard_games",
    "480": "\nSELECT T1.quotesinmultiplelanguages_1 FROM foreign_data AS T1 JOIN cards AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 WHERE T1.languages_2 = 'Italian' AND T2.cardnames_48 = 'Ancestor\\'s Chosen'\n\n\t----- bird -----\tcard_games",
    "481": "\nSELECT DISTINCT T2.languages_2 FROM foreign_data AS T1 JOIN foreign_data AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 WHERE T1.ancestralchosenname_4 = 'Ancestor\\'s Chosen' AND T2.languages_2 != 'en'\n\n\t----- bird -----\tcard_games",
    "482": "\nSELECT T2.cardtype_52 \nFROM foreign_data AS T1\nJOIN cards AS T2 ON T1.uniqueidentifier_7 = T2.uniqueidentifier_71\nWHERE T1.ancestralchosenname_4 = 'Ancestor\\'s Chosen' AND T1.languages_2 = 'German'\n\n\t----- bird -----\tcard_games",
    "483": "\nSELECT r.cardrulesexplanations_2, c.uniqueidentifier_71 \nFROM rulings r\nJOIN cards c ON r.uniqueidentifier_3 = c.uniqueidentifier_71\nJOIN set_translations st ON c.editioncodes_55 = st.codevariant_2\nWHERE st.languages_1 = 'Italian' AND st.editionseriesname_3 = 'Coldsnap'\n\n\t----- bird -----\tcard_games",
    "484": "\nSELECT f.quotesinmultiplelanguages_1, c.cardnames_48\nFROM cards c\nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nLEFT JOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE f.languages_2 = 'Italian' AND s.setname_2 = 'Coldsnap'\nORDER BY c.valuecounts_54 DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "485": "\nSELECT r.datecolumn_1 FROM rulings r JOIN cards c ON r.uniqueidentifier_3 = c.uniqueidentifier_71 WHERE c.cardnames_48 = 'Reminisce'\n\n\t----- bird -----\tcard_games",
    "486": "\nSELECT CAST(COUNT(CASE WHEN cards.value10e_62 = '7' THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS percentage\nFROM cards\nJOIN sets ON cards.editioncodes_55 = sets.cardsetcodes_4\nWHERE sets.setname_2 = 'Coldsnap'\n\n\t----- bird -----\tcard_games",
    "487": "\nSELECT \n    (COUNT(CASE WHEN t1.uniqueidentifier_61 IS NOT NULL THEN 1 ELSE NULL END) * 100.0 / COUNT(t1.uniqueidentifier_61)) AS percentage_incredibly_powerful_cards\nFROM cards t1\nJOIN sets t2 ON t1.itemcodes_49 = t2.cardsetcodes_4\nWHERE t2.setname_2 = 'Coldsnap'\nAND t1.uniqueidentifier_61 IS NOT NULL;\n\n\t----- bird -----\tcard_games",
    "488": "\nSELECT T2.cardsetcodes_4 FROM sets AS T1 JOIN set_translations AS T3 ON T1.setname_2 = T3.editionseriesname_3 JOIN sets AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 WHERE T1.datecolumn_17 = '2017-07-14'\n\n\t----- bird -----\tcard_games",
    "489": "\nSELECT T2.cardsetcodes FROM set_translations AS T1 JOIN sets AS T2 ON T1.codevariant = T2.cardsetcodes WHERE T1.editionseriesname = 'PKHC'\n\n\t----- bird -----\tcard_games",
    "490": "\nSELECT T1.cardmarketlinks_57 FROM cards AS T1 JOIN sets AS T2 ON T1.editioncodes_55 = T2.cardsetcodes_4 WHERE T2.cardsetcodes_4 = 'SS2'\n\n\t----- bird -----\tcard_games",
    "491": "\nSELECT T1.cardnames FROM cards AS T1 JOIN sets AS T2 ON T1.editioncodes = T2.cardsetcodes WHERE T2.datecolumn_17 = '2017-06-09'\n\n\t----- bird -----\tcard_games",
    "492": "\nSELECT settype_20 FROM sets WHERE setname_15 = 'From the Vault: Lore'\n\n\t----- bird -----\tcard_games",
    "493": "\nSELECT T1.cardsetcodes FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes = T2.codevariant WHERE T2.editionseriesname = 'Commander 2014 Oversized'\n\n\t----- bird -----\tcard_games",
    "494": "\nSELECT c.cardnames_48, r.cardrulesexplanations_2 \nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE c.artistnames_1 = 'Jim Pavelec'\n\n\t----- bird -----\tcard_games",
    "495": "\nSELECT T2.datecolumn_17 \nFROM cards AS T1 \nJOIN sets AS T2 ON T1.editioncodes_55 = T2.cardsetcodes_4 \nWHERE T1.cardnames_48 = 'Evacuation'\n\n\t----- bird -----\tcard_games",
    "496": "\nSELECT COUNT(*) FROM sets WHERE setname = 'Rinascita di Alara'\n\n\t----- bird -----\tcard_games",
    "497": "\nSELECT T2.settype_20 FROM set_translations AS T1 JOIN sets AS T2 ON T1.codevariant_2 = T2.cardsetcodes_4 WHERE T1.editionseriesname_3 = 'Huiti\u00e8me \u00e9dition'\n\n\t----- bird -----\tcard_games",
    "498": "\nSELECT T2.languages, T2.editionseriesname \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant \nJOIN cards AS T3 ON T1.cardcodes_10 = T3.itemcodes_49 \nJOIN foreign_data AS T4 ON T3.uniqueidentifier_71 = T4.uniqueidentifier_7 \nWHERE T4.creaturetype_64 = 'Tendo Ice Bridge' AND T2.languages = 'French'\n\n\t----- bird -----\tcard_games",
    "499": "\nSELECT COUNT(*) AS translation_count\nFROM set_translations st\nJOIN sets s ON st.codevariant_2 = s.cardsetcodes_4\nWHERE s.setname_15 = 'Salvat 2011';\n\n\t----- bird -----\tcard_games",
    "500": "\nSELECT T2.languages, T1.editionseriesname \nFROM set_translations AS T1 \nJOIN sets AS T2 ON T1.codevariant = T2.cardsetcodes \nWHERE T1.languages = 'Japanese' AND T2.setname = 'Fellwar Stone'\n\n\t----- bird -----\tcard_games",
    "501": "\nSELECT c.cardnames_48, MAX(c.value10e_62::integer) AS highest_mana_cost\nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'Journey into Nyx Hero''s Path'\nGROUP BY c.cardnames_48, c.value10e_62\nORDER BY highest_mana_cost DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "502": "\nSELECT T1.datecolumn_17 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant WHERE T2.editionseriesname_3 = 'Ola de fr\u00edo'\n\n\t----- bird -----\tcard_games",
    "503": "\nSELECT T2.settype FROM cards AS T1 JOIN sets AS T2 ON T1.editioncodes_55 = T2.cardsetcodes_4 WHERE T1.cardnames_48 = 'Samite Pilgrim'\n\n\t----- bird -----\tcard_games",
    "504": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nWHERE s.setname_13 = 'World Championship Decks 2004' AND c.valuecounts_54 = '3'\n\n\t----- bird -----\tcard_games",
    "505": "\nSELECT T2.editionseriesname_3 \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 \nWHERE T1.setname_2 = 'Mirrodin' AND T2.languages_1 = 'Simplified Chinese'\n\n\t----- bird -----\tcard_games",
    "506": "\nWITH japanese_translated_cards AS (\n    SELECT DISTINCT T1.uniqueidentifier_71\n    FROM cards AS T1\n    JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2\n    WHERE T2.languages_1 = 'Japanese'\n),\nnon_foil_sets AS (\n    SELECT DISTINCT T1.uniqueidentifier_71\n    FROM japanese_translated_cards AS T1\n    JOIN sets AS T2 ON T1.cardsetcodes_4 = T2.cardsetcodes_4\n    WHERE T2.settype_20 NOT LIKE '%Foil%'\n)\nSELECT \n    (COUNT(non_foil_sets.uniqueidentifier_71) * 100.0 / COUNT(japanese_translated_cards.uniqueidentifier_71)) AS percentage_non_foil\nFROM japanese_translated_cards, non_foil_sets;\n\n\t----- bird -----\tcard_games",
    "507": "\nSELECT CAST(COUNT(CASE WHEN T1.activityindicator_24 = 1 THEN T1.sequentialnumbers_0 ELSE NULL END) AS REAL) * 100 / COUNT(T1.sequentialnumbers_0) AS percentage_online_only\nFROM cards AS T1\nJOIN set_translations AS T2 ON T1.editioncodes_55 = T2.codevariant_2\nWHERE T2.languages_1 = 'Brazil Portuguese'\n\n\t----- bird -----\tcard_games",
    "508": "\nSELECT DISTINCT cardtype_52 FROM cards WHERE artistnames_1 = 'Aleksi Briclot' AND quotesandtext_16 IS NULL;\n\n\t----- bird -----\tcard_games",
    "509": "\nSELECT cardsetcodes_4 FROM sets GROUP BY cardsetcodes_4 ORDER BY COUNT(*) DESC LIMIT 1\n\n\t----- bird -----\tcard_games",
    "510": "\nSELECT artistnames_1 FROM cards WHERE cardtype NOT LIKE '%split%' AND cardtype NOT LIKE '%transform%' ORDER BY valuecounts_54 DESC LIMIT 1\n\n\t----- bird -----\tcard_games",
    "511": "\nSELECT abilityeffects_35, COUNT(*) AS count\nFROM cards\nWHERE itemrarity_58 = 'Mythic Rare' AND cardabilities_67 LIKE '%Foil%'\nGROUP BY abilityeffects_35\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "512": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nLEFT JOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE s.setname_2 = 'duel deck a'\nAND c.itemrarity_58 NOT IN ('foil')\nAND c.valuecounts_54 IS NULL\n\n\t----- bird -----\tcard_games",
    "513": "\nSELECT s.sequentialnumbers_0 AS set_id, SUM(CASE WHEN c.cardtype_52 = 'card' THEN 1 ELSE 0 END) AS total_cards\nFROM sets s\nJOIN cards c ON s.cardcodes_10 LIKE CONCAT('%', c.itemcodes_49, '%')\nLEFT JOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE s.settype_20 = 'Commander' AND l.formattype_1 NOT IN ('Alchemy')\nGROUP BY s.sequentialnumbers_0\nORDER BY total_cards DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "514": "\nSELECT cardnames_48, value10e_62 AS unconvertedmanacost\nFROM cards\nORDER BY CAST(value10e_62 AS REAL) DESC\nLIMIT 10\n\n\t----- bird -----\tcard_games",
    "515": "\nSELECT MIN(T1.year_18) AS release_year, T4.formattype_1 AS legal_format\nFROM cards AS T1\nJOIN rulings AS T2 ON T1.uniqueidentifier_71 = T2.uniqueidentifier_3\nJOIN legalities AS T4 ON T1.uniqueidentifier_71 = T4.uuididentifier_3\nWHERE T1.cardtype_52 = 'Mythic' AND T1.year_18 IS NOT NULL\nGROUP BY T4.formattype_1\nORDER BY release_year ASC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "516": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM cards c\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE c.artistnames_1 = 'Volkan Ba\u00c7\u00b5a' AND fd.languages_2 = 'French'\n\n\t----- bird -----\tcard_games",
    "517": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.itemrarity_58 = 'Rare' AND c.cardtype_52 = 'Enchantment' AND c.cardnames_48 = 'Abundance'\nAND NOT EXISTS (\n    SELECT 1 FROM legalities WHERE uuididentifier_3 = c.uniqueidentifier_71 AND formattype_1 IN ('Standard', 'Modern', 'Legacy', 'Pauper', 'Penny Dreadful', 'Commander') AND legaldepartment_2 != 'Legal'\n)\n\n\t----- bird -----\tcard_games",
    "518": "\nSELECT L.formattype_1, C.cardnames_48 \nFROM legalities L\nJOIN cards C ON L.uuididentifier_3 = C.uniqueidentifier_71\nWHERE L.legaldepartment_2 = 'Banned'\nGROUP BY L.formattype_1, C.cardnames_48\nORDER BY COUNT(L.formattype_1) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "519": "\nSELECT T2.languages_1 FROM sets AS T1 JOIN set_translations AS T2 ON T1.cardsetcodes_4 = T2.codevariant_2 WHERE T1.setname_2 = 'Battlebond'\n\n\t----- bird -----\tcard_games",
    "520": "\nSELECT f.artistnames_1, l.formattype_1 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nJOIN foreign_data f ON c.uniqueidentifier_71 = f.uniqueidentifier_7\nGROUP BY f.artistnames_1\nORDER BY COUNT(c.sequentialnumbers_0) ASC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "521": "\nSELECT c.statusvalue_36, l.formattype_1 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.artistnames_1 = 'D. Alexander Gregory' AND l.formattype_1 = 'Legacy' AND (c.statusvalue_36 = 'Sensitive Content' OR c.statusvalue_36 = 'Wizards of the Coast')\n\n\t----- bird -----\tcard_games",
    "522": "\nSELECT c.cardnames, l.formattype_1 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.legaldepartment_2 = 'Banned' AND c.ratings_10 = (SELECT MAX(ratings_10) FROM cards)\n\n\t----- bird -----\tcard_games",
    "523": "\nSELECT COUNT(DISTINCT s.setname) / 4 AS annual_average_sets, c.languages \nFROM sets s\nJOIN set_translations st ON s.cardsetcodes = st.codevariant\nJOIN foreign_data fd ON s.cardsetcodes = fd.uniqueidentifier_7\nJOIN cards c ON fd.uniqueidentifier_7 = c.uniqueidentifier_71\nWHERE s.datecolumn_17 BETWEEN '2012-01-01' AND '2015-12-31'\nGROUP BY c.languages\n\n\t----- bird -----\tcard_games",
    "524": "\nSELECT DISTINCT T1.artistnames_1 \nFROM cards AS T1\nJOIN legalities AS T2 ON T1.uniqueidentifier_71 = T2.uuididentifier_3\nWHERE T1.color_4 = 'Black' AND T2.formattype_1 = 'arena'\n\n\t----- bird -----\tcard_games",
    "525": "\nSELECT DISTINCT c.uniqueidentifier_71 \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.formattype_1 = 'old school' AND (l.legaldepartment_2 = 'restricted' OR l.legaldepartment_2 = 'banned')\n\n\t----- bird -----\tcard_games",
    "526": "\nSELECT COUNT(c.idnumbers_6) \nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE c.artistnames_1 = 'Matthew D. Wilson' AND l.formattype_1 = 'Paper'\nGROUP BY c.idnumbers_6\n\n\t----- bird -----\tcard_games",
    "527": "\nSELECT r.datecolumn_1, r.cardrulesexplanations_2 \nFROM cards c\nJOIN rulings r ON c.uniqueidentifier_71 = r.uniqueidentifier_3\nWHERE c.artistnames_1 = 'Kev Walker' AND c.cardnames_48 IS NOT NULL\nORDER BY r.datecolumn_1 DESC;\n\n\t----- bird -----\tcard_games",
    "528": "\nSELECT c.cardnames_48, l.formattype_1 \nFROM cards c\nJOIN sets s ON c.editioncodes_55 = s.cardsetcodes_4\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE s.setname_2 = 'Hour of Devastation'\n\n\t----- bird -----\tcard_games",
    "529": "\nSELECT s.setname_2\nFROM sets s\nLEFT JOIN set_translations st_jp ON s.cardsetcodes_4 = st_jp.codevariant_2 AND st_jp.languages_1 = 'Japanese'\nLEFT JOIN set_translations st_kr ON s.cardsetcodes_4 = st_kr.codevariant_2 AND st_kr.languages_1 = 'Korean'\nWHERE st_jp.sequentialnumbers_0 IS NULL AND st_kr.sequentialnumbers_0 IS NOT NULL\n\n\t----- bird -----\tcard_games",
    "530": "\nSELECT DISTINCT c.cardtype_52 AS frame_style, c.cardnames_48 AS card_name\nFROM cards c\nJOIN foreign_data fd ON c.uniqueidentifier_71 = fd.uniqueidentifier_7\nWHERE fd.userids_3 = (SELECT userids_66 FROM cards WHERE artistnames_1 = 'Allen Williams')\nUNION ALL\nSELECT DISTINCT c.cardtype_52, c.cardnames_48\nFROM cards c\nJOIN legalities l ON c.uniqueidentifier_71 = l.uuididentifier_3\nWHERE l.legaldepartment_2 = 'Banned'\n\n\t----- bird -----\tcard_games",
    "531": "\nSELECT usernames_3, SUM(CASE WHEN role_2 = 'reputation' THEN numberslist_1 ELSE 0 END) AS reputation_score\nFROM badges JOIN users ON badges.numberslist_1 = users.integerlist_0\nWHERE usernames_3 IN ('Harlan', 'Jarrod Dixon')\nGROUP BY usernames_3\nORDER BY reputation_score DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "532": "\nSELECT usernames_3 FROM users WHERE EXTRACT(YEAR FROM timestampdata_2) = 2014\n\n\t----- bird -----\tcodebase_community",
    "533": "\nSELECT COUNT(DISTINCT integerlist_0) \nFROM users \nWHERE timestampdata_4 > '2014-09-01'\n\n\t----- bird -----\tcodebase_community",
    "534": "\nSELECT u.usernames_3 FROM users u JOIN posts p ON u.integerlist_0 = p.numericdata_7 ORDER BY p.datacounts_12 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "535": "\nSELECT COUNT(DISTINCT u.integerlist_0) \nFROM users u\nJOIN votes v ON u.integerlist_0 = v.valuepresence_4\nWHERE v.valuecolumn_2 > 100\nAND EXISTS (\n    SELECT 1 FROM votes WHERE valuepresence_4 = u.integerlist_0 AND valuecolumn_2 < 0\n)\n\n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(*) FROM users WHERE durationcounts_10 > 10 AND timestampdata_2 > '2013-01-01'\n\n\t----- bird -----\tcodebase_community",
    "537": "\nSELECT COUNT(*) FROM posts WHERE userage_14 = (SELECT integerlist_0 FROM users WHERE usernames_3 = 'csgillespie')\n\n\t----- bird -----\tcodebase_community",
    "538": "\nSELECT p.statisticstitle_9 \nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "539": "\nSELECT u.usernames_3 FROM users u JOIN posts p ON u.integerlist_0 = p.numericdata_7 WHERE p.statisticstitle_9 = 'Eliciting priors from experts'\n\n\t----- bird -----\tcodebase_community",
    "540": "\nSELECT p.statisticstitle_9 \nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'csgillespie'\nORDER BY p.valuecounts_17 DESC\nLIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "541": "\nSELECT u.usernames_3 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nWHERE p.datacounts_12 = (\n    SELECT MAX(datacounts_12) \n    FROM posts\n)\n\n\t----- bird -----\tcodebase_community",
    "542": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "543": "\nSELECT COUNT(DISTINCT p.sequentialnumbers_0) AS answer_count\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'csgillespie'\nAND EXISTS (\n    SELECT 1\n    FROM postLinks pl\n    WHERE pl.valueslist_2 = p.sequentialnumbers_0\n)\nGROUP BY p.sequentialnumbers_0\nORDER BY COUNT(DISTINCT p.sequentialnumbers_0) DESC\nLIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "544": "\nSELECT u.usernames_3 FROM users u JOIN posts p ON u.integerlist_0 = p.userage_14 WHERE p.statisticstitle_9 = 'Examples for teaching: Correlation does not mean causation' ORDER BY p.lastupdatedtimestamp_15 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "545": "\nSELECT COUNT(*) FROM posts p JOIN users u ON p.numericdata_7 = u.integerlist_0 WHERE u.usernames_3 = 'csgillespie' AND p.activitylog_1 IS NULL\n\n\t----- bird -----\tcodebase_community",
    "546": "\nSELECT DISTINCT u.usernames_3\nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nWHERE p.topiccategories_10 = 'well-finished'\n\n\t----- bird -----\tcodebase_community",
    "547": "\nSELECT COUNT(p.sequentialnumbers_0) \nFROM posts p\nJOIN users u ON p.userage_14 = u.integerlist_0\nWHERE u.useractivitycounts_9 > 50 -- Assuming useractivitycounts_9 indicates elder status\nAND p.valuecounts_17 > 19;\n\n\t----- bird -----\tcodebase_community",
    "548": "\nSELECT u.locationdata_6 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.userage_14\nWHERE p.statisticstitle_9 = 'Eliciting priors from experts'\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "549": "\nSELECT p.statisticstitle_9, p.column_6_6 \nFROM posts p\nJOIN tags t ON p.sequentialnumbers_0 = t.userids_3\nWHERE t.statisticalterms_1 = 'bayesian'\n\n\t----- bird -----\tcodebase_community",
    "550": "\nSELECT p.column_6_6 AS post_body, t.statisticalterms_1 AS tag_text\nFROM posts p\nJOIN tags t ON p.sequentialnumbers_0 = t.userids_3\nWHERE t.statisticalterms_1 IN (\n    SELECT statisticalterms_1\n    FROM tags\n    GROUP BY statisticalterms_1\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\n\n\t----- bird -----\tcodebase_community",
    "551": "\nSELECT COUNT(*) FROM badges AS T1 JOIN users AS T2 ON T1.numberslist_1 = T2.integerlist_0 WHERE T2.usernames_3 = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "552": "\nSELECT T2.role_2 FROM users AS T1 JOIN badges AS T2 ON T1.integerlist_0 = T2.numberslist_1 WHERE T1.usernames_3 = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "553": "\nSELECT COUNT(*) FROM badges AS T1 JOIN users AS T2 ON T1.numberslist_1 = T2.integerlist_0 WHERE T2.usernames_3 = 'csgillespie' AND YEAR(T1.timestamp_3) = 2011\n\n\t----- bird -----\tcodebase_community",
    "554": "\nSELECT u.usernames_3 FROM users u JOIN badges b ON u.integerlist_0 = b.numberslist_1 GROUP BY u.usernames_3 ORDER BY COUNT(b.sequentialnumbers_0) DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "555": "\nSELECT AVG(posts.valuecounts_17) AS average_score\nFROM posts\nJOIN users ON posts.userage_14 = users.integerlist_0\nWHERE users.usernames_3 = 'csgillespie'\n\n\t----- bird -----\tcodebase_community",
    "556": "\nSELECT AVG(T1.sequentialnumbers_0) AS average_badges\nFROM badges AS T1\nJOIN users AS T2 ON T1.numberslist_1 = T2.integerlist_0\nWHERE T2.useractivitycounts_9 > 200\n\n\t----- bird -----\tcodebase_community",
    "557": "\nSELECT CAST(COUNT(CASE WHEN u.userage_14 > 50 THEN p.sequentialnumbers_0 END) AS FLOAT) * 100 / COUNT(p.sequentialnumbers_0) AS percentage\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE p.valuecounts_13 > 20\n\n\t----- bird -----\tcodebase_community",
    "558": "\nSELECT COUNT(*) AS vote_count\nFROM votes v\nJOIN posts p ON v.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON v.valuepresence_4 = u.integerlist_0\nWHERE u.userids_1 = 58 AND DATE(v.datecolumn_3) = '2010-07-19'\n\n\t----- bird -----\tcodebase_community",
    "559": "\nSELECT datecolumn_3 FROM votes GROUP BY datecolumn_3 ORDER BY COUNT(*) DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "560": "\nSELECT COUNT(*) AS revival_badge_count\nFROM badges\nWHERE role_2 = 'Revival';\n\n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT p.statisticstitle_9 \nFROM posts p\nJOIN (\n    SELECT c.numericdata_1 AS post_id, MAX(c.datavalues_2) AS max_score\n    FROM comments c\n    GROUP BY c.numericdata_1\n) subq\nON p.sequentialnumbers_0 = subq.post_id\nWHERE p.sequentialnumbers_0 = subq.post_id AND p.datavalues_2 = subq.max_score\n\n\t----- bird -----\tcodebase_community",
    "562": "\nSELECT COUNT(*) AS comment_count \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.datacounts_12 = 1910\n\n\t----- bird -----\tcodebase_community",
    "563": "\nSELECT p.valuecounts_17 FROM posts p JOIN comments c ON p.sequentialnumbers_0 = c.datavalues_2 WHERE c.usernames_6 = 'User No.3025' AND c.timestamp_4 = '2014-04-23 20:29:39'\n\n\t----- bird -----\tcodebase_community",
    "564": "\nSELECT T1.usercomments_3 FROM comments AS T1 JOIN posts AS T2 ON T1.numericdata_1 = T2.sequentialnumbers_0 WHERE T2.activitylog_1 = 107829 LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "565": "\nSELECT p.sequentialnumbers_0, p.statisticstitle_9, c.usercomments_3 \nFROM posts p\nJOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE c.usernames_6 = 'User No.23853' AND c.timestamp_4 = '2013-07-12 09:08:18'\n\n\t----- bird -----\tcodebase_community",
    "566": "\nSELECT U.userids_11 FROM posts P JOIN users U ON P.numericdata_7 = U.integerlist_0 WHERE P.sequentialnumbers_0 = 65041\n\n\t----- bird -----\tcodebase_community",
    "567": "\nSELECT COUNT(*) FROM posts AS T1 JOIN users AS T2 ON T1.numericdata_7 = T2.integerlist_0 WHERE T2.usernames_3 = 'Tiago Pasqualini'\n\n\t----- bird -----\tcodebase_community",
    "568": "\nSELECT U.usernames_3 FROM users U JOIN votes V ON U.integerlist_0 = V.valuepresence_4 WHERE V.sequentialnumbers_0 = 6347\n\n\t----- bird -----\tcodebase_community",
    "569": "\nSELECT COUNT(v.sequentialnumbers_0) AS vote_count\nFROM votes v\nJOIN posts p ON v.numericdata_1 = p.sequentialnumbers_0\nWHERE p.statisticstitle_9 LIKE '%data visualization%'\n\n\t----- bird -----\tcodebase_community",
    "570": "\nSELECT T1.role_2 FROM badges AS T1 JOIN users AS T2 ON T1.sequentialnumbers_0 = T2.integerlist_0 WHERE T2.usernames_3 = 'DatEpicCoderGuyWhoPrograms'\n\n\t----- bird -----\tcodebase_community",
    "571": "\nSELECT \n    (SELECT COUNT(*) FROM posts WHERE numericdata_7 = 24) AS post_count,\n    (SELECT COUNT(*) FROM votes WHERE valuepresence_4 = 24) AS vote_count\nFROM dual;\n\n\t----- bird -----\tcodebase_community",
    "572": "\nSELECT valuecounts_12 FROM posts WHERE statisticstitle_9 = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' \n\t----- bird -----\tcodebase_community",
    "573": "\nSELECT usercomments_3 FROM comments WHERE numericdata_5 = 17\n\n\t----- bird -----\tcodebase_community",
    "574": "\nSELECT usernames_3 FROM users WHERE websites_5 = 'http://stackoverflow.com'\n\n\t----- bird -----\tcodebase_community",
    "575": "\nSELECT T1.role_2 FROM badges AS T1 JOIN users AS T2 ON T1.numberslist_1 = T2.integerlist_0 WHERE T2.usernames_3 = 'SilentGhost'\n\n\t----- bird -----\tcodebase_community",
    "576": "\nSELECT usernames_6 FROM comments WHERE usercomments_3 = 'thank you user93!'\n\n\t----- bird -----\tcodebase_community",
    "577": "\nSELECT * FROM comments WHERE usernames_6 = 'A Lion.'\n\n\t----- bird -----\tcodebase_community",
    "578": "\nSELECT u.usernames_3, u.durationcounts_10 AS reputation\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE p.statisticstitle_9 = 'Understanding what Dassault iSight is doing?'\n\n\t----- bird -----\tcodebase_community",
    "579": "\nSELECT c.usercomments_3, p.statisticstitle_9, c.timestamp_4 \nFROM comments AS c\nJOIN posts AS p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.statisticstitle_9 = 'How does gentle boosting differ from AdaBoost?'\n\n\t----- bird -----\tcodebase_community",
    "580": "\nSELECT u.usernames_3 FROM badges b JOIN users u ON b.numberslist_1 = u.integerlist_0 WHERE b.role_2 = 'Necromancer' LIMIT 10;\n\n\t----- bird -----\tcodebase_community",
    "581": "\nSELECT u.usernames_3 FROM users u JOIN posts p ON u.integerlist_0 = p.numericdata_7 WHERE p.statisticstitle_9 = 'Open source tools for visualizing multi-dimensional data?'\n\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT p.statisticstitle_9 \nFROM posts p\nJOIN postHistory ph ON p.sequentialnumbers_0 = ph.groupids_2\nJOIN users u ON ph.numericvalues_5 = u.integerlist_0\nWHERE u.usernames_3 = 'Vebjorn Ljosa'\n\n\t----- bird -----\tcodebase_community",
    "583": "\nSELECT SUM(p.valuecounts_17) AS total_score, u.websites_5 \nFROM posts p\nJOIN postHistory ph ON p.sequentialnumbers_0 = ph.groupids_2\nJOIN users u ON p.userage_14 = u.integerlist_0\nWHERE u.usernames_3 = 'Yevgeny'\nGROUP BY u.websites_5\n\n\t----- bird -----\tcodebase_community",
    "584": "\nSELECT c.usernames_6, c.usercomments_3, c.timestamp_4\nFROM comments AS c\nJOIN posts AS p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.statisticstitle_9 = 'Why square the difference instead of taking the absolute value in standard deviation?'\n\n\t----- bird -----\tcodebase_community",
    "585": "\nSELECT SUM(posts.valuecounts_17) AS total_bounty_amount\nFROM posts\nWHERE statisticstitle_9 = 'data'\n\n\t----- bird -----\tcodebase_community",
    "586": "\nSELECT u.usernames_3, p.statisticstitle_9 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nWHERE p.statisticstitle_9 LIKE '%variance%' AND EXISTS (\n    SELECT 1 FROM badges b WHERE b.numberslist_1 = u.integerlist_0 AND b.role_2 = 'bounty' AND b.timestamp_3 IN (\n        SELECT MAX(b.timestamp_3) FROM badges b WHERE b.numberslist_1 = u.integerlist_0 AND b.role_2 = 'bounty'\n    ) AND b.sequentialnumbers_0 = 50\n)\n\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT p.statisticstitle_9, c.usercomments_3, v.valuecolumn_2 \nFROM posts p\nJOIN tags t ON p.sequentialnumbers_0 = t.userids_3\nLEFT JOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nLEFT JOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE t.statisticalterms_1 = 'humor'\nGROUP BY p.statisticstitle_9, c.usercomments_3, v.valuecolumn_2\n\n\t----- bird -----\tcodebase_community",
    "588": "\nSELECT COUNT(*) \nFROM comments \nWHERE numericdata_5 = 13;\n\n\t----- bird -----\tcodebase_community",
    "589": "\nSELECT integerlist_0 AS user_id, SUM(CASE WHEN role_2 = 'reputation' THEN numberslist_1 ELSE 0 END) AS total_reputation\nFROM badges JOIN users ON badges.numberslist_1 = users.integerlist_0\nGROUP BY integerlist_0\nORDER BY total_reputation DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "590": "\nSELECT userids_11 FROM users ORDER BY durationcounts_10 ASC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "591": "\nSELECT COUNT(DISTINCT T1.integerlist_0) \nFROM users AS T1\nJOIN badges AS T2 ON T1.integerlist_0 = T2.numberslist_1\nWHERE T2.role_2 = 'supporter' AND YEAR(T2.timestamp_3) = 2011;\n\n\t----- bird -----\tcodebase_community",
    "592": "\nSELECT COUNT(DISTINCT numberslist_1) FROM badges WHERE sequentialnumbers_0 > 5\n\n\t----- bird -----\tcodebase_community",
    "593": "\nSELECT COUNT(DISTINCT u.integerlist_0) \nFROM users u\nJOIN badges b ON u.integerlist_0 = b.numberslist_1\nWHERE u.locationdata_6 = 'New York' AND b.role_2 IN ('teacher', 'supporter')\n\n\t----- bird -----\tcodebase_community",
    "594": "\nSELECT u.usernames_3, u.durationcounts_10 AS reputation\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE p.sequentialnumbers_0 = 1;\n\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT u.usernames_3\nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nJOIN postHistory ph ON p.sequentialnumbers_0 = ph.groupids_2\nGROUP BY u.usernames_3, p.sequentialnumbers_0\nHAVING COUNT(ph.sequentialnumbers_0) = 1 AND p.datacounts_12 >= 1000\n\n\t----- bird -----\tcodebase_community",
    "596": "\nSELECT u.usernames_3, b.role_2 \nFROM users u\nJOIN badges b ON u.integerlist_0 = b.sequentialnumbers_0\nWHERE u.integerlist_0 IN (\n    SELECT c.numericdata_5 \n    FROM comments c\n    GROUP BY c.numericdata_5\n    ORDER BY COUNT(c.sequentialnumbers_0) DESC\n    LIMIT 1\n)\n\n\t----- bird -----\tcodebase_community",
    "597": "\nSELECT COUNT(u.integerlist_0) \nFROM users u\nJOIN badges b ON u.integerlist_0 = b.numberslist_1\nWHERE u.locationdata_6 = 'India' AND b.role_2 = 'teacher'\n\n\t----- bird -----\tcodebase_community",
    "598": "\nSELECT \n    ((COUNT(CASE WHEN EXTRACT(YEAR FROM timestamp_3) = 2011 THEN sequentialnumbers_0 END) - COUNT(CASE WHEN EXTRACT(YEAR FROM timestamp_3) = 2010 THEN sequentialnumbers_0 END)) / CAST(COUNT(CASE WHEN EXTRACT(YEAR FROM timestamp_3) = 2010 THEN sequentialnumbers_0 END) AS FLOAT)) * 100 AS percentage_difference\nFROM badges\nWHERE role_2 = 'student';\n\n\t----- bird -----\tcodebase_community",
    "599": "\nSELECT ph.uniqueidentifier_3, COUNT(DISTINCT c.usernames_6) AS unique_commenters_count\nFROM postHistory ph\nJOIN posts p ON ph.groupids_2 = p.sequentialnumbers_0\nJOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE p.sequentialnumbers_0 = 3720\nGROUP BY ph.uniqueidentifier_3\n\n\t----- bird -----\tcodebase_community",
    "600": "\nSELECT p.sequentialnumbers_0, p.statisticstitle_9, COUNT(v.sequentialnumbers_0) AS popularity\nFROM posts p\nLEFT JOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nWHERE p.sequentialnumbers_0 = 61217 OR p.sequentialnumbers_0 IN (\n    SELECT valueslist_2 FROM postLinks WHERE useractivitycounts_3 = 61217\n)\nGROUP BY p.sequentialnumbers_0, p.statisticstitle_9;\n\n\t----- bird -----\tcodebase_community",
    "601": "\nSELECT posts.sequentialnumbers_0, postLinks.valueslist_2 \nFROM posts \nJOIN postLinks ON posts.sequentialnumbers_0 = postLinks.valueslist_2 \nWHERE posts.sequentialnumbers_0 = 395;\n\n\t----- bird -----\tcodebase_community",
    "602": "\nSELECT p.sequentialnumbers_0 AS post_id, u.integerlist_0 AS user_id\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE p.activitylog_1 > 60;\n\n\t----- bird -----\tcodebase_community",
    "603": "\nSELECT SUM(CASE WHEN EXTRACT(YEAR FROM posts.timestamp_3) = 2011 THEN votes.valuecolumn_2 ELSE 0 END) AS favourite_count_sum\nFROM votes\nJOIN posts ON votes.numericdata_1 = posts.sequentialnumbers_0\nWHERE votes.valuepresence_4 = 686;\n\n\t----- bird -----\tcodebase_community",
    "604": "\nSELECT AVG(u.userage_14) AS average_user_age, AVG(v.valuecolumn_2) AS average_up_votes\nFROM users u\nJOIN posts p ON u.integerlist_0 = p.userinteractionid_5\nLEFT JOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nGROUP BY u.integerlist_0\nHAVING COUNT(p.sequentialnumbers_0) > 10\n\n\t----- bird -----\tcodebase_community",
    "605": "\nSELECT COUNT(*) FROM badges WHERE role_2 = 'Announcer'\n\n\t----- bird -----\tcodebase_community",
    "606": "\nSELECT role_2 FROM badges WHERE timestamp_3 = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "607": "\nSELECT COUNT(*) AS positive_comments_count\nFROM comments\nWHERE usercomments_3 LIKE '%positive%' OR usercomments_3 LIKE '%good%'\n\n\t----- bird -----\tcodebase_community",
    "608": "\nSELECT usercomments_3, timestamp_4 FROM comments WHERE timestamp_4 = '2010-07-19 19:25:47'\n\n\t----- bird -----\tcodebase_community",
    "609": "\nSELECT COUNT(*) FROM posts WHERE valuecounts_17 = 10\n\n\t----- bird -----\tcodebase_community",
    "610": "\nSELECT u.usernames_3, b.role_2 \nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE u.durationcounts_10 = (SELECT MAX(durationcounts_10) FROM users)\nORDER BY b.sequentialnumbers_0 DESC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "611": "\nSELECT U.userids_11 FROM badges AS B JOIN users AS U ON B.numberslist_1 = U.integerlist_0 WHERE B.timestamp_3 = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "612": "\nSELECT u.usernames_3, b.role_2 \nFROM users u\nJOIN badges b ON u.integerlist_0 = b.numberslist_1\nWHERE u.usernames_3 = 'Pierre'\n\n\t----- bird -----\tcodebase_community",
    "613": "\nSELECT u.timestampdata_2, b.timestamp_3 \nFROM users u\nJOIN badges b ON u.integerlist_0 = b.numberslist_1\nWHERE u.locationdata_6 = 'Rochester, NY'\n\n\t----- bird -----\tcodebase_community",
    "614": "\nSELECT CAST(COUNT(DISTINCT b.sequentialnumbers_0) AS FLOAT) * 100 / (SELECT COUNT(*) FROM users) AS teacher_badge_percentage\nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE b.role_2 = 'Teacher'\n\n\t----- bird -----\tcodebase_community",
    "615": "\nSELECT CAST(COUNT(CASE WHEN users.userage_14 BETWEEN 13 AND 19 THEN 1 END) AS FLOAT) * 100 / COUNT(badges.sequentialnumbers_0) \nFROM badges\nJOIN posts ON badges.numberslist_1 = posts.userinteractionid_5\nJOIN users ON badges.numberslist_1 = users.integerlist_0\nWHERE badges.role_2 = 'Organizer'\n\n\t----- bird -----\tcodebase_community",
    "616": "\nSELECT c.numericdata_5 AS user_id, c.datavalues_2 AS rating_score\nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.timestamp_3 = '2010-07-19 19:19:56'\n\n\t----- bird -----\tcodebase_community",
    "617": "\nSELECT c.usercomments_3, p.statisticstitle_9 \nFROM comments AS c\nJOIN posts AS p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.timestamp_3 = '2010-07-19 19:37:33'\n\n\t----- bird -----\tcodebase_community",
    "618": "\nSELECT T2.userage_14 \nFROM badges AS T1 \nJOIN users AS T2 ON T1.numberslist_1 = T2.integerlist_0 \nWHERE T2.locationdata_6 = 'Vienna, Austria'\n\n\t----- bird -----\tcodebase_community",
    "619": "\nSELECT COUNT(*) \nFROM badges AS b\nJOIN users AS u ON b.numberslist_1 = u.integerlist_0\nWHERE b.role_2 = 'Supporter' AND u.userage_14 >= 18\n\n\t----- bird -----\tcodebase_community",
    "620": "\nSELECT U.integerlist_0, U.useractivitycounts_9 AS number_of_views\nFROM badges B\nJOIN users U ON B.numberslist_1 = U.integerlist_0\nWHERE B.timestamp_3 = '2010-07-19 19:39:08'\n\n\t----- bird -----\tcodebase_community",
    "621": "\nSELECT DISTINCT b.role_2 FROM badges b JOIN users u ON b.numberslist_1 = u.integerlist_0 WHERE u.useractivitycounts_9 = (SELECT MIN(useractivitycounts_9) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "622": "\nSELECT b.role_2 FROM badges b JOIN users u ON b.numberslist_1 = u.integerlist_0 WHERE u.usernames_3 = 'Sharpie'\n\n\t----- bird -----\tcodebase_community",
    "623": "\nSELECT COUNT(*) \nFROM badges \nWHERE role_2 = 'Supporter'\n\n\t----- bird -----\tcodebase_community",
    "624": "\nSELECT usernames_3 FROM users WHERE integerlist_0 = 30;\n\n\t----- bird -----\tcodebase_community",
    "625": "\nSELECT COUNT(*) FROM users WHERE locationdata_6 = 'New York'\n\n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT COUNT(*) AS vote_count FROM votes WHERE YEAR(datecolumn_3) = 2010\n\n\t----- bird -----\tcodebase_community",
    "627": "\nSELECT COUNT(*) FROM users WHERE userage_14 >= 18\n\n\t----- bird -----\tcodebase_community",
    "628": "\nSELECT u.usernames_3, COUNT(p.sequentialnumbers_0) AS view_count\nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nGROUP BY u.usernames_3\nORDER BY view_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "629": "\nSELECT \n    SUM(CASE WHEN YEAR(datecolumn_3) = 2010 THEN 1 ELSE 0 END) AS votes_2010,\n    SUM(CASE WHEN YEAR(datecolumn_3) = 2011 THEN 1 ELSE 0 END) AS votes_2011\nFROM \n    votes\nWHERE \n    datecolumn_3 BETWEEN '2010-01-01' AND '2011-12-31';\n\n\t----- bird -----\tcodebase_community",
    "630": "\nSELECT T2.statisticalterms_1 FROM users AS T1 JOIN tags AS T2 ON T1.integerlist_0 = T2.userids_3 WHERE T1.usernames_3 = 'John Stauffer'\n\n\t----- bird -----\tcodebase_community",
    "631": "\nSELECT COUNT(*) FROM posts p JOIN users u ON p.numericdata_7 = u.integerlist_0 WHERE u.usernames_3 = 'Daniel Vassallo'\n\n\t----- bird -----\tcodebase_community",
    "632": "\nSELECT COUNT(*) FROM votes V JOIN users U ON V.valuepresence_4 = U.integerlist_0 WHERE U.usernames_3 = 'Harlan'\n\n\t----- bird -----\tcodebase_community",
    "633": "\nSELECT p.sequentialnumbers_0 AS post_id\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'slashnick'\nORDER BY p.valuecounts_17 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "634": "\nSELECT p.sequentialnumbers_0, c.usernames_6, COUNT(c.sequentialnumbers_0) AS comment_count\nFROM posts p\nJOIN postHistory ph ON p.sequentialnumbers_0 = ph.groupids_2\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nLEFT JOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE u.usernames_3 IN ('Harvey Motulsky', 'Noah Snyder')\nGROUP BY p.sequentialnumbers_0, c.usernames_6\nORDER BY comment_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "635": "\nSELECT COUNT(p.sequentialnumbers_0) \nFROM posts p\nJOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE u.usernames_3 = 'Matt Parker' AND v.valuecolumn_2 > 4\n\n\t----- bird -----\tcodebase_community",
    "636": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON c.numericdata_5 = u.integerlist_0\nWHERE u.usernames_3 = 'Neil McGuigan' AND c.usercomments_3 LIKE '%negative%'\n\n\t----- bird -----\tcodebase_community",
    "637": "\nSELECT T1.statisticalterms_1 \nFROM tags AS T1\nJOIN posts AS T2 ON T1.userids_3 = T2.sequentialnumbers_0\nLEFT JOIN comments AS T3 ON T2.sequentialnumbers_0 = T3.numericdata_1\nJOIN users AS T4 ON T2.userage_14 = T4.integerlist_0\nWHERE T4.usernames_3 = 'Mark Meckes' AND T3.sequentialnumbers_0 IS NULL;\n\n\t----- bird -----\tcodebase_community",
    "638": "\nSELECT u.usernames_3 FROM users u JOIN badges b ON u.integerlist_0 = b.numberslist_1 WHERE b.role_2 = 'Organizer'\n\n\t----- bird -----\tcodebase_community",
    "639": "\nSELECT CAST(COUNT(CASE WHEN statisticstitle_9 LIKE '%R%' THEN sequentialnumbers_0 END) AS FLOAT) * 100 / COUNT(sequentialnumbers_0) AS percentage_R_language_posts\nFROM posts p\nJOIN badges b ON p.userinteractionid_5 = b.numberslist_1\nWHERE b.role_2 = 'Community'\n\n\t----- bird -----\tcodebase_community",
    "640": "\nSELECT (subq_mornington.view_count - subq_amos.view_count) AS view_difference\nFROM (\n    SELECT SUM(posts.datacounts_12) AS view_count\n    FROM posts\n    JOIN users ON posts.numericdata_7 = users.integerlist_0\n    WHERE users.usernames_3 = 'mornington'\n) subq_mornington,\n(\n    SELECT SUM(posts.datacounts_12) AS view_count\n    FROM posts\n    JOIN users ON posts.numericdata_7 = users.integerlist_0\n    WHERE users.usernames_3 = 'Amos'\n) subq_amos\n\n\t----- bird -----\tcodebase_community",
    "641": "\nSELECT COUNT(DISTINCT numberslist_1) \nFROM badges \nWHERE role_2 = 'commentator' AND YEAR(timestamp_3) = 2014;\n\n\t----- bird -----\tcodebase_community",
    "642": "\nSELECT COUNT(*) FROM posts WHERE DATE(timestamp_3) = '2010-07-21'\n\n\t----- bird -----\tcodebase_community",
    "643": "\nSELECT u.usernames_3, u.userage_14 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7 \nORDER BY p.datacounts_12 DESC \nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "644": "\nSELECT T1.lastupdatedtimestamp_15, T1.userage_14 \nFROM posts AS T1 \nJOIN users AS T2 ON T1.userage_14 = T2.integerlist_0 \nWHERE T1.statisticstitle_9 = 'Detecting a given face in a database of facial images'\n\n\t----- bird -----\tcodebase_community",
    "645": "\nSELECT COUNT(*) \nFROM comments \nWHERE numericdata_5 = 13 AND usercomments_3 LIKE '%negative%' OR usercomments_3 LIKE '%bad%' OR usercomments_3 LIKE '%poor%'\n\n\t----- bird -----\tcodebase_community",
    "646": "\nSELECT p.statisticstitle_9, u.usernames_3 \nFROM posts p\nJOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nJOIN users u ON c.numericdata_5 = u.integerlist_0\nWHERE c.usercomments_3 LIKE '%positive%'\n\n\t----- bird -----\tcodebase_community",
    "647": "\nSELECT u.usernames_3, b.role_2 \nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE EXTRACT(YEAR FROM b.timestamp_3) = 2011 AND u.locationdata_6 = 'North Pole'\n\n\t----- bird -----\tcodebase_community",
    "648": "\nSELECT U.usernames_3, U.websites_5 \nFROM users U\nJOIN posts P ON U.integerlist_0 = P.numericdata_7 \nWHERE P.valuecounts_17 > 150;\n\n\t----- bird -----\tcodebase_community",
    "649": "\nSELECT ph.statisticalquestions_6, COUNT(ph.sequentialnumbers_0) AS post_history_count, MAX(ph.timestamp_4) AS last_edit_date\nFROM posts p\nJOIN postHistory ph ON p.sequentialnumbers_0 = ph.groupids_2\nWHERE p.statisticstitle_9 = 'What is the best introductory Bayesian statistics textbook?'\nGROUP BY ph.statisticalquestions_6\n\n\t----- bird -----\tcodebase_community",
    "650": "\nSELECT u.timestampdata_4 AS last_accessed_date, u.locationdata_6 AS location\nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE b.role_2 = 'outliers'\nORDER BY u.timestampdata_4 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "651": "\nSELECT statisticstitle_9 \nFROM posts \nWHERE topiccategories_10 = 'How to tell if something happened in a data set which monitors a value over time'\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "652": "\nSELECT p.sequentialnumbers_0, b.role_2 \nFROM posts p\nJOIN badges b ON p.numericdata_7 = b.numberslist_1\nJOIN users u ON u.integerlist_0 = b.numberslist_1\nWHERE u.usernames_3 = 'Samuel' AND YEAR(b.timestamp_3) = 2013\n\n\t----- bird -----\tcodebase_community",
    "653": "\nSELECT u.usernames_3 FROM users u JOIN posts p ON u.integerlist_0 = p.numericdata_7 ORDER BY p.datacounts_12 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "654": "\nSELECT u.usernames_3, u.locationdata_6 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nJOIN tags t ON p.sequentialnumbers_0 = t.userids_3\nWHERE t.statisticalterms_1 = 'hypothesis-testing'\nAND p.topiccategories_10 = 'excerpt';\n\n\t----- bird -----\tcodebase_community",
    "655": "\nSELECT p.statisticstitle_9, pl.valueslist_2 \nFROM posts p\nJOIN postLinks pl ON p.sequentialnumbers_0 = pl.valueslist_2\nWHERE p.statisticstitle_9 = 'What are principal component scores?'\n\n\t----- bird -----\tcodebase_community",
    "656": "\nSELECT U.usernames_3 FROM users AS U JOIN posts AS P ON U.integerlist_0 = P.numericdata_7 WHERE P.valueslist_4 = (SELECT MAX(valueslist_4) FROM posts)\n\n\t----- bird -----\tcodebase_community",
    "657": "\nSELECT u.usernames_3, u.websites_5 \nFROM votes v\nJOIN posts p ON v.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON v.valuepresence_4 = u.integerlist_0\nWHERE v.valuecolumn_2 = 8\nORDER BY p.valueslist_4 DESC\nLIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "658": "\nSELECT statisticstitle_9 AS title FROM posts ORDER BY valuecounts_17 DESC LIMIT 5\n\n\t----- bird -----\tcodebase_community",
    "659": "\nSELECT COUNT(*) FROM tags WHERE (userids_3 BETWEEN 5000 AND 7000)\n\n\t----- bird -----\tcodebase_community",
    "660": "\nSELECT u.integerlist_0 AS owner_user_id FROM posts p JOIN users u ON p.numericdata_7 = u.integerlist_0 ORDER BY p.valuecounts_13 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT T2.userage_14 FROM postLinks AS T1 JOIN posts AS T2 ON T1.valueslist_2 = T2.sequentialnumbers_0 ORDER BY T1.useractivitycounts_3 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "662": "\nSELECT COUNT(p.sequentialnumbers_0) \nFROM posts p\nJOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nWHERE YEAR(p.timestamp_3) = 2011 AND p.valuecounts_17 = 50\n\n\t----- bird -----\tcodebase_community",
    "663": "\nSELECT integerlist_0 FROM users ORDER BY userage_14 ASC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "664": "\nWITH tagged_posts AS (\n    SELECT p.sequentialnumbers_0, t.statisticalterms_1, COUNT(*) AS tag_count\n    FROM posts p\n    JOIN tags t ON p.sequentialnumbers_0 = t.userids_3\n    GROUP BY p.sequentialnumbers_0, t.statisticalterms_1\n),\nmost_popular_tag AS (\n    SELECT statisticalterms_1\n    FROM tagged_posts\n    ORDER BY SUM(tag_count) DESC\n    LIMIT 1\n)\nSELECT p.valuecounts_17 AS score\nFROM posts p\nJOIN most_popular_tag mpt ON p.topiccategories_10 = mpt.statisticalterms_1\nORDER BY p.valuecounts_17 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT MONTH(postLinks.timestampdata_1) AS month, COUNT(*) / 12.0 AS averageMonthlyLinks\nFROM postLinks\nJOIN posts ON postLinks.valueslist_2 = posts.sequentialnumbers_0\nWHERE YEAR(postLinks.timestampdata_1) = 2010 AND (SELECT COUNT(*) FROM comments WHERE numericdata_1 = posts.sequentialnumbers_0) <= 2\nGROUP BY month\n\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT p.sequentialnumbers_0 AS post_id, v.valuecolumn_2 AS value_score\nFROM posts p\nJOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nWHERE v.valuepresence_4 = 1465\nORDER BY v.valuecolumn_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "667": "\nSELECT p.statisticstitle_9 \nFROM posts p\nJOIN postLinks pl ON p.sequentialnumbers_0 = pl.valueslist_2\nORDER BY pl.timestampdata_1 ASC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "668": "\nSELECT u.usernames_3 FROM users u JOIN badges b ON u.integerlist_0 = b.numberslist_1 GROUP BY u.usernames_3, b.sequentialnumbers_0 ORDER BY COUNT(b.sequentialnumbers_0) DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "669": "\nSELECT MIN(v.datecolumn_3) AS first_vote_date\nFROM votes v\nJOIN users u ON v.valuepresence_4 = u.integerlist_0\nWHERE u.usernames_3 = 'chl'\n\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(p.timestamp_3) AS first_post_date\nFROM posts p\nJOIN users u ON p.userage_14 = u.integerlist_0\nORDER BY u.integerlist_0 ASC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "671": "\nSELECT u.usernames_3 FROM users u JOIN badges b ON u.integerlist_0 = b.numberslist_1 WHERE b.role_2 = 'Autobiographer' ORDER BY b.timestamp_3 ASC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "672": "\nSELECT COUNT(DISTINCT u.integerlist_0) \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nWHERE u.locationdata_6 = 'United Kingdom'\nAND (\n    SELECT SUM(CASE WHEN v.valuecolumn_2 >= 4 THEN 1 ELSE 0 END)\n    FROM votes v\n    WHERE v.numericdata_1 = p.sequentialnumbers_0\n) >= 4\n\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(count_posts) FROM (\n    SELECT COUNT(*) AS count_posts, u.integerlist_0 \n    FROM posts p JOIN users u ON p.userage_14 = u.integerlist_0 \n    WHERE p.numericdata_7 = u.integerlist_0 \n    GROUP BY u.integerlist_0\n    ORDER BY u.timestampdata_2 ASC LIMIT 1\n) AS oldest_user_posts\n\n\t----- bird -----\tcodebase_community",
    "674": "\nSELECT usernames_3 FROM users WHERE integerlist_0 = (SELECT valuecounts_17 FROM posts ORDER BY valuecounts_17 DESC LIMIT 1)\n\n\t----- bird -----\tcodebase_community",
    "675": "\nSELECT COUNT(*) FROM users WHERE integerlist_0 IN (SELECT numericdata_7 FROM posts WHERE valuecounts_17 > 1000) AND integerlist_0 NOT IN (SELECT valuepresence_4 FROM votes) AND integerlist_0 IN (SELECT numericvalues_5 FROM postHistory)\n\n\t----- bird -----\tcodebase_community",
    "676": "\nSELECT usernames_3 FROM users WHERE userage_14 >= 18\n\n\t----- bird -----\tcodebase_community",
    "677": "\nSELECT COUNT(*) FROM posts p JOIN users u ON p.numericdata_7 = u.integerlist_0 WHERE u.usernames_3 = 'Jay Stevens' AND YEAR(p.timestamp_3) = 2010\n\n\t----- bird -----\tcodebase_community",
    "678": "\nSELECT p.sequentialnumbers_0, p.statisticstitle_9 \nFROM posts p\nJOIN votes v ON p.sequentialnumbers_0 = v.numericdata_1\nJOIN users u ON v.valuepresence_4 = u.integerlist_0\nWHERE u.usernames_3 = 'Harvey Motulsky'\nORDER BY v.valuecolumn_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "679": "\nSELECT p.sequentialnumbers_0, p.statisticstitle_9 \nFROM posts p\nORDER BY p.valuecounts_17 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "680": "\nSELECT AVG(posts.valuecounts_17) AS average_score\nFROM posts\nJOIN users ON posts.userage_14 = users.integerlist_0\nWHERE users.usernames_3 = 'Stephen Turner'\n\n\t----- bird -----\tcodebase_community",
    "681": "\nSELECT DISTINCT u.usernames_3\nFROM users u\nJOIN posts p ON u.integerlist_0 = p.numericdata_7\nWHERE p.datacounts_12 > 20000 AND YEAR(p.timestamp_3) = 2011\n\n\t----- bird -----\tcodebase_community",
    "682": "\nSELECT p.sequentialnumbers_0, u.usernames_3 \nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE YEAR(p.timestamp_3) = 2010\nORDER BY p.valuecounts_17 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "683": "\nSELECT CAST(COUNT(CASE WHEN u.integerlist_0 > 1000 THEN p.sequentialnumbers_0 END) AS FLOAT) / COUNT(p.sequentialnumbers_0) * 100 AS percentage\nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE YEAR(p.timestamp_3) = 2011\n\n\t----- bird -----\tcodebase_community",
    "684": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM users) * 100 AS percentage_of_teenage_users\nFROM users\nWHERE userage_14 BETWEEN 13 AND 19;\n\n\t----- bird -----\tcodebase_community",
    "685": "\nSELECT p.sequentialnumbers_0, u.usernames_3 \nFROM posts p\nJOIN users u ON p.numericdata_7 = u.integerlist_0\nWHERE p.statisticstitle_9 = 'Computer Game Datasets'\nORDER BY p.lastupdatedtimestamp_15 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "686": "\nWITH total_posts AS (\n    SELECT COUNT(*) as total_count, AVG(valuecounts_17) OVER() as avg_views\n    FROM posts\n),\nfiltered_posts AS (\n    SELECT sequentialnumbers_0\n    FROM posts, total_posts\n    WHERE valuecounts_17 > total_posts.avg_views\n)\nSELECT COUNT(*) as posts_above_avg_views\nFROM filtered_posts\n\n\t----- bird -----\tcodebase_community",
    "687": "\nSELECT COUNT(*) AS comment_count\nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.numericdata_7 = (\n    SELECT MAX(numericdata_7)\n    FROM posts\n)\n\n\t----- bird -----\tcodebase_community",
    "688": "\nSELECT COUNT(*) FROM posts WHERE valuecounts_12 > 35000 AND sequentialnumbers_0 NOT IN (SELECT numericdata_1 FROM comments)\n\n\t----- bird -----\tcodebase_community",
    "689": "\nSELECT u.usernames_3, u.locationdata_6 \nFROM users u\nJOIN posts p ON u.integerlist_0 = p.userage_14 OR u.integerlist_0 = p.numericdata_7\nWHERE p.sequentialnumbers_0 = 183 \nORDER BY p.lastupdatedtimestamp_15 DESC LIMIT 1\n\n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT b.timestamp_3, b.role_2 \nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE u.usernames_3 = 'Emmett'\nORDER BY b.timestamp_3 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "691": "\nSELECT COUNT(u.integerlist_0) \nFROM users u\nJOIN votes v ON u.integerlist_0 = v.valuepresence_4\nWHERE u.userage_14 >= 18 AND v.valuecolumn_2 > 0\nGROUP BY u.integerlist_0\nHAVING SUM(v.valuecolumn_2) > 5000\n\n\t----- bird -----\tcodebase_community",
    "692": "\nSELECT TIMESTAMPDIFF(DAY, u.timestampdata_2, b.timestamp_3) AS days_to_badge\nFROM badges b\nJOIN users u ON b.numberslist_1 = u.integerlist_0\nWHERE u.usernames_3 = 'Zolomon'\n\n\t----- bird -----\tcodebase_community",
    "693": "\nWITH LatestUser AS (\n    SELECT integerlist_0, usernames_3, MAX(timestampdata_2) as max_timestamp\n    FROM users\n    GROUP BY usernames_3\n    ORDER BY max_timestamp DESC\n    LIMIT 1\n)\nSELECT \n    p.sequentialnumbers_0 AS post_count,\n    c.sequentialnumbers_0 AS comment_count\nFROM LatestUser lu\nLEFT JOIN posts p ON lu.integerlist_0 = p.userage_14\nLEFT JOIN comments c ON lu.integerlist_0 = c.numericdata_5\n\n\t----- bird -----\tcodebase_community",
    "694": "\nSELECT c.usercomments_3, u.usernames_3 \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON c.numericdata_5 = u.integerlist_0\nWHERE p.statisticstitle_9 = 'Analysing wind data with R'\nORDER BY c.timestamp_4 DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "695": "\nSELECT COUNT(*) FROM badges WHERE role_2 = 'Citizen Patrol'\n\n\t----- bird -----\tcodebase_community",
    "696": "\nSELECT COUNT(p.sequentialnumbers_0) \nFROM posts p\nJOIN tags t ON p.sequentialnumbers_0 = t.userids_3\nWHERE t.statisticalterms_1 = 'careers'\n\n\t----- bird -----\tcodebase_community",
    "697": "\nSELECT T1.useractivitycounts_9, T1.durationcounts_10 FROM users AS T1 WHERE T1.usernames_3 = 'Jarrod Dixon'\n\n\t----- bird -----\tcodebase_community",
    "698": "\nSELECT COUNT(*) AS comment_count \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.statisticstitle_9 = 'Clustering 1D data';\n\nSELECT COUNT(*) AS answer_count \nFROM posts p\nWHERE p.topiccategories_10 = 'Answer' AND EXISTS (\n    SELECT 1 FROM comments c WHERE c.numericdata_1 = p.sequentialnumbers_0\n) AND EXISTS (\n    SELECT 1 FROM posts q WHERE q.sequentialnumbers_0 = p.valueslist_4 AND q.statisticstitle_9 = 'Clustering 1D data'\n);\n\n\t----- bird -----\tcodebase_community",
    "699": "\nSELECT timestampdata_2 FROM users WHERE usernames_3 = 'IrishStat'\n\n\t----- bird -----\tcodebase_community",
    "700": "\nSELECT COUNT(*) FROM posts WHERE valuecounts_17 > 30\n\n\t----- bird -----\tcodebase_community",
    "701": "\nWITH MostInfluentialUser AS (\n    SELECT integerlist_0 \n    FROM users \n    ORDER BY useractivitycounts_9 DESC \n    LIMIT 1\n),\nRelevantPosts AS (\n    SELECT posts.sequentialnumbers_0, posts.numericdata_7 AS score\n    FROM posts\n    JOIN votes ON posts.sequentialnumbers_0 = votes.numericdata_1\n    WHERE votes.valuepresence_4 = (SELECT integerlist_0 FROM MostInfluentialUser)\n),\nFilteredPosts AS (\n    SELECT * \n    FROM RelevantPosts \n    WHERE score > 50\n)\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM RelevantPosts) * 100 AS percentage_above_50\nFROM FilteredPosts\n\n\t----- bird -----\tcodebase_community",
    "702": "\nSELECT COUNT(*) FROM posts WHERE valuecounts_17 < 20\n\n\t----- bird -----\tcodebase_community",
    "703": "\nSELECT COUNT(*) FROM tags WHERE numericdata_0 < 15 AND (SELECT COUNT(*) FROM posts WHERE sequentialnumbers_0 = tags.userids_3) <= 20\n\n\t----- bird -----\tcodebase_community",
    "704": "\nSELECT T1.userids_3 AS excerpt_post_id, T1.userids_4 AS wiki_post_id \nFROM tags AS T1 \nJOIN posts AS T2 ON T1.userids_3 = T2.sequentialnumbers_0 \nWHERE T1.statisticalterms_1 = 'sample'\n\n\t----- bird -----\tcodebase_community",
    "705": "\nSELECT U.usernames_3, V.valuecolumn_2 AS reputation, COUNT(V.sequentialnumbers_0) AS up_vote_number\nFROM users U\nJOIN votes V ON U.integerlist_0 = V.valuepresence_4\nJOIN comments C ON U.integerlist_0 = C.numericdata_5\nWHERE C.usercomments_3 = 'fine, you win :)'\nGROUP BY U.usernames_3, V.valuecolumn_2\n\n\t----- bird -----\tcodebase_community",
    "706": "\nSELECT c.usercomments_3, p.statisticstitle_9 \nFROM comments AS c\nJOIN posts AS p ON c.datavalues_2 = p.sequentialnumbers_0\nWHERE p.topiccategories_10 LIKE '%linear regression%'\n\n\t----- bird -----\tcodebase_community",
    "707": "\nSELECT c.usercomments_3, MAX(c.datavalues_2) AS highest_score\nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE p.datacounts_12 BETWEEN 100 AND 150\nGROUP BY c.sequentialnumbers_0\nORDER BY highest_score DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "708": "\nSELECT u.timestampdata_2, u.userage_14 \nFROM users u\nJOIN comments c ON u.integerlist_0 = c.numericdata_5\nWHERE u.websites_5 IS NOT NULL;\n\n\t----- bird -----\tcodebase_community",
    "709": "\nSELECT COUNT(DISTINCT c.numericdata_1) \nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nWHERE c.datavalues_2 = 0 AND p.datacounts_12 < 5\n\n\t----- bird -----\tcodebase_community",
    "710": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM posts p\nJOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE (SELECT COUNT(*) FROM comments WHERE numericdata_1 = p.sequentialnumbers_0) = 1 AND c.datavalues_2 = 0\n\n\t----- bird -----\tcodebase_community",
    "711": "\nSELECT COUNT(DISTINCT c.usernames_6) AS total_users_age_40\nFROM comments c\nJOIN posts p ON c.numericdata_1 = p.sequentialnumbers_0\nJOIN users u ON c.usernames_6 = u.userids_1\nWHERE p.datavalues_2 = 0 AND u.userage_14 = 40\n\n\t----- bird -----\tcodebase_community",
    "712": "\nSELECT p.sequentialnumbers_0, c.usercomments_3 \nFROM posts p\nJOIN comments c ON p.sequentialnumbers_0 = c.numericdata_1\nWHERE p.statisticstitle_9 = 'Group differences on a five point Likert item'\n\n\t----- bird -----\tcodebase_community",
    "713": "\nSELECT v.valuecolumn_2 \nFROM votes v\nJOIN posts p ON v.numericdata_1 = p.sequentialnumbers_0\nJOIN comments c ON p.sequentialnumbers_0 = c.datavalues_2\nWHERE c.usercomments_3 = 'R is also lazy evaluated.'\n\n\t----- bird -----\tcodebase_community",
    "714": "\nSELECT * FROM comments WHERE usernames_6 = 'Harvey Motulsky'\n\n\t----- bird -----\tcodebase_community",
    "715": "\nSELECT u.usernames_3\nFROM users u\nJOIN comments c ON u.integerlist_0 = c.numericdata_5\nWHERE c.datavalues_2 BETWEEN 1 AND 5\nAND NOT EXISTS (\n    SELECT 1 FROM votes v WHERE v.numericdata_1 = c.sequentialnumbers_0 AND v.valuecolumn_2 < 0\n)\n\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT CAST(COUNT(CASE WHEN valuepresence_4 = 0 THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM votes v JOIN users u ON v.valuepresence_4 = u.integerlist_0 \nJOIN comments c ON u.integerlist_0 = c.numericdata_5 \nWHERE c.datavalues_2 BETWEEN 5 AND 10\n\n\t----- bird -----\tcodebase_community",
    "717": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 JOIN superhero sh ON hp.userids_0 = sh.sequentialnumbers_0 WHERE sh.characternames_2 = '3-D Man'\n\n\t----- bird -----\tsuperhero",
    "718": "\nSELECT COUNT(DISTINCT hp.userids_0) \nFROM hero_power AS hp\nJOIN superpower AS sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sp.superpower_1 = 'Super Strength'\n\n\t----- bird -----\tsuperhero",
    "719": "\nSELECT COUNT(hp.userids_0) \nFROM hero_power hp\nJOIN superhero s ON hp.userids_0 = s.sequentialnumbers_0\nJOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sp.superpower_1 = 'Super Strength' AND s.agevalues_10 > 200\n\n\t----- bird -----\tsuperhero",
    "720": "\nSELECT s.superheronames_1, s.characternames_2\nFROM superhero s\nJOIN hero_power hp ON s.sequentialnumbers_0 = hp.userids_0\nGROUP BY s.sequentialnumbers_0, s.superheronames_1, s.characternames_2\nHAVING COUNT(hp.numberslist_1) > 15\n\n\t----- bird -----\tsuperhero",
    "721": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0 WHERE T2.hairandeye_1 LIKE '%blue eye%'\n\n\t----- bird -----\tsuperhero",
    "722": "\nSELECT T2.hairandeye_1 FROM superhero AS T1 JOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0 WHERE T1.characternames_2 = 'Apocalypse'\n\n\t----- bird -----\tsuperhero",
    "723": "\nSELECT COUNT(hp.userids_0) \nFROM hero_power hp\nJOIN superhero s ON hp.userids_0 = s.sequentialnumbers_0\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0\nJOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE c.hairandeye_1 = 'blue' AND sp.superpower_1 = 'Agility'\n\n\t----- bird -----\tsuperhero",
    "724": "\nSELECT s.superheronames_1 \nFROM superhero s\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0\nWHERE c.hairandeye_1 LIKE '%blond%' AND c.hairandeye_1 LIKE '%blue eyes%'\n\n\t----- bird -----\tsuperhero",
    "725": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0 WHERE T2.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "726": "\nSELECT s.superheronames_1, s.characternames_2 \nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN publisher p ON s.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE p.contentprovider_1 = 'Marvel Comics'\nORDER BY ha.scoreslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "727": "\nSELECT p.contentprovider_1 FROM publisher p JOIN superhero s ON p.sequentialnumbers_0 = s.useractivitycodes_8 WHERE s.superheronames_1 = 'Sauron'\n\n\t----- bird -----\tsuperhero",
    "728": "\nSELECT COUNT(h.superheronames_1) \nFROM superhero h\nJOIN colour c ON h.numberslist_4 = c.sequentialnumbers_0\nJOIN publisher p ON h.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE p.contentprovider_1 = 'Marvel Comics' AND c.hairandeye_1 LIKE '%blue eyes%'\n\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(T2.scoreslist_2) \nFROM hero_attribute AS T1\nJOIN attribute AS T2 ON T1.allones_1 = T2.numericdata_0\nJOIN superhero AS T3 ON T1.sequentialnumbers_0 = T3.sequentialnumbers_0\nJOIN publisher AS T4 ON T3.useractivitycodes_8 = T4.sequentialnumbers_0\nWHERE T4.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "730": "\nSELECT CAST(COUNT(CASE WHEN T3.superpower_1 = 'Super Strength' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero AS T1\nJOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0\nJOIN hero_power AS T4 ON T1.sequentialnumbers_0 = T4.userids_0\nJOIN superpower AS T3 ON T4.numberslist_1 = T3.sequentialnumbers_0\nWHERE T2.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "731": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0 WHERE T2.contentprovider_1 = 'DC Comics'\n\n\t----- bird -----\tsuperhero",
    "732": "\nSELECT p.contentprovider_1 FROM publisher p JOIN superhero s ON s.useractivitycodes_8 = p.sequentialnumbers_0 ORDER BY s.eventfrequency_6 ASC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "733": "\nSELECT COUNT(h.superheronames_1) \nFROM superhero h\nJOIN publisher p ON h.useractivitycodes_8 = p.sequentialnumbers_0\nJOIN colour c ON h.numberslist_4 = c.sequentialnumbers_0\nWHERE p.contentprovider_1 = 'Marvel Comics' AND c.hairandeye_1 = 'gold'\n\n\t----- bird -----\tsuperhero",
    "734": "\nSELECT T2.contentprovider_1 FROM superhero AS T1 JOIN hero_attribute AS T3 ON T1.sequentialnumbers_0 = T3.sequentialnumbers_0 JOIN colour AS T4 ON T1.numberslist_4 = T4.sequentialnumbers_0 JOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0 WHERE T4.hairandeye_1 = 'Blue' AND T1.superheronames_1 = 'Beetle II'\n\n\t----- bird -----\tsuperhero",
    "735": "\nSELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.numberslist_4 = colour.sequentialnumbers_0 WHERE hairandeye_1 = 'blonde'\n\n\t----- bird -----\tsuperhero",
    "736": "\nSELECT superheronames_1 FROM superhero WHERE useractivitylevel_5 = (SELECT MIN(sequentialnumbers_0) FROM colour)\n\n\t----- bird -----\tsuperhero",
    "737": "\nSELECT T1.charactertype_1 FROM race AS T1 JOIN superhero AS T2 ON T1.sequentialnumbers_0 = T2.numberslist_7 WHERE T2.superheronames_1 = 'Copycat'\n\n\t----- bird -----\tsuperhero",
    "738": "\nSELECT COUNT(*) \nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nWHERE ha.allones_1 = (SELECT numericdata_0 FROM attribute WHERE attributes_1 = 'durability') AND ha.scoreslist_2 < 50;\n\n\t----- bird -----\tsuperhero",
    "739": "\nSELECT s.superheronames_1 FROM superhero AS s JOIN hero_power AS hp ON s.sequentialnumbers_0 = hp.userids_0 JOIN superpower AS sp ON hp.numberslist_1 = sp.sequentialnumbers_0 WHERE sp.superpower_1 = 'death touch'\n\n\t----- bird -----\tsuperhero",
    "740": "\nSELECT COUNT(*) \nFROM superhero s\nJOIN gender g ON s.userstatus_3 = g.numberslist_0\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nWHERE g.gender_1 = 'female' AND ha.scoreslist_2 = 100;\n\n\t----- bird -----\tsuperhero",
    "741": "\nSELECT s.superheronames_1 \nFROM superhero s\nJOIN hero_power hp ON s.sequentialnumbers_0 = hp.userids_0\nGROUP BY s.superheronames_1, s.sequentialnumbers_0\nORDER BY COUNT(hp.numberslist_1) DESC\nLIMIT 1\n\n\t----- bird -----\tsuperhero",
    "742": "\nSELECT COUNT(*) FROM superhero WHERE characternames_2 IN (SELECT charactertype_1 FROM race WHERE charactertype_1 = 'vampire')\n\n\t----- bird -----\tsuperhero",
    "743": "\nSELECT \n    COUNT(CASE WHEN T1.useractivity_9 = (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'Self-Interested') THEN 1 END) * 100 / COUNT(*) AS percentage_self_interest,\n    COUNT(CASE WHEN T1.useractivity_9 = (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'Self-Interested') AND T2.contentprovider_1 = 'Marvel Comics' THEN 1 END) AS marvel_count\nFROM superhero AS T1\nJOIN hero_attribute AS TA ON T1.sequentialnumbers_0 = TA.sequentialnumbers_0\nJOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0\nWHERE T1.useractivity_9 IN (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'Self-Interested' OR sentimentrating_1 = 'Moral Code')\n\n\t----- bird -----\tsuperhero",
    "744": "\nSELECT p.contentprovider_1, COUNT(s.sequentialnumbers_0) AS superhero_count\nFROM publisher p\nJOIN hero_attribute ha ON p.sequentialnumbers_0 = ha.useractivitycodes_8\nJOIN superhero s ON ha.sequentialnumbers_0 = s.sequentialnumbers_0\nGROUP BY p.contentprovider_1\nORDER BY superhero_count DESC\nLIMIT 1, 1\nUNION ALL\nSELECT 'Difference', (SELECT MAX(superhero_count) FROM (\nSELECT COUNT(s.sequentialnumbers_0) AS superhero_count\nFROM publisher p\nJOIN hero_attribute ha ON p.sequentialnumbers_0 = ha.useractivitycodes_8\nJOIN superhero s ON ha.sequentialnumbers_0 = s.sequentialnumbers_0\nGROUP BY p.contentprovider_1\nORDER BY superhero_count DESC\nLIMIT 1) t1\n-\n(SELECT COUNT(s.sequentialnumbers_0)\nFROM publisher p\nJOIN hero_attribute ha ON p.sequentialnumbers_0 = ha.useractivitycodes_8\nJOIN superhero s ON ha.sequentialnumbers_0 = s.sequentialnumbers_0\nGROUP BY p.contentprovider_1\nORDER BY superhero_count ASC\nLIMIT 1))\n\n\t----- bird -----\tsuperhero",
    "745": "\nSELECT sequentialnumbers_0 FROM publisher WHERE contentprovider_1 = 'Star Trek'\n\n\t----- bird -----\tsuperhero",
    "746": "\nSELECT AVG(attribute.attributes_1) AS average_attribute_value\nFROM hero_attribute\nJOIN attribute ON hero_attribute.allones_1 = attribute.numericdata_0\n\n\t----- bird -----\tsuperhero",
    "747": "\nSELECT COUNT(*) FROM superhero WHERE characternames_2 IS NULL OR TRIM(characternames_2) = ''\n\n\t----- bird -----\tsuperhero",
    "748": "\nSELECT T3.hairandeye_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 WHERE T1.sequentialnumbers_0 = 75\n\n\t----- bird -----\tsuperhero",
    "749": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 JOIN superhero sh ON hp.userids_0 = sh.sequentialnumbers_0 WHERE sh.characternames_2 = 'Deathlok'\n\n\t----- bird -----\tsuperhero",
    "750": "\nSELECT AVG(T2.attributes_1) AS average_weight\nFROM superhero AS T1\nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0\nJOIN gender AS T3 ON T1.userstatus_3 = T3.numberslist_0\nWHERE T3.gender_1 = 'female'\n\n\t----- bird -----\tsuperhero",
    "751": "\nSELECT sp.superpower_1 FROM superhero sh JOIN hero_power hp ON sh.sequentialnumbers_0 = hp.userids_0 JOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0 JOIN gender g ON sh.userstatus_3 = g.numberslist_0 WHERE g.gender_1 = 'male' GROUP BY sp.superpower_1 LIMIT 5\n\n\t----- bird -----\tsuperhero",
    "752": "\nSELECT superheronames_1 FROM superhero WHERE characternames_2 = 'alien'\n\n\t----- bird -----\tsuperhero",
    "753": "\nSELECT T1.superheronames_1 \nFROM superhero AS T1\nJOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0\nWHERE T1.agevalues_10 BETWEEN 170 AND 190\nAND T2.hairandeye_1 IS NULL OR TRIM(T2.hairandeye_1) = ''\n\n\t----- bird -----\tsuperhero",
    "754": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 WHERE hp.userids_0 = 56;\n\n\t----- bird -----\tsuperhero",
    "755": "\nSELECT T1.characternames_2 FROM superhero AS T1 JOIN race AS T2 ON T1.numberslist_7 = T2.sequentialnumbers_0 WHERE T2.charactertype_1 LIKE 'Demi-God' LIMIT 5\n\n\t----- bird -----\tsuperhero",
    "756": "\nSELECT COUNT(*) FROM superhero WHERE useractivity_9 IN (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'bad')\n\n\t----- bird -----\tsuperhero",
    "757": "\nSELECT T2.charactertype_1 FROM superhero AS T1 JOIN race AS T2 ON T1.numberslist_7 = T2.sequentialnumbers_0 WHERE T1.agevalues_10 = 169\n\n\t----- bird -----\tsuperhero",
    "758": "\nSELECT c.hairandeye_1 \nFROM colour AS c\nJOIN superhero AS s ON c.sequentialnumbers_0 = s.numberslist_4\nJOIN race AS r ON s.numberslist_7 = r.sequentialnumbers_0\nWHERE r.charactertype_1 = 'human' AND s.agevalues_10 = 185\n\n\t----- bird -----\tsuperhero",
    "759": "\nSELECT c.hairandeye_1 \nFROM colour c \nJOIN superhero s ON c.sequentialnumbers_0 = s.numberslist_4 \nORDER BY s.scoresdata_11 DESC \nLIMIT 1\n\n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(COUNT(CASE WHEN p.contentprovider_1 = 'Marvel Comics' THEN h.sequentialnumbers_0 END) AS FLOAT) * 100 / COUNT(h.sequentialnumbers_0) AS percentage_marvel_heroes\nFROM superhero h\nJOIN hero_attribute ha ON h.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0 AND a.attributes_1 = 'height'\nJOIN publisher p ON h.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE a.numericdata_0 BETWEEN 150 AND 180\n\n\t----- bird -----\tsuperhero",
    "761": "\nSELECT s.superheronames_1, s.characternames_2\nFROM superhero s\nJOIN gender g ON s.userstatus_3 = g.numberslist_0\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nWHERE g.gender_1 = 'male'\nAND ha.scoreslist_2 > (SELECT AVG(ha2.scoreslist_2) * 0.79 FROM hero_attribute ha2)\n\n\t----- bird -----\tsuperhero",
    "762": "\nSELECT superpower_1, COUNT(*) AS power_count\nFROM hero_power\nJOIN superpower ON hero_power.numberslist_1 = superpower.sequentialnumbers_0\nGROUP BY superpower_1\nORDER BY power_count DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "763": "\nSELECT attribute.attributes_1\nFROM hero_attribute\nJOIN superhero ON hero_attribute.sequentialnumbers_0 = superhero.sequentialnumbers_0\nJOIN attribute ON hero_attribute.allones_1 = attribute.numericdata_0\nWHERE superhero.superheronames_1 = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "764": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 WHERE hp.userids_0 = 1\n\n\t----- bird -----\tsuperhero",
    "765": "\nSELECT COUNT(DISTINCT hp.userids_0) \nFROM hero_power AS hp\nJOIN superpower AS sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sp.superpower_1 = 'stealth'\n\n\t----- bird -----\tsuperhero",
    "766": "\nSELECT s.superheronames_1, s.characternames_2\nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nWHERE a.attributes_1 = 'strength'\nORDER BY a.numericdata_0 DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "767": "\nSELECT AVG(sequentialnumbers_0) \nFROM superhero \nWHERE numberslist_4 IS NULL\n\n\t----- bird -----\tsuperhero",
    "768": "\nSELECT COUNT(*) FROM superhero AS T1 JOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0 WHERE T2.contentprovider_1 = 'Dark Horse Comics'\n\n\t----- bird -----\tsuperhero",
    "769": "\nSELECT s.superheronames_1, a.attributes_1 AS durability_attribute\nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0 AND a.attributes_1 = 'durability'\nJOIN publisher p ON s.useractivitycodes_8 = p.sequentialnumbers_0 AND p.contentprovider_1 = 'Dark Horse Comics'\nORDER BY ha.scoreslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "770": "\nSELECT T3.hairandeye_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 WHERE T2.gender_1 = 'Abraham Sapien'\n\n\t----- bird -----\tsuperhero",
    "771": "\nSELECT s.superheronames_1 FROM superhero AS s JOIN hero_power AS hp ON s.sequentialnumbers_0 = hp.userids_0 JOIN superpower AS sp ON hp.numberslist_1 = sp.sequentialnumbers_0 WHERE sp.superpower_1 = 'flight'\n\n\t----- bird -----\tsuperhero",
    "772": "\nSELECT c.hairandeye_1 AS hair_and_eye_colour, b.hairandeye_1 AS skin_colour\nFROM gender a\nJOIN colour b ON a.numberslist_0 = b.sequentialnumbers_0 AND a.gender_1 = 'Female'\nJOIN superhero d ON a.numberslist_0 = d.userstatus_3\nJOIN publisher e ON d.useractivitycodes_8 = e.sequentialnumbers_0 AND e.contentprovider_1 = 'Dark Horse Comics'\nJOIN colour c ON d.numberslist_4 = c.sequentialnumbers_0;\n\n\t----- bird -----\tsuperhero",
    "773": "\nSELECT s.superheronames_1, p.contentprovider_1 \nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0 AND s.useractivitylevel_5 = c.sequentialnumbers_0 AND s.eventfrequency_6 = c.sequentialnumbers_0\nJOIN publisher p ON s.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE a.attributes_1 IN ('eye_color', 'hair_color', 'skin_color')\nGROUP BY s.superheronames_1, p.contentprovider_1\nHAVING COUNT(DISTINCT c.hairandeye_1) = 3\n\n\t----- bird -----\tsuperhero",
    "774": "\nSELECT T1.characternames_2, T3.charactertype_1 FROM superhero AS T1 JOIN race AS T3 ON T1.numberslist_7 = T3.sequentialnumbers_0 WHERE T1.superheronames_1 = 'A-Bomb'\n\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT CAST(COUNT(CASE WHEN T3.hairandeye_1 = 'blue' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.userstatus_3 = T3.sequentialnumbers_0 WHERE T2.gender_1 = 'female'\n\n\t----- bird -----\tsuperhero",
    "776": "\nSELECT T1.superheronames_1, T3.charactertype_1 \nFROM superhero AS T1 \nJOIN hero_power AS T2 ON T1.sequentialnumbers_0 = T2.userids_0 \nJOIN race AS T3 ON T1.numberslist_7 = T3.sequentialnumbers_0 \nWHERE T1.characternames_2 = 'Charles Chandler';\n\n\t----- bird -----\tsuperhero",
    "777": "\nSELECT T2.gender_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.sequentialnumbers_0 WHERE T1.characternames_2 = 'Agent 13'\n\n\t----- bird -----\tsuperhero",
    "778": "\nSELECT s.superheronames_1 \nFROM superhero s\nJOIN hero_power hp ON s.sequentialnumbers_0 = hp.userids_0\nJOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sp.superpower_1 = 'adaptation'\n\n\t----- bird -----\tsuperhero",
    "779": "\nSELECT COUNT(*) FROM hero_power HP JOIN superhero S ON HP.userids_0 = S.sequentialnumbers_0 WHERE S.superheronames_1 = 'Amazo'\n\n\t----- bird -----\tsuperhero",
    "780": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 JOIN superhero sh ON hp.userids_0 = sh.sequentialnumbers_0 WHERE sh.characternames_2 = 'Hunter Zolomon'\n\n\t----- bird -----\tsuperhero",
    "781": "\nSELECT T1.characternames_2, T3.hairandeye_1 AS eye_color \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 \nJOIN colour AS T3 ON T2.allones_1 = T3.sequentialnumbers_0 \nWHERE T3.hairandeye_1 = 'amber'\n\n\t----- bird -----\tsuperhero",
    "782": "\nSELECT T1.superheronames_1 \nFROM superhero AS T1\nJOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0\nWHERE T2.hairandeye_1 = 'black'\nINTERSECT\nSELECT T1.superheronames_1 \nFROM superhero AS T1\nJOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0\nWHERE T2.hairandeye_1 = 'black' AND T1.useractivitylevel_5 = T2.sequentialnumbers_0\n\n\t----- bird -----\tsuperhero",
    "783": "\nSELECT T3.hairandeye_1 \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.numberslist_4 = T2.sequentialnumbers_0 \nJOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 AND T2.hairandeye_1 = 'gold' AND T3.hairandeye_1 LIKE '%eye%'\n\n\t----- bird -----\tsuperhero",
    "784": "\nSELECT T1.superheronames_1, T1.characternames_2 \nFROM superhero AS T1 \nJOIN race AS T2 ON T1.numberslist_7 = T2.sequentialnumbers_0 \nWHERE T2.charactertype_1 = 'vampire'\n\n\t----- bird -----\tsuperhero",
    "785": "\nSELECT s.superheronames_1 \nFROM superhero s\nJOIN alignment a ON s.useractivity_9 = a.numberslist_0\nWHERE a.sentimentrating_1 = 'neutral'\n\n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(ha.sequentialnumbers_0) \nFROM hero_attribute ha\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nWHERE a.attributes_1 = 'strength'\nORDER BY ha.scoreslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "787": "\nSELECT r.charactertype_1, a.sentimentrating_1 \nFROM superhero s\nJOIN race r ON s.numberslist_7 = r.sequentialnumbers_0\nJOIN alignment a ON s.useractivity_9 = a.numberslist_0\nWHERE s.superheronames_1 = 'Cameron Hicks'\n\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(COUNT(CASE WHEN T1.gender_1 = 'Female' THEN T3.sequentialnumbers_0 ELSE NULL END) AS FLOAT) * 100 / COUNT(T3.sequentialnumbers_0) \nFROM gender AS T1 \nJOIN superhero AS T2 ON T1.numberslist_0 = T2.userstatus_3 \nJOIN hero_attribute AS T3 ON T2.sequentialnumbers_0 = T3.sequentialnumbers_0 \nJOIN publisher AS T4 ON T3.useractivitycodes_8 = T4.sequentialnumbers_0 \nWHERE T4.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "789": "\nSELECT AVG(T2.scoreslist_2) AS average_weight\nFROM race AS T1\nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0\nWHERE T1.charactertype_1 = 'alien'\n\n\t----- bird -----\tsuperhero",
    "790": "\nSELECT (SELECT scoreslist_2 FROM hero_attribute WHERE sequentialnumbers_0 IN (SELECT sequentialnumbers_0 FROM superhero WHERE characternames_2 = 'Emil Blonsky')) -\n       (SELECT scoreslist_2 FROM hero_attribute WHERE sequentialnumbers_0 IN (SELECT sequentialnumbers_0 FROM superhero WHERE characternames_2 = 'Charles Chandler'))\n\n\t----- bird -----\tsuperhero",
    "791": "\nSELECT s.superheronames_1, AVG(a.numericdata_0) AS average_height\nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nGROUP BY s.superheronames_1\n\n\t----- bird -----\tsuperhero",
    "792": "\nSELECT T2.superpower_1 FROM superhero AS T1 JOIN hero_power AS T3 ON T1.sequentialnumbers_0 = T3.userids_0 JOIN superpower AS T2 ON T3.numberslist_1 = T2.sequentialnumbers_0 WHERE T1.characternames_2 = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "793": "\nSELECT COUNT(*) \nFROM superhero s\nJOIN race r ON s.numberslist_7 = r.sequentialnumbers_0\nJOIN gender g ON s.userstatus_3 = g.numberslist_0\nWHERE r.charactertype_1 = 'god/eternal' AND g.gender_1 = 'male'\n\n\t----- bird -----\tsuperhero",
    "794": "\nSELECT superheronames_1 FROM superhero WHERE useractivitylevel_5 = (SELECT MAX(numericdata_0) FROM attribute)\n\n\t----- bird -----\tsuperhero",
    "795": "\nSELECT COUNT(*) FROM superhero WHERE useractivity_9 IN (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'neutral')\n\n\t----- bird -----\tsuperhero",
    "796": "\nSELECT attribute.attributes_1, hero_attribute.scoreslist_2 \nFROM superhero \nJOIN hero_attribute ON superhero.sequentialnumbers_0 = hero_attribute.sequentialnumbers_0 \nJOIN attribute ON hero_attribute.allones_1 = attribute.numericdata_0 \nWHERE superhero.superheronames_1 = '3-D Man';\n\n\t----- bird -----\tsuperhero",
    "797": "\nSELECT s.superheronames_1, c.hairandeye_1 \nFROM superhero s\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0\nWHERE c.hairandeye_1 LIKE '%blue%' AND c.hairandeye_1 LIKE '%brown%'\n\n\t----- bird -----\tsuperhero",
    "798": "\nSELECT T1.contentprovider_1 FROM publisher AS T1 JOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.useractivitycodes_8 JOIN superhero AS T3 ON T2.sequentialnumbers_0 = T3.sequentialnumbers_0 WHERE T3.superheronames_1 IN ('Hawkman', 'Karate Kid', 'Speedy')\n\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(*) FROM superhero WHERE useractivitycodes_8 IS NULL\n\n\t----- bird -----\tsuperhero",
    "800": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM colour WHERE hairandeye_1 = 'blue') * 100 \nFROM superhero S JOIN colour C ON S.numberslist_4 = C.sequentialnumbers_0 \nWHERE C.hairandeye_1 = 'blue'\n\n\t----- bird -----\tsuperhero",
    "801": "\nSELECT \n    (SUM(CASE WHEN gender.gender_1 = 'male' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS male_ratio,\n    (SUM(CASE WHEN gender.gender_1 = 'female' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS female_ratio\nFROM \n    superhero\nJOIN \n    gender ON superhero.userstatus_3 = gender.numberslist_0;\n\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT superheronames_1 FROM superhero ORDER BY agevalues_10 DESC LIMIT 1\n\n\t----- bird -----\tsuperhero",
    "803": "\nSELECT sequentialnumbers_0 FROM superpower WHERE superpower_1 = 'cryokinesis'\n\n\t----- bird -----\tsuperhero",
    "804": "\nSELECT superheronames_1 FROM superhero WHERE sequentialnumbers_0 = 294;\n\n\t----- bird -----\tsuperhero",
    "805": "\nSELECT characternames_2 FROM superhero WHERE scoresdata_11 IS NULL\n\n\t----- bird -----\tsuperhero",
    "806": "\nSELECT T3.hairandeye_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 WHERE T1.superheronames_1 = 'Karen Beecher-Duncan'\n\n\t----- bird -----\tsuperhero",
    "807": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 JOIN superhero sh ON hp.userids_0 = sh.sequentialnumbers_0 WHERE sh.characternames_2 = 'Helen Parr'\n\n\t----- bird -----\tsuperhero",
    "808": "\nSELECT T2.charactertype_1 FROM superhero AS T1 JOIN race AS T2 ON T1.numberslist_7 = T2.sequentialnumbers_0 WHERE T1.agevalues_10 = 188 AND T1.scoresdata_11 = 108\n\n\t----- bird -----\tsuperhero",
    "809": "\nSELECT T2.contentprovider_1 FROM superhero AS T1 JOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0 WHERE T1.sequentialnumbers_0 = 38\n\n\t----- bird -----\tsuperhero",
    "810": "\nSELECT r.charactertype_1 \nFROM race r\nJOIN superhero s ON r.sequentialnumbers_0 = s.numberslist_7\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nWHERE a.attributes_1 = (\n    SELECT MAX(attributes_1) \n    FROM attribute\n)\n\n\t----- bird -----\tsuperhero",
    "811": "\nSELECT A.sentimentrating_1, B.superpower_1 \nFROM superhero AS C \nJOIN alignment AS A ON C.useractivity_9 = A.numberslist_0 \nJOIN hero_power AS D ON C.sequentialnumbers_0 = D.userids_0 \nJOIN superpower AS B ON D.numberslist_1 = B.sequentialnumbers_0 \nWHERE C.superheronames_1 = 'Atom IV';\n\n\t----- bird -----\tsuperhero",
    "812": "\nSELECT s.superheronames_1, c.hairandeye_1 \nFROM superhero s\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0\nWHERE c.hairandeye_1 = 'blue'\nLIMIT 5;\n\n\t----- bird -----\tsuperhero",
    "813": "\nSELECT AVG(attribute.attributes_1) AS average_attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.sequentialnumbers_0 = hero_attribute.sequentialnumbers_0\nJOIN attribute ON hero_attribute.allones_1 = attribute.numericdata_0\nWHERE alignment.sentimentrating_1 = 'neutral'\nAND superhero.useractivity_9 = alignment.numberslist_0\n\n\t----- bird -----\tsuperhero",
    "814": "\nSELECT c.hairandeye_1 AS skin_colour\nFROM colour c\nJOIN superhero s ON s.numberslist_4 = c.sequentialnumbers_0\nJOIN hero_attribute ha ON ha.sequentialnumbers_0 = s.sequentialnumbers_0\nJOIN attribute a ON a.numericdata_0 = ha.allones_1\nWHERE a.attributes_1 = 'numericdata'\nAND ha.scoreslist_2 = 100\n\n\t----- bird -----\tsuperhero",
    "815": "\nSELECT COUNT(*) \nFROM superhero \nJOIN gender ON superhero.userstatus_3 = gender.numberslist_0 \nJOIN alignment ON superhero.useractivity_9 = alignment.numberslist_0 \nWHERE gender.gender_1 = 'female' AND alignment.sentimentrating_1 = 'good'\n\n\t----- bird -----\tsuperhero",
    "816": "\nSELECT s.superheronames_1 \nFROM superhero s\nJOIN hero_attribute ha ON s.sequentialnumbers_0 = ha.sequentialnumbers_0\nJOIN attribute a ON ha.allones_1 = a.numericdata_0\nWHERE a.attributes_1 BETWEEN 75 AND 80;\n\n\t----- bird -----\tsuperhero",
    "817": "\nSELECT T7.charactertype_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 JOIN race AS T7 ON T1.numberslist_7 = T7.sequentialnumbers_0 WHERE T2.gender_1 = 'male' AND T3.hairandeye_1 = 'blue-haired'\n\n\t----- bird -----\tsuperhero",
    "818": "\nSELECT CAST(COUNT(CASE WHEN T1.gender_1 = 'Female' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM gender AS T1 JOIN superhero AS T2 ON T1.numberslist_0 = T2.userstatus_3 WHERE T2.useractivity_9 IN (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'bad')\n\n\t----- bird -----\tsuperhero",
    "819": "\nSELECT \n    (SELECT COUNT(*) FROM colour WHERE hairandeye_1 = 'blue eyes') - \n    (SELECT COUNT(*) FROM colour WHERE hairandeye_1 IS NULL OR hairandeye_1 = '')\nFROM superhero\nWHERE numberslist_4 NOT IN (SELECT sequentialnumbers_0 FROM colour WHERE hairandeye_1 IS NOT NULL AND hairandeye_1 != '');\n\n\t----- bird -----\tsuperhero",
    "820": "\nSELECT T2.scoreslist_2 FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 WHERE T1.characternames_2 = 'Hulk'\n\n\t----- bird -----\tsuperhero",
    "821": "\nSELECT sp.superpower_1 FROM superpower sp JOIN hero_power hp ON sp.sequentialnumbers_0 = hp.numberslist_1 JOIN superhero sh ON hp.userids_0 = sh.sequentialnumbers_0 WHERE sh.characternames_2 = 'Ajax'\n\n\t----- bird -----\tsuperhero",
    "822": "\nSELECT COUNT(*) FROM superhero\nJOIN colour ON superhero.useractivitylevel_5 = colour.sequentialnumbers_0\nJOIN race ON superhero.numberslist_7 = race.sequentialnumbers_0\nJOIN gender ON superhero.userstatus_3 = gender.numberslist_0\nWHERE colour.hairandeye_1 = 'green' AND race.charactertype_1 = 'villain'\n\n\t----- bird -----\tsuperhero",
    "823": "\nSELECT COUNT(*) \nFROM superhero s\nJOIN gender g ON s.userstatus_3 = g.numberslist_0\nJOIN publisher p ON s.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE g.gender_1 = 'female' AND p.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "824": "\nSELECT s.superheronames_1\nFROM superhero s\nJOIN hero_power hp ON s.sequentialnumbers_0 = hp.userids_0\nJOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sp.superpower_1 = 'control wind'\nORDER BY s.superheronames_1 ASC;\n\n\t----- bird -----\tsuperhero",
    "825": "\nSELECT g.gender_1 FROM gender g JOIN superhero s ON g.numberslist_0 = s.userstatus_3 JOIN hero_power hp ON s.sequentialnumbers_0 = hp.userids_0 JOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0 WHERE sp.superpower_1 = 'Phoenix Force'\n\n\t----- bird -----\tsuperhero",
    "826": "\nSELECT s.superheronames_1, MAX(h.scoreslist_2) AS max_weight\nFROM superhero s\nJOIN hero_attribute h ON s.sequentialnumbers_0 = h.sequentialnumbers_0\nJOIN publisher p ON s.useractivitycodes_8 = p.sequentialnumbers_0\nWHERE p.contentprovider_1 = 'DC Comics'\nGROUP BY s.superheronames_1\nORDER BY max_weight DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(T2.scoreslist_2) \nFROM superhero AS T1\nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0\nJOIN publisher AS T3 ON T1.useractivitycodes_8 = T3.sequentialnumbers_0\nWHERE T3.contentprovider_1 = 'Dark Horse Comics' AND T1.characternames_2 NOT IN (SELECT charactertype_1 FROM race WHERE charactertype_1 LIKE '%human%')\n\n\t----- bird -----\tsuperhero",
    "828": "\nSELECT COUNT(*)\nFROM superhero\nWHERE useractivitylevel_5 = (\n    SELECT sequentialnumbers_0 \n    FROM colour \n    WHERE hairandeye_1 = 'fastest'\n);\n\n\t----- bird -----\tsuperhero",
    "829": "\nSELECT \n    CASE \n        WHEN contentprovider_1 = 'DC Comics' THEN -COUNT(*)\n        WHEN contentprovider_1 = 'Marvel Comics' THEN COUNT(*)\n    END AS difference\nFROM publisher p JOIN superhero s ON p.sequentialnumbers_0 = s.useractivitycodes_8\nWHERE contentprovider_1 IN ('DC Comics', 'Marvel Comics')\nGROUP BY contentprovider_1\nUNION ALL\nSELECT 0\n\n\t----- bird -----\tsuperhero",
    "830": "\nSELECT T2.attributes_1, T1.scoreslist_2 \nFROM hero_attribute AS T1 \nJOIN attribute AS T2 ON T1.allones_1 = T2.numericdata_0 \nWHERE T1.sequentialnumbers_0 = (\n    SELECT sequentialnumbers_0 FROM superhero WHERE characternames_2 = 'Black Panther'\n)\nORDER BY T1.scoreslist_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "831": "\nSELECT c.hairandeye_1 FROM colour AS c JOIN superhero AS s ON c.sequentialnumbers_0 = s.numberslist_4 WHERE s.characternames_2 = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT superheronames_1 FROM superhero WHERE agevalues_10 = ( SELECT MAX(agevalues_10) FROM superhero )\n\n\t----- bird -----\tsuperhero",
    "833": "\nSELECT superheronames_1 FROM superhero WHERE characternames_2 = 'Charles Chandler';\n\n\t----- bird -----\tsuperhero",
    "834": "\nSELECT CAST(COUNT(CASE WHEN T2.gender_1 = 'Female' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN publisher AS T3 ON T1.useractivitycodes_8 = T3.sequentialnumbers_0 WHERE T3.contentprovider_1 = 'George Lucas'\n\n\t----- bird -----\tsuperhero",
    "835": "\nSELECT CAST(COUNT(CASE WHEN T1.useractivity_9 = (SELECT numberslist_0 FROM alignment WHERE sentimentrating_1 = 'good') THEN 1 END) AS FLOAT) * 100 / COUNT(*) AS percentage_good_superheroes\nFROM superhero AS T1\nJOIN publisher AS T2 ON T1.useractivitycodes_8 = T2.sequentialnumbers_0\nWHERE T2.contentprovider_1 = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "836": "\nSELECT COUNT(*) FROM superhero WHERE characternames_2 LIKE 'John%' \n\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT hsequentialnumbers_0 FROM hero_attribute WHERE scoreslist_2 = (SELECT MIN(scoreslist_2) FROM hero_attribute)\n\n\t----- bird -----\tsuperhero",
    "838": "\nSELECT superheronames_1, characternames_2 \nFROM superhero \nWHERE superheronames_1 = 'Alien' OR characternames_2 = 'Alien'\n\n\t----- bird -----\tsuperhero",
    "839": "\nSELECT s.superheronames_1, c.hairandeye_1\nFROM superhero s\nJOIN colour c ON s.numberslist_4 = c.sequentialnumbers_0\nWHERE c.hairandeye_1 = 'brown eyes' AND s.useractivitylevel_5 < 100;\n\n\t----- bird -----\tsuperhero",
    "840": "\nSELECT attribute.attributes_1 \nFROM superhero \nJOIN hero_attribute ON superhero.sequentialnumbers_0 = hero_attribute.sequentialnumbers_0 \nJOIN attribute ON hero_attribute.allones_1 = attribute.numericdata_0 \nWHERE superhero.superheronames_1 = 'Aquababy'\n\n\t----- bird -----\tsuperhero",
    "841": "\nSELECT T1.scoreslist_2, T3.charactertype_1 \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0 \nJOIN race AS T3 ON T1.numberslist_7 = T3.sequentialnumbers_0 \nWHERE T1.sequentialnumbers_0 = 40;\n\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(T2.scoreslist_2) AS average_height\nFROM superhero AS T1\nJOIN hero_attribute AS T2 ON T1.sequentialnumbers_0 = T2.sequentialnumbers_0\nJOIN alignment AS T3 ON T1.useractivity_9 = T3.numberslist_0\nWHERE T3.sentimentrating_1 = 'neutral'\n\n\t----- bird -----\tsuperhero",
    "843": "\nSELECT DISTINCT userids_0 AS hero_id\nFROM hero_power HP\nJOIN superpower SP ON HP.numberslist_1 = SP.sequentialnumbers_0\nWHERE SP.superpower_1 = 'intellegence'\n\n\t----- bird -----\tsuperhero",
    "844": "\nSELECT T3.hairandeye_1 FROM superhero AS T1 JOIN gender AS T2 ON T1.userstatus_3 = T2.numberslist_0 JOIN colour AS T3 ON T1.numberslist_4 = T3.sequentialnumbers_0 WHERE T2.gender_1 = 'Blackwulf'\n\n\t----- bird -----\tsuperhero",
    "845": "\nSELECT sp.superpower_1\nFROM superhero sh\nJOIN hero_power hp ON sh.sequentialnumbers_0 = hp.userids_0\nJOIN superpower sp ON hp.numberslist_1 = sp.sequentialnumbers_0\nWHERE sh.agevalues_10 > (SELECT 0.8 * AVG(agevalues_10) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "846": "\nSELECT d.drivernames_1 \nFROM drivers d\nJOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\nJOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\nJOIN status s ON r.sequentialnumbers_0 = s.sequentialnumbers_0\nWHERE r.sequencevalues_2 = 18 AND s.raceoutcomes_1 LIKE '%eliminated in the first period%'\n\n\t----- bird -----\tformula_1",
    "847": "\nSELECT D.drivernames_1 FROM drivers D JOIN qualifying Q ON D.sequentialnumbers_0 = Q.numericdata_2 WHERE Q.agevalues_1 = 19 AND Q.sequencevalues_3 = 2 ORDER BY CAST(Q.timedurations_8 AS TIME) ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "848": "\nSELECT DISTINCT s.year_0\nFROM seasons s\nJOIN races r ON s.year_0 = r.year_1\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.countrylist_4 = 'China' AND c.racetracks_1 LIKE '%Shanghai%'\n\n\t----- bird -----\tformula_1",
    "849": "\nSELECT r.sequentialnumbers_0, s.formulaoneurl_1, c.racetracks_1, r.grandprixnames_4 \nFROM races r\nJOIN seasons s ON r.year_1 = s.year_0\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.racetracks_1 = 'Circuit de Barcelona-Catalunya'\n\n\t----- bird -----\tformula_1",
    "850": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.countrylist_4 = 'Germany'\n\n\t----- bird -----\tformula_1",
    "851": "\nSELECT c.numberslist_0, c.racetracks_1, c.racetracks_2, c.racetracks_3 \nFROM circuits AS c\nJOIN races AS r ON c.numberslist_0 = r.numberslist_3\nJOIN results AS res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN constructors AS con ON res.sequenceofnumbers_3 = con.sequentialnumbers_0\nWHERE con.f1teams_1 = 'Renault'\nGROUP BY c.numberslist_0, c.racetracks_1, c.racetracks_2, c.racetracks_3\n\n\t----- bird -----\tformula_1",
    "852": "\nSELECT COUNT(*) \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE r.year_1 = 2010 AND NOT (c.countrylist_4 IN ('Asia', 'Europe'))\n\n\t----- bird -----\tformula_1",
    "853": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.countrylist_4 = 'Spain'\n\n\t----- bird -----\tformula_1",
    "854": "\nSELECT T1.latitudevalues_6, T2.racetracks_1 \nFROM circuits AS T1 \nJOIN races AS T3 ON T1.numberslist_0 = T3.numberslist_3 \nJOIN seasons AS T4 ON T3.year_1 = T4.year_0 \nWHERE T3.grandprixnames_4 LIKE '%Australian%' AND T4.formulaoneurl_1 LIKE '%australian%'\n\n\t----- bird -----\tformula_1",
    "855": "\nSELECT races.grandprixnames_4, seasons.year_0 \nFROM races\nJOIN circuits ON races.numberslist_3 = circuits.numberslist_0\nJOIN seasons ON races.year_1 = seasons.year_0\nWHERE circuits.racetracks_1 LIKE '%Sepang International Circuit%' OR circuits.racetracks_2 LIKE '%Sepang International Circuit%' OR circuits.racetracks_3 LIKE '%Sepang International Circuit%'\n\n\t----- bird -----\tformula_1",
    "856": "\nSELECT r.timeofday FROM races AS r JOIN circuits AS c ON r.numberslist_3 = c.numberslist_0 WHERE c.racetracks_1 = 'Sepang International Circuit' OR c.racetracks_2 = 'Sepang International Circuit' OR c.racetracks_3 = 'Sepang International Circuit'\n\n\t----- bird -----\tformula_1",
    "857": "\nSELECT T2.latitudevalues_6 FROM races AS T1 JOIN circuits AS T2 ON T1.numberslist_3 = T2.numberslist_0 WHERE T1.grandprixnames_4 = 'Abu Dhabi Grand Prix'\n\n\t----- bird -----\tformula_1",
    "858": "\nSELECT c.nationality_3\nFROM constructors c\nJOIN constructorResults cr ON c.sequentialnumbers_0 = cr.numberslist_2\nJOIN races r ON cr.agevalues_1 = r.sequentialnumbers_0\nWHERE cr.scoreslist_3 = 1 AND r.sequencevalues_2 = 24;\n\n\t----- bird -----\tformula_1",
    "859": "\nSELECT q.timedurations_8 \nFROM qualifying AS q\nJOIN drivers AS d ON q.numericdata_2 = d.sequentialnumbers_0\nJOIN races AS r ON q.agevalues_1 = r.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Bruno Senna' AND r.sequentialnumbers_0 = 354 AND q.sequencevalues_3 = 1;\n\n\t----- bird -----\tformula_1",
    "860": "\nSELECT D.nationality_7 FROM drivers AS D JOIN qualifying AS Q ON D.sequentialnumbers_0 = Q.numericdata_2 WHERE Q.agevalues_1 = 355 AND Q.timedurations_8 = '0:01:40'\n\n\t----- bird -----\tformula_1",
    "861": "\nSELECT T2.numericdata_2 FROM qualifying AS T1 JOIN drivers AS T2 ON T1.numericdata_2 = T2.sequentialnumbers_0 WHERE T1.agevalues_1 = 903 AND T1.sequencevalues_3 = 3 AND T1.timedurations_8 = '0:01:54'\n\n\t----- bird -----\tformula_1",
    "862": "\nSELECT COUNT(DISTINCT r.sequentialnumbers_2) \nFROM results r\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE ra.year_1 = 2007 AND ra.grandprixnames_4 = 'Bahrain Grand Prix' AND r.numericdata_17 IN (SELECT sequentialnumbers_0 FROM status WHERE raceoutcomes_1 NOT LIKE '%Finished%')\n\n\t----- bird -----\tformula_1",
    "863": "\nSELECT T4.formulaoneurl_1 FROM races AS T1 JOIN seasons AS T4 ON T1.year_1 = T4.year_0 WHERE T1.sequentialnumbers_0 = 901;\n\n\t----- bird -----\tformula_1",
    "864": "\nSELECT COUNT(DISTINCT T2.sequentialnumbers_2) AS driver_count\nFROM races AS T1\nJOIN results AS T2 ON T1.sequentialnumbers_0 = T2.agevalues_1\nWHERE T1.datecolumn_5 = '2015-11-29'\n\n\t----- bird -----\tformula_1",
    "865": "\nSELECT d.drivernames_1, d.dateofbirth_6 \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nWHERE r.agevalues_1 IN (\n    SELECT sequentialnumbers_0 FROM races WHERE numberslist_3 = 592\n) AND r.numericdata_17 = (\n    SELECT sequentialnumbers_0 FROM status WHERE raceoutcomes_1 = 'Finished'\n)\nORDER BY d.dateofbirth_6 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "866": "\nSELECT D.drivernames_1, D.wikipediaprofileurl_8 \nFROM drivers D \nJOIN lapTimes LT ON D.sequentialnumbers_0 = LT.allones_1 \nJOIN races R ON LT.allones_0 = R.sequentialnumbers_0 \nWHERE LT.timeseconds_4 = '0:01:27' AND R.numberslist_3 = 161\n\n\t----- bird -----\tformula_1",
    "867": "\nSELECT D.nationality FROM drivers D \nJOIN lapTimes LT ON D.sequentialnumbers_0 = LT.allones_1 \nJOIN races R ON LT.allones_0 = R.sequentialnumbers_0 \nWHERE R.sequentialnumbers_0 = 933 \nORDER BY CAST(REPLACE(LT.timeseconds_4, ':', '') AS INTEGER) ASC \nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "868": "\nSELECT T1.latitudevalues_6, T1.wikipediaracingcircuitslinks_8 \nFROM circuits AS T1\nJOIN races AS T2 ON T1.numberslist_0 = T2.numberslist_3\nWHERE T2.grandprixnames_4 LIKE '%Malaysian%' AND T1.countrylist_4 = 'MY'\n\n\t----- bird -----\tformula_1",
    "869": "\nSELECT T2.teamwikipages_4 \nFROM constructorStandings AS T1 \nJOIN constructors AS T2 ON T1.sequencevalues_2 = T2.sequentialnumbers_0 \nWHERE T1.agegroup_1 = 9 \nORDER BY T1.valueslist_3 DESC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "870": "\nSELECT q.timedurations_8 \nFROM qualifying AS q\nJOIN races AS r ON q.agevalues_1 = r.sequentialnumbers_0\nJOIN drivers AS d ON q.numericdata_2 = d.sequentialnumbers_0\nWHERE r.numberslist_3 = 345 AND d.drivernames_1 = 'Lucas di Grassi' AND q.sequencevalues_3 = 1\n\n\t----- bird -----\tformula_1",
    "871": "\nSELECT D.nationality_7 FROM drivers AS D JOIN qualifying AS Q ON D.sequentialnumbers_0 = Q.numericdata_2 WHERE Q.agevalues_1 = 347 AND Q.timedurations_8 = '0:01:15'\n\n\t----- bird -----\tformula_1",
    "872": "\nSELECT D.teamabbreviations_3\nFROM drivers D\nJOIN qualifying Q ON D.sequentialnumbers_0 = Q.numericdata_2\nWHERE Q.timedurations_8 = '0:01:33' AND Q.agevalues_1 IN (\n    SELECT sequentialnumbers_0 \n    FROM races \n    WHERE numberslist_3 = 45\n)\n\n\t----- bird -----\tformula_1",
    "873": "\nSELECT r.race_times_15 FROM results r JOIN drivers d ON r.sequentialnumbers_2 = d.sequentialnumbers_0 WHERE d.drivernames_1 = 'Bruce McLaren' AND r.agevalues_1 = 743;\n\n\t----- bird -----\tformula_1",
    "874": "\nSELECT d.drivernames_1 \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE ra.grandprixnames_4 = 'San Marino Grand Prix' AND ra.year_1 = 2006 \nORDER BY r.sequenceofnumbers_3 ASC \nLIMIT 1 OFFSET 1;\n\n\t----- bird -----\tformula_1",
    "875": "\nSELECT T4.formulaoneurl_1 FROM races AS T1 JOIN seasons AS T4 ON T1.year_1 = T4.year_0 WHERE T1.sequentialnumbers_0 = 901;\n\n\t----- bird -----\tformula_1",
    "876": "\nSELECT COUNT(DISTINCT T2.sequentialnumbers_2) AS driver_count\nFROM races AS T1\nJOIN results AS T2 ON T1.sequentialnumbers_0 = T2.agevalues_1\nWHERE T1.datecolumn_5 = '2015-11-29'\n\n\t----- bird -----\tformula_1",
    "877": "\nSELECT d.sequentialnumbers_0, d.drivernames_1, d.dateofbirth_6 \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nWHERE r.agevalues_1 IN (\n    SELECT sequentialnumbers_0 FROM races WHERE numberslist_3 = 872\n) AND r.numericdata_17 = (\n    SELECT sequentialnumbers_0 FROM status WHERE raceoutcomes_1 = 'Finished'\n)\nORDER BY d.dateofbirth_6 DESC\nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "878": "\nSELECT D.drivernames_1, D.drivernames_4, D.drivernames_5 \nFROM drivers D \nJOIN lapTimes LT ON D.sequentialnumbers_0 = LT.allones_1 \nJOIN races R ON LT.allones_0 = R.sequentialnumbers_0 \nWHERE R.numberslist_3 = 348 \nORDER BY CAST(LT.timeseconds_4 AS TIME) ASC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "879": "\nSELECT D.nationality FROM drivers D JOIN lapTimes LT ON D.sequentialnumbers_0 = LT.allones_1 WHERE LT.timeseconds_4 = (SELECT MIN(timeseconds_4) FROM lapTimes)\n\n\t----- bird -----\tformula_1",
    "880": "\nWITH PaulDiRestaRaces AS (\n    SELECT r.sequentialnumbers_0 AS race_id, q.timedurations_8 AS fastest_lap_time\n    FROM drivers d\n    JOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\n    JOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\n    WHERE d.drivernames_1 = 'Paul di Resta'\n),\nRace853 AS (\n    SELECT race_id, fastest_lap_time\n    FROM PaulDiRestaRaces\n    WHERE race_id = 853\n),\nNextRace AS (\n    SELECT race_id, fastest_lap_time\n    FROM PaulDiRestaRaces\n    WHERE race_id > (SELECT race_id FROM Race853)\n    ORDER BY race_id ASC\n    LIMIT 1\n)\nSELECT \n    r.race_id,\n    r.fastest_lap_time AS lap_time_853,\n    n.fastest_lap_time AS next_race_lap_time,\n    ((EXTRACT(EPOCH FROM n.fastest_lap_time) - EXTRACT(EPOCH FROM r.fastest_lap_time)) / EXTRACT(EPOCH FROM r.fastest_lap_time)) * 100 AS percent_faster\nFROM Race853 r, NextRace n;\n\n\t----- bird -----\tformula_1",
    "881": "\nSELECT d.drivernames_1, COUNT(r.sequentialnumbers_0) FILTER (WHERE res.race_times_15 IS NOT NULL) * 1.0 / COUNT(r.sequentialnumbers_0) AS completion_rate\nFROM drivers d\nJOIN results res ON d.sequentialnumbers_0 = res.sequentialnumbers_2\nJOIN races r ON res.agevalues_1 = r.sequentialnumbers_0\nWHERE r.datecolumn_5 = '1983-07-16'\nGROUP BY d.drivernames_1\n\n\t----- bird -----\tformula_1",
    "882": "\nSELECT T1.year_0 FROM seasons AS T1 JOIN races AS T2 ON T1.year_0 = T2.year_1 WHERE T2.grandprixnames_4 LIKE 'Singapore%' ORDER BY T1.year_0 ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "883": "\nSELECT grandprixnames_4 FROM races JOIN seasons ON races.year_1 = seasons.year_0 WHERE seasons.year_0 = 2005 ORDER BY races.sequentialnumbers_0 DESC\n\n\t----- bird -----\tformula_1",
    "884": "\nSELECT T1.grandprixnames_4, EXTRACT(YEAR FROM T1.datecolumn_5) AS race_year, EXTRACT(MONTH FROM T1.datecolumn_5) AS race_month \nFROM races AS T1 \nJOIN (\n    SELECT MIN(datecolumn_5) AS first_race_date\n    FROM races\n) AS T2 ON EXTRACT(YEAR FROM T1.datecolumn_5) = EXTRACT(YEAR FROM T2.first_race_date)\n       AND EXTRACT(MONTH FROM T1.datecolumn_5) = EXTRACT(MONTH FROM T2.first_race_date)\nORDER BY \nCASE WHEN T1.datecolumn_5 = T2.first_race_date THEN 0 ELSE 1 END, \nT1.datecolumn_5\n\n\t----- bird -----\tformula_1",
    "885": "\nSELECT grandprixnames_4, datecolumn_5 \nFROM races \nWHERE year_1 = 1999 \nORDER BY datecolumn_5 DESC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "886": "\nSELECT year_1 FROM races GROUP BY year_1 ORDER BY COUNT(*) DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "887": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN seasons s ON r.year_1 = s.year_0\nWHERE r.year_1 = 2017 AND NOT EXISTS (SELECT 1 FROM races r2 JOIN seasons s2 ON r2.year_1 = s2.year_0 WHERE r2.grandprixnames_4 = r.grandprixnames_4 AND r2.year_1 = 2000)\n\n\t----- bird -----\tformula_1",
    "888": "\nSELECT T1.racetracks_1, T1.latitudevalues_6, T5.countrylist_4 \nFROM circuits AS T1 \nJOIN races AS T2 ON T1.numberslist_0 = T2.numberslist_3 \nJOIN seasons AS T3 ON T2.year_1 = T3.year_0 \nJOIN constructors AS T4 ON T2.sequentialnumbers_0 = T4.sequentialnumbers_0 \nJOIN circuits AS T5 ON T1.numberslist_0 = T5.numberslist_0 \nWHERE T3.formulaoneurl_1 LIKE '%European%' AND T5.countrylist_4 LIKE 'Europe' \nORDER BY T2.datecolumn_5 ASC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "889": "\nSELECT s.year_0 FROM seasons AS s JOIN races AS r ON s.year_0 = r.year_1 WHERE r.grandprixnames_4 LIKE '%British Grand Prix%' AND r.wikipediagrandprixlinks_7 LIKE '%Brands_Hatch' ORDER BY s.year_0 DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "890": "\nSELECT COUNT(DISTINCT T2.year_0) \nFROM races AS T1\nJOIN seasons AS T2 ON T1.year_1 = T2.year_0\nJOIN circuits AS T3 ON T1.numberslist_3 = T3.numberslist_0\nWHERE T3.racetracks_1 = 'Silverstone Circuit' AND T1.grandprixnames_4 LIKE '%United Kingdom%'\n\n\t----- bird -----\tformula_1",
    "891": "\nSELECT d.drivernames_1, r.sequencevalues_2 AS position_stands\nFROM results res\nJOIN races r ON res.agevalues_1 = r.sequentialnumbers_0\nJOIN drivers d ON res.userids_12 = d.sequentialnumbers_0\nWHERE r.year_1 = 2010 AND r.grandprixnames_4 = 'Singapore Grand Prix'\nORDER BY r.sequencevalues_2, res.sequenceofnumbers_3\n\n\t----- bird -----\tformula_1",
    "892": "\nSELECT D.drivernames_1, D.drivernames_4, D.drivernames_5, SUM(R.scores_9) AS total_points\nFROM drivers D\nJOIN results R ON D.sequentialnumbers_0 = R.sequentialnumbers_2\nGROUP BY D.sequentialnumbers_0\nORDER BY total_points DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "893": "\nSELECT D.drivernames_1, R.scores_9 \nFROM results AS R\nJOIN races AS Ra ON R.agevalues_1 = Ra.sequentialnumbers_0\nJOIN drivers AS D ON R.userids_12 = D.sequentialnumbers_0\nWHERE Ra.year_1 = 2017 AND Ra.grandprixnames_4 LIKE '%Chinese%'\nORDER BY R.scores_9 DESC\nLIMIT 3;\n\n\t----- bird -----\tformula_1",
    "894": "\nSELECT l.allones_1, r.grandprixnames_4, l.timeseconds_4 \nFROM lapTimes l\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nWHERE l.timeseconds_4 = (SELECT MIN(timeseconds_4) FROM lapTimes)\n\n\t----- bird -----\tformula_1",
    "895": "\nSELECT AVG(l.timeseconds) AS average_lap_time\nFROM lapTimes l\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nJOIN drivers d ON l.allones_1 = d.sequentialnumbers_0\nWHERE r.year_1 = 2009 AND r.grandprixnames_4 LIKE '%Chinese%' AND d.drivernames_1 = 'Sebastian Vettel'\n\n\t----- bird -----\tformula_1",
    "896": "\nSELECT CAST(COUNT(CASE WHEN T1.sequentialnumbers_2 <> (SELECT sequentialnumbers_0 FROM races WHERE grandprixnames_4 = 'TrackName' AND year_1 >= 2010 ORDER BY year_1 ASC LIMIT 1) THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage_not_first_track\nFROM results T1\nJOIN drivers T2 ON T1.sequentialnumbers_2 = T2.sequentialnumbers_0\nWHERE T2.drivernames_1 = 'Hamilton' AND T1.agevalues_1 >= (SELECT year_0 FROM seasons WHERE year_0 >= 2010 ORDER BY year_0 ASC LIMIT 1)\n\n\t----- bird -----\tformula_1",
    "897": "\nSELECT D.drivernames_1, D.nationality_7, AVG(R.scores_9) AS average_points\nFROM drivers D\nJOIN results R ON D.sequentialnumbers_0 = R.sequentialnumbers_2\nWHERE R.sequenceofnumbers_3 IN (\n    SELECT sequenceofnumbers_3 \n    FROM results \n    WHERE scoreslist_10 = 1\n)\nGROUP BY D.drivernames_1, D.nationality_7\nORDER BY COUNT(R.scoreslist_10) DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "898": "\nSELECT drivernames_1, 2022 - extract(year from dateofbirth_6) + 1 AS age\nFROM drivers\nWHERE nationality_7 = 'Japanese'\nORDER BY age ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "899": "\nSELECT c.numberslist_0, c.racetracks_1 FROM circuits AS c JOIN races AS r ON c.numberslist_0 = r.numberslist_3 WHERE r.year_1 BETWEEN 1990 AND 2000 GROUP BY c.numberslist_0 HAVING COUNT(r.sequentialnumbers_0) = 4\n\n\t----- bird -----\tformula_1",
    "900": "\nSELECT c.racetracks_1 AS circuit_name, c.racetracks_2 AS location, r.grandprixnames_4 AS race_name\nFROM circuits c\nJOIN races r ON c.numberslist_0 = r.numberslist_3\nJOIN seasons s ON r.year_1 = s.year_0\nWHERE c.countrylist_4 = 'USA' AND r.year_1 = 2006;\n\n\t----- bird -----\tformula_1",
    "901": "\nSELECT r.grandprixnames_4, c.racetracks_1, c.countrylist_4 \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE EXTRACT(MONTH FROM r.datecolumn_5) = 9 AND EXTRACT(YEAR FROM r.datecolumn_5) = 2005;\n\n\t----- bird -----\tformula_1",
    "902": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN results res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN drivers d ON res.userids_12 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Alex Yoong' AND res.sequenceofnumbers_3 < 10\n\n\t----- bird -----\tformula_1",
    "903": "\nSELECT COUNT(races.sequentialnumbers_0) \nFROM races\nJOIN circuits ON races.numberslist_3 = circuits.numberslist_0\nJOIN results ON races.sequentialnumbers_0 = results.agevalues_1\nJOIN drivers ON results.userids_12 = drivers.sequentialnumbers_0\nWHERE drivers.drivernames_1 = 'Michael Schumacher' AND circuits.racetracks_1 = 'Sepang International Circuit'\nAND results.sequenceofnumbers_3 IN (\n    SELECT sequentialnumbers_0 \n    FROM constructors \n    WHERE f1teams_1 = 'Ferrari' OR f1teams_1 = 'Benetton'\n)\n\n\t----- bird -----\tformula_1",
    "904": "\nSELECT r.grandprixnames_4, s.year_0 \nFROM races r\nJOIN seasons s ON r.year_1 = s.year_0\nJOIN qualifying q ON r.sequentialnumbers_0 = q.agevalues_1\nJOIN drivers d ON q.numericdata_2 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Michael Schumacher'\nORDER BY CAST(q.timedurations_8 AS TIME) ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "905": "\nSELECT AVG(T2.scores_3) AS average_points\nFROM races AS T1\nJOIN driverStandings AS T2 ON T1.sequentialnumbers_0 = T2.agevalues_1\nJOIN drivers AS T3 ON T2.numericdata_2 = T3.sequentialnumbers_0\nWHERE T3.drivernames_1 = 'Eddie Irvine' AND T1.year_1 = 2000;\n\n\t----- bird -----\tformula_1",
    "906": "\nSELECT r.year_1, r.sequencevalues_2, res.scores_9 \nFROM races AS r\nJOIN results AS res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN drivers AS d ON res.userids_12 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\nORDER BY r.year_1 ASC, r.sequencevalues_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "907": "\nSELECT r.grandprixnames_4, c.countrylist_4 AS hosting_country, r.datecolumn_5 \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE r.year_1 = 2017\nORDER BY r.datecolumn_5\n\n\t----- bird -----\tformula_1",
    "908": "\nSELECT r.grandprixnames_4, s.year_0, c.racetracks_1 FROM races AS r JOIN seasons AS s ON r.year_1 = s.year_0 JOIN circuits AS c ON r.numberslist_3 = c.numberslist_0 WHERE r.sequentialnumbers_0 IN (SELECT agevalues_1 FROM lapTimes GROUP BY agevalues_1 ORDER BY COUNT(*) DESC LIMIT 1)\n\n\t----- bird -----\tformula_1",
    "909": "\nSELECT CAST(COUNT(CASE WHEN T4.countrylist_4 = 'Germany' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM races AS T1 JOIN seasons AS T2 ON T1.year_1 = T2.year_0 JOIN circuits AS T3 ON T1.numberslist_3 = T3.numberslist_0 JOIN circuits AS T4 ON T1.numberslist_3 = T4.numberslist_0 WHERE T2.formulaoneurl_1 LIKE '%European Grand Prix%'\n\n\t----- bird -----\tformula_1",
    "910": "\nSELECT latitudevalues_6 FROM circuits WHERE racetracks_1 = 'Silverstone Circuit' OR racetracks_2 = 'Silverstone Circuit' OR racetracks_3 = 'Silverstone Circuit'\n\n\t----- bird -----\tformula_1",
    "911": "\nSELECT wikipediaracingcircuitslinks_8, latitudevalues_6 \nFROM circuits \nWHERE racetracks_1 IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring')\nORDER BY latitudevalues_6 DESC\nLIMIT 2;\n\n\t----- bird -----\tformula_1",
    "912": "\nSELECT wikipediaracingcircuitslinks_8 FROM circuits WHERE racetracks_1 = 'Marina Bay Street Circuit'\n\n\t----- bird -----\tformula_1",
    "913": "\nSELECT T1.countrylist_4 FROM circuits AS T1 JOIN (SELECT MAX(latitudevalues_6) AS max_altitude FROM circuits) AS T2 ON T1.latitudevalues_6 = T2.max_altitude\n\n\t----- bird -----\tformula_1",
    "914": "\nSELECT COUNT(*) FROM drivers WHERE drivernames_5 IS NULL OR drivernames_5 = ''\n\n\t----- bird -----\tformula_1",
    "915": "\nSELECT T3.nationality FROM drivers AS T1 JOIN driverStandings AS T2 ON T1.sequentialnumbers_0 = T2.numericdata_2 ORDER BY T1.agevalues_2 DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "916": "\nSELECT drivernames_1 FROM drivers WHERE nationality_7 = 'Italian'\n\n\t----- bird -----\tformula_1",
    "917": "\nSELECT wikipediaprofileurl_8 FROM drivers WHERE drivernames_1 = 'Anthony Davidson'\n\n\t----- bird -----\tformula_1",
    "918": "\nSELECT drivernames_1 FROM drivers WHERE drivernames_4 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "919": "\nSELECT T1.racetracks_1 FROM circuits AS T1 JOIN races AS T2 ON T1.numberslist_0 = T2.numberslist_3 WHERE T2.year_1 = 2009 AND T2.grandprixnames_4 LIKE '%Spanish%'\n\n\t----- bird -----\tformula_1",
    "920": "\nSELECT DISTINCT s.year_0 \nFROM seasons AS s\nJOIN races AS r ON s.year_0 = r.year_1\nJOIN circuits AS c ON r.numberslist_3 = c.numberslist_0\nWHERE c.racetracks_1 = 'Silverstone Circuit' OR c.racetracks_2 = 'Silverstone Circuit' OR c.racetracks_3 = 'Silverstone Circuit';\n\n\t----- bird -----\tformula_1",
    "921": "\nSELECT r.year_1, r.grandprixnames_4, c.racetracks_1 FROM races AS r JOIN circuits AS c ON r.numberslist_3 = c.numberslist_0 WHERE c.racetracks_1 LIKE '%Silverstone%' ORDER BY r.year_1 ASC;\n\n\t----- bird -----\tformula_1",
    "922": "\nSELECT r.timeofday FROM races AS r JOIN circuits AS c ON r.numberslist_3 = c.numberslist_0 WHERE r.year_1 = 2010 AND c.racetracks_1 = 'Abu Dhabi Circuit'\n\n\t----- bird -----\tformula_1",
    "923": "\nSELECT COUNT(*) \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.countrylist_4 = 'Italy'\n\n\t----- bird -----\tformula_1",
    "924": "\nSELECT r.datecolumn_5 \nFROM races AS r\nJOIN circuits AS c ON r.numberslist_3 = c.numberslist_0\nWHERE c.racetracks_1 = 'Barcelona-Catalunya'\nOR c.racetracks_2 = 'Barcelona-Catalunya'\nOR c.racetracks_3 = 'Barcelona-Catalunya';\n\n\t----- bird -----\tformula_1",
    "925": "\nSELECT T1.wikipediagrandprixlinks FROM races AS T1 JOIN seasons AS T2 ON T1.year_1 = T2.year_0 WHERE T2.formulaoneurl_1 LIKE '%2009%' AND T1.grandprixnames_4 LIKE '%Spanish%'\n\n\t----- bird -----\tformula_1",
    "926": "\nSELECT MIN(TIMESECONDS) AS FASTEST_LAP_TIME, L.drivernames_1 \nFROM lapTimes LT\nJOIN drivers D ON LT.allones_1 = D.sequentialnumbers_0\nJOIN races R ON LT.allones_0 = R.sequentialnumbers_0\nWHERE D.drivernames_1 = 'Lewis Hamilton'\nGROUP BY D.drivernames_1\nORDER BY FASTEST_LAP_TIME ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "927": "\nSELECT d.drivernames_1, d.drivernames_4 FROM drivers d JOIN lapTimes lt ON d.sequentialnumbers_0 = lt.allones_1 ORDER BY CAST(SUBSTRING(lt.timeseconds_4, PATINDEX('%[0-9]%', lt.timeseconds_4)) AS DECIMAL(10, 2)) ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "928": "\nSELECT D.drivernames_1 \nFROM drivers D\nJOIN results R ON D.sequentialnumbers_0 = R.sequentialnumbers_2\nJOIN races RA ON R.agevalues_1 = RA.sequentialnumbers_0\nWHERE RA.year_1 = 2008 AND RA.grandprixnames_4 = 'Australian Grand Prix' \nORDER BY R.sequenceofnumbers_3 ASC, R.scores_9 DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "929": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN results res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN drivers d ON res.userids_12 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "930": "\nSELECT r.grandprixnames_4, ds.scores_3 AS highest_rank\nFROM races r\nJOIN driverStandings ds ON r.sequentialnumbers_0 = ds.agevalues_1\nJOIN drivers d ON ds.numericdata_2 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\nORDER BY ds.scores_3 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "931": "\nSELECT l.timeseconds AS fastest_lap_time, d.drivernames_1 AS driver_name, r.grandprixnames_4 AS race_name\nFROM lapTimes l\nJOIN drivers d ON l.allones_1 = d.sequentialnumbers_0\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nWHERE r.year_1 = 2009 AND r.grandprixnames_4 = 'Spanish Grand Prix'\nORDER BY CAST(REPLACE(l.timeseconds, ':', '') AS INTEGER)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "932": "\nSELECT DISTINCT s.year_0 \nFROM seasons s\nJOIN races r ON s.year_0 = r.year_1\nJOIN results res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN drivers d ON res.userids_12 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "933": "\nSELECT rs.numericdata_2 AS driver_id, rs.scores_3 AS final_rank\nFROM driverStandings rs\nJOIN races r ON rs.agevalues_1 = r.sequentialnumbers_0\nJOIN drivers d ON rs.numericdata_2 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton' AND r.year_1 = 2008 AND r.grandprixnames_4 = 'Australian Grand Prix'\nORDER BY r.datecolumn_5 DESC, rs.agegroup_1 DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "934": "\nSELECT D.drivernames_1, D.drivernames_4 \nFROM drivers D\nJOIN qualifying Q ON D.sequentialnumbers_0 = Q.numericdata_2\nJOIN races R ON Q.agevalues_1 = R.sequentialnumbers_0\nWHERE R.year_1 = 2008 AND R.grandprixnames_4 = 'Australian Grand Prix' AND Q.sequencevalues_3 = 4;\n\n\t----- bird -----\tformula_1",
    "935": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE ra.year_1 = 2008 AND ra.grandprixnames_4 = 'Australian Grand Prix' AND r.numericdata_17 IS NOT NULL;\n\n\t----- bird -----\tformula_1",
    "936": "\nSELECT lt.timeseconds_4 \nFROM lapTimes lt\nJOIN races r ON lt.allones_0 = r.sequentialnumbers_0\nJOIN drivers d ON lt.allones_1 = d.sequentialnumbers_0\nWHERE r.year_1 = 2008 AND r.grandprixnames_4 = 'Australian Grand Prix' AND d.drivernames_1 = 'Lewis Hamilton'\nORDER BY CAST(SUBSTRING(lt.timeseconds_4, 4) AS TIME)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "937": "\nSELECT r.race_times_15 \nFROM results r\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nJOIN driverStandings ds ON r.agevalues_1 = ds.agevalues_1 AND r.sequentialnumbers_2 = ds.numericdata_2\nWHERE ra.year_1 = 2008 AND ra.grandprixnames_4 = 'Australian Grand Prix' AND ds.scores_3 = 2\n\n\t----- bird -----\tformula_1",
    "938": "\nSELECT D.drivernames_1, D.wikipediaprofileurl_8 \nFROM drivers D \nJOIN driverStandings DS ON D.sequentialnumbers_0 = DS.numericdata_2 \nJOIN races R ON DS.agevalues_1 = R.sequentialnumbers_0 \nWHERE R.year_1 = 2008 AND R.grandprixnames_4 LIKE '%Australian%' AND DS.scores_3 = (\n    SELECT MAX(DS2.scores_3) \n    FROM driverStandings DS2 \n    JOIN races R2 ON DS2.agevalues_1 = R2.sequentialnumbers_0 \n    WHERE R2.year_1 = 2008 AND R2.grandprixnames_4 LIKE '%Australian%'\n)\n\n\t----- bird -----\tformula_1",
    "939": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE d.nationality_7 = 'USA' AND ra.year_1 = 2008 AND ra.grandprixnames_4 = 'Australian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "940": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE ra.year_1 = 2008 AND ra.grandprixnames_4 LIKE '%Australian%' AND r.numericdata_17 IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "941": "\nSELECT SUM(scores_3) AS total_points\nFROM driverStandings ds\nJOIN drivers d ON ds.numericdata_2 = d.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "942": "\nSELECT AVG(l.timeseconds::int) AS average_fastest_lap_time\nFROM lapTimes l\nJOIN drivers d ON l.allones_1 = d.sequentialnumbers_0\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "943": "\nSELECT COUNT(CASE WHEN l.timeseconds_4 IS NOT NULL THEN 1 END) * 100 / COUNT(l.allones_0) AS completion_rate\nFROM lapTimes l\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nWHERE r.year_1 = 2008 AND r.grandprixnames_4 = 'Australian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "944": "\nSELECT (1 - R1.race_times::float / R2.race_times::float) * 100 AS percentage_faster\nFROM results R1, results R2, races R, driverStandings DS\nWHERE R.year_1 = 2008 AND R.grandprixnames_4 = 'Australian Grand Prix'\nAND R.sequentialnumbers_0 = R1.agevalues_1 AND R.sequentialnumbers_0 = R2.agevalues_1\nAND DS.agevalues_1 = R.sequentialnumbers_0 AND DS.activityindicator_6 = 1\nAND R1.sequenceofnumbers_3 = DS.numericdata_2 AND R2.sequenceofnumbers_3 = (SELECT numericdata_2 FROM driverStandings WHERE activityindicator_6 = 0 AND agevalues_1 = R.sequentialnumbers_0)\nAND R1.race_times IS NOT NULL AND R2.race_times IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "945": "\nSELECT COUNT(*) FROM circuits WHERE racetracks_1 = 'Melbourne' AND countrylist_4 = 'Australia'\n\n\t----- bird -----\tformula_1",
    "946": "\nSELECT latitudevalues_6, countrylist_4 FROM circuits WHERE countrylist_4 = 'USA'\n\n\t----- bird -----\tformula_1",
    "947": "\nSELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dateofbirth < '1980-12-31'\n\n\t----- bird -----\tformula_1",
    "948": "\nSELECT AVG(T3.valueslist_3) AS average_points\nFROM constructors AS T1\nJOIN constructorStandings AS T2 ON T1.sequentialnumbers_0 = T2.sequencevalues_2\nJOIN (\n    SELECT sequencevalues_2, SUM(valueslist_3) AS valueslist_3\n    FROM constructorStandings\n    GROUP BY sequencevalues_2\n) AS T3 ON T2.sequencevalues_2 = T3.sequencevalues_2\nWHERE T1.nationality_3 = 'British';\n\n\t----- bird -----\tformula_1",
    "949": "\nSELECT c.teamnames_2, MAX(cs.valueslist_3) AS highest_points\nFROM constructorStandings cs\nJOIN constructors c ON cs.sequencevalues_2 = c.sequentialnumbers_0\nGROUP BY c.teamnames_2\nORDER BY highest_points DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "950": "\nSELECT c.teamnames_2 FROM constructors c JOIN constructorResults cr ON c.sequentialnumbers_0 = cr.numberslist_2 WHERE cr.agevalues_1 = 291 AND cr.scoreslist_3 = 0;\n\n\t----- bird -----\tformula_1",
    "951": "\nSELECT COUNT(DISTINCT c.sequentialnumbers_0) \nFROM constructors c\nJOIN constructorStandings cs ON c.sequentialnumbers_0 = cs.sequencevalues_2\nWHERE c.nationality_3 = 'Japanese' AND cs.valueslist_3 = 0\nGROUP BY c.sequentialnumbers_0\nHAVING COUNT(DISTINCT cs.agegroup_1) = 2\n\n\t----- bird -----\tformula_1",
    "952": "\nSELECT DISTINCT c.f1teams, c.teamnames_2\nFROM constructors c\nJOIN constructorStandings cs ON c.sequentialnumbers_0 = cs.sequencevalues_2\nWHERE cs.activityindicator_6 = 1\nORDER BY c.sequentialnumbers_0\n\n\t----- bird -----\tformula_1",
    "953": "\nSELECT COUNT(c.sequentialnumbers_0) \nFROM constructors c\nJOIN constructorResults cr ON c.sequentialnumbers_0 = cr.numberslist_2\nWHERE c.nationality_3 = 'French' AND cr.agevalues_1 > 50\n\n\t----- bird -----\tformula_1",
    "954": "\nSELECT r.year_1, COUNT(DISTINCT res.sequentialnumbers_0) * 100 / (SELECT COUNT(*) FROM races WHERE year_1 BETWEEN 2007 AND 2009) AS completion_percentage\nFROM races r\nJOIN results res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN drivers d ON res.userids_12 = d.sequentialnumbers_0\nWHERE d.nationality_7 = 'Japanese' AND r.year_1 BETWEEN 2007 AND 2009\nGROUP BY r.year_1\n\n\t----- bird -----\tformula_1",
    "955": "\nSELECT r.year_1, AVG(l.timeseconds_4::int) AS average_champion_time\nFROM races r\nJOIN results res ON r.sequentialnumbers_0 = res.agevalues_1\nJOIN lapTimes l ON res.sequentialnumbers_2 = l.allones_1 AND res.sequenceofnumbers_3 = l.allones_0\nWHERE res.sequencevalues_7 = '1' -- Assuming 1 is the position for champion\nGROUP BY r.year_1\nORDER BY r.year_1;\n\n\t----- bird -----\tformula_1",
    "956": "\nSELECT T1.drivernames_1, T1.drivernames_4 \nFROM drivers AS T1 \nJOIN driverStandings AS T2 ON T1.sequentialnumbers_0 = T2.numericdata_2 \nWHERE T1.dateofbirth_6 > '1975-12-31' AND T2.scores_3 = 2\n\n\t----- bird -----\tformula_1",
    "957": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nWHERE d.nationality_7 = 'Italian' AND r.race_times_15 IS NULL OR r.race_times_15 = ''\n\n\t----- bird -----\tformula_1",
    "958": "\nSELECT d.drivernames_1, d.drivernames_4\nFROM drivers d\nJOIN lapTimes lt ON d.sequentialnumbers_0 = lt.allones_1\nWHERE lt.timeseconds_4 = (\n    SELECT MIN(timeseconds_4)\n    FROM lapTimes\n);\n\n\t----- bird -----\tformula_1",
    "959": "\nSELECT laptimes_6 FROM qualifying WHERE agevalues_1 IN (SELECT sequentialnumbers_0 FROM races WHERE year_1 = 2009) AND numericdata_2 IN (SELECT sequentialnumbers_2 FROM results WHERE agevalues_1 IN (SELECT sequentialnumbers_0 FROM races WHERE year_1 = 2009) AND sequenceofnumbers_3 IN (SELECT numberslist_2 FROM constructorResults WHERE agevalues_1 IN (SELECT sequentialnumbers_0 FROM races WHERE year_1 = 2009)) ORDER BY scores_9 DESC LIMIT 1)\n\n\t----- bird -----\tformula_1",
    "960": "\nSELECT AVG(l.timeseconds) AS average_fastest_lap_speed\nFROM races r\nJOIN lapTimes l ON r.sequentialnumbers_0 = l.allones_0\nWHERE r.year_1 = 2009 AND r.grandprixnames_4 = 'Spanish Grand Prix'\n\n\t----- bird -----\tformula_1",
    "961": "\nSELECT r.year_1, s.grandprixnames_4, MIN(strftime(results.race_times_15, '%s')) AS shortest_time\nFROM results r\nJOIN races r2 ON r.agevalues_1 = r2.sequentialnumbers_0\nJOIN seasons s ON r.year_1 = s.year_0\nGROUP BY r.year_1, s.grandprixnames_4\nORDER BY shortest_time ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "962": "\nSELECT CAST(COUNT(CASE WHEN drivers.dateofbirth_6 < '1985-01-01' AND lapTimes.scoreslist_3 > 50 THEN races.sequentialnumbers_0 END) AS REAL) * 100 / COUNT(races.sequentialnumbers_0) AS percentage\nFROM races\nJOIN drivers ON results.sequentialnumbers_2 = drivers.sequentialnumbers_0\nJOIN lapTimes ON races.sequentialnumbers_0 = lapTimes.allones_0 AND drivers.sequentialnumbers_0 = lapTimes.allones_1\nWHERE races.year_1 BETWEEN 2000 AND 2005;\n\n\t----- bird -----\tformula_1",
    "963": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN lapTimes lt ON d.sequentialnumbers_0 = lt.allones_1\nWHERE d.nationality_7 = 'French' AND lt.timeseconds_4 < '02:00.00'\n\n\t----- bird -----\tformula_1",
    "964": "\nSELECT * FROM drivers WHERE nationality = 'America'\n\n\t----- bird -----\tformula_1",
    "965": "\nSELECT sequentialnumbers_0 FROM races WHERE year_1 = 2009\n\n\t----- bird -----\tformula_1",
    "966": "\nSELECT COUNT(DISTINCT sequentialnumbers_2) AS driver_count\nFROM results\nWHERE agevalues_1 = 18;\n\n\t----- bird -----\tformula_1",
    "967": "\nSELECT drivernames_1, nationality_7 FROM drivers ORDER BY agevalues_2 LIMIT 3\n\n\nSELECT COUNT(*) FROM (SELECT drivernames_1, nationality_7 FROM drivers ORDER BY agevalues_2 LIMIT 3) AS top_drivers WHERE nationality_7 = 'Netherlands'\n\n\t----- bird -----\tformula_1",
    "968": "\nSELECT drivernames_1 FROM drivers WHERE drivernames_4 = 'Robert Kubica'\n\n\t----- bird -----\tformula_1",
    "969": "\nSELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND dateofbirth BETWEEN '1980-01-01' AND '1980-12-31'\n\n\t----- bird -----\tformula_1",
    "970": "\nSELECT d.drivernames_1, MIN(l.timeseconds_4) AS earliest_lap_time\nFROM drivers d\nJOIN lapTimes l ON d.sequentialnumbers_0 = l.allones_1\nWHERE d.nationality_7 = 'German' AND d.dateofbirth_6 BETWEEN '1980-01-01' AND '1990-12-31'\nGROUP BY d.drivernames_1\nORDER BY earliest_lap_time ASC\nLIMIT 3\n\n\t----- bird -----\tformula_1",
    "971": "\nSELECT wikipediaprofileurl_8 FROM drivers WHERE nationality_7 = 'German' ORDER BY dateofbirth_6 ASC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "972": "\nSELECT d.sequentialnumbers_0 AS driver_id, d.wikipediaprofileurl_8 AS driver_code\nFROM drivers d\nJOIN lapTimes lt ON d.sequentialnumbers_0 = lt.allones_1\nWHERE YEAR(d.dateofbirth_6) = 1971\nORDER BY CAST(REPLACE(lt.timeseconds_4, ':', '') AS INTEGER)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "973": "\nSELECT d.drivernames_1, l.timeseconds_4 \nFROM drivers d\nJOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\nJOIN lapTimes l ON d.sequentialnumbers_0 = l.allones_1 AND q.sequencevalues_3 = l.sequentialnumbers_2\nWHERE d.dateofbirth_6 < '1982-01-01' AND d.nationality_7 = 'Spanish'\nORDER BY l.timeseconds_4 DESC\nLIMIT 10;\n\n\t----- bird -----\tformula_1",
    "974": "\nSELECT r.year_1\nFROM races r\nJOIN lapTimes lt ON r.sequentialnumbers_0 = lt.allones_0\nORDER BY CAST(SUBSTRING(lt.timeseconds_4, PATINDEX('%[0-9]%', lt.timeseconds_4)) AS DECIMAL(10, 2))\nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "975": "\nSELECT s.year_0, MIN(q.timedurations_8::interval) AS min_lap_time\nFROM seasons s\nJOIN races r ON s.year_0 = r.year_1\nJOIN qualifying q ON r.sequentialnumbers_0 = q.agevalues_1\nGROUP BY s.year_0\nORDER BY min_lap_time ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "976": "\nSELECT d.sequentialnumbers_0 AS driver_id, MIN(l.timeseconds_4) AS fastest_lap_time\nFROM drivers d\nJOIN lapTimes l ON d.sequentialnumbers_0 = l.allones_1\nGROUP BY d.sequentialnumbers_0\nORDER BY MIN(l.timeseconds_4) ASC\nLIMIT 5;\n\n\t----- bird -----\tformula_1",
    "977": "\nSELECT COUNT(r.agevalues_1) \nFROM results r\nJOIN races ra ON r.agevalues_1 = ra.sequentialnumbers_0\nWHERE ra.sequencevalues_2 BETWEEN 50 AND 100\nAND r.race_times_15 IS NOT NULL\nAND r.numericdata_17 IN (SELECT sequentialnumbers_0 FROM status WHERE raceoutcomes_1 LIKE '%disqualified%')\n\n\t----- bird -----\tformula_1",
    "978": "\nSELECT countrylist_4, racetracks_1, latitudevalues_6 \nFROM circuits \nWHERE countrylist_4 = 'Austria';\n\n\t----- bird -----\tformula_1",
    "979": "\nSELECT numberslist_3 FROM races JOIN results ON races.sequentialnumbers_0 = results.agevalues_1 GROUP BY numberslist_3 ORDER BY COUNT(DISTINCT sequentialnumbers_2) DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "980": "\nSELECT d.drivernames_1, d.nationality_7, d.dateofbirth_6 \nFROM drivers d\nJOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\nWHERE q.agevalues_1 = 23 AND q.sequencevalues_3 = 2\n\n\t----- bird -----\tformula_1",
    "981": "\nSELECT s.year_0, r.datecolumn_5, r.timeofday_6 \nFROM seasons s\nJOIN races r ON s.year_0 = r.year_1\nJOIN qualifying q ON r.sequentialnumbers_0 = q.agevalues_1\nJOIN drivers d ON q.numericdata_2 = d.sequentialnumbers_0\nWHERE d.dateofbirth_6 = (\n    SELECT MIN(dateofbirth_6) \n    FROM drivers\n)\nORDER BY r.datecolumn_5 ASC, r.timeofday_6 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "982": "\nSELECT COUNT(DISTINCT d.sequentialnumbers_0) \nFROM drivers d\nJOIN results r ON d.sequentialnumbers_0 = r.sequentialnumbers_2\nJOIN status s ON r.numericdata_17 = s.sequentialnumbers_0\nWHERE d.nationality_7 = 'American' AND s.raceoutcomes_1 = 'disqualified'\n\n\t----- bird -----\tformula_1",
    "983": "\nSELECT T2.teamwikipages_4 FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.sequencevalues_2 = T2.sequentialnumbers_0 WHERE T2.nationality_3 = 'Italian' ORDER BY T1.valueslist_3 DESC LIMIT 1\n\n\t----- bird -----\tformula_1",
    "984": "\nWITH constructor_wins AS (\n    SELECT numberslist_2, COUNT(*) AS total_wins\n    FROM results\n    WHERE sequenceofnumbers_3 IS NOT NULL AND scores_9 = 1 -- Assuming score of 1 represents a win\n    GROUP BY numberslist_2\n),\nconstructor_info AS (\n    SELECT sequentialnumbers_0, f1teams_1, teamnames_2, teamwikipages_4\n    FROM constructors\n)\nSELECT ci.teamwikipages_4 AS website\nFROM constructor_wins cw\nJOIN constructor_info ci ON cw.numberslist_2 = ci.sequentialnumbers_0\nORDER BY cw.total_wins DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "985": "\nSELECT d.drivernames_1, q.timedurations_8 AS third_lap_time\nFROM drivers d\nJOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\nJOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\nWHERE r.grandprixnames_4 = 'French Grand Prix' AND q.sequencevalues_3 = 3\nORDER BY CAST(SUBSTRING_INDEX(q.timedurations_8, '.', -1) AS TIME) DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "986": "\nSELECT l.timeseconds * 1000 AS lap_time_ms, r.grandprixnames_4 AS race_name\nFROM qualifying q\nJOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\nJOIN drivers d ON q.numericdata_2 = d.sequentialnumbers_0\nJOIN lapTimes l ON l.allones_0 = q.agevalues_1 AND l.allones_1 = q.numericdata_2\nWHERE q.sequencevalues_3 = 1 AND l.scoreslist_3 = 1\nORDER BY l.timeseconds ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "987": "\nSELECT AVG(l.timeseconds_4) AS average_fastest_lap_time\nFROM (\n    SELECT q.numericdata_2, MIN(q.timedurations_8::INTERVAL) AS min_lap_time\n    FROM qualifying q\n    JOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\n    WHERE r.year_1 = 2006 AND r.grandprixnames_4 = 'United States Grand Prix'\n    GROUP BY q.numericdata_2\n    ORDER BY min_lap_time ASC\n    LIMIT 10\n) AS top_drivers\nJOIN qualifying l ON top_drivers.numericdata_2 = l.numericdata_2 AND top_drivers.min_lap_time = l.timedurations_8::INTERVAL;\n\n\t----- bird -----\tformula_1",
    "988": "\nSELECT d.drivernames_1, AVG(ps.timestampcolumn_4) AS avg_pit_stop_duration\nFROM drivers d\nJOIN pitStops ps ON d.sequentialnumbers_0 = ps.userids_6\nWHERE d.nationality_7 = 'German' AND d.dateofbirth_6 BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.drivernames_1\nORDER BY avg_pit_stop_duration ASC\nLIMIT 5\n\n\t----- bird -----\tformula_1",
    "989": "\nSELECT r.grandprixnames_4, res.drivernames_1, res.race_times_15 \nFROM races AS r\nJOIN drivers AS d ON d.sequentialnumbers_0 = res.sequentialnumbers_2\nJOIN results AS res ON res.agevalues_1 = r.sequentialnumbers_0\nWHERE r.year_1 = 2008 AND r.grandprixnames_4 = 'Canadian Grand Prix' \nORDER BY res.sequenceofnumbers_3 ASC, res.primesandodds_5 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "990": "\nSELECT C.f1teams, C.teamwikipages_4 \nFROM constructors C\nJOIN constructorResults CR ON C.sequentialnumbers_0 = CR.numberslist_2\nJOIN races R ON CR.agevalues_1 = R.sequentialnumbers_0\nWHERE R.year_1 = 2009 AND R.grandprixnames_4 = 'Singapore Grand Prix' \nORDER BY CR.scoreslist_3 DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "991": "\nSELECT drivernames_1, dateofbirth_6 \nFROM drivers \nWHERE nationality_7 = 'Austrian' AND dateofbirth_6 BETWEEN '1981-01-01' AND '1991-12-31'\n\n\t----- bird -----\tformula_1",
    "992": "\nSELECT drivernames_1, wikipediaprofileurl_8, dateofbirth_6 \nFROM drivers \nWHERE nationality_7 = 'German' AND dateofbirth_6 BETWEEN '1971-01-01' AND '1985-12-31'\nORDER BY dateofbirth_6 DESC\n\n\t----- bird -----\tformula_1",
    "993": "\nSELECT racetracks_1, countrylist_4, latitudevalues_6 \nFROM circuits \nWHERE racetracks_1 = 'Hungaroring';\n\n\t----- bird -----\tformula_1",
    "994": "\nSELECT cs.valueslist_3, c.f1teams, c.nationality_3 \nFROM constructorStandings cs \nJOIN races r ON cs.agegroup_1 = r.sequentialnumbers_0 \nJOIN constructors c ON cs.sequencevalues_2 = c.sequentialnumbers_0 \nWHERE r.grandprixnames_4 = 'Monaco Grand Prix' AND r.year_1 BETWEEN 1980 AND 2010 \nORDER BY cs.valueslist_3 DESC \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "995": "\nSELECT AVG(T2.scores_9) AS average_score\nFROM races AS T1\nJOIN results AS T2 ON T1.sequentialnumbers_0 = T2.agevalues_1\nJOIN drivers AS T3 ON T2.userids_12 = T3.sequentialnumbers_0\nWHERE T1.grandprixnames_4 = 'Turkish Grand Prix' AND T3.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "996": "\nSELECT year_0, COUNT(*) AS race_count\nFROM races\nWHERE year_1 BETWEEN 2000 AND 2009\nGROUP BY year_0;\n\n\t----- bird -----\tformula_1",
    "997": "\nSELECT nationality AS citizenship FROM drivers GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "998": "\nSELECT COUNT(*) \nFROM results r\nJOIN driverStandings ds ON r.sequentialnumbers_2 = ds.numericdata_2 AND r.agevalues_1 = ds.agevalues_1\nWHERE ds.scores_3 IS NOT NULL AND ds.activityindicator_6 = 91 AND r.sequenceofnumbers_3 IS NOT NULL AND r.scores_9 = (\n    SELECT MAX(scores_9)\n    FROM results AS res\n    WHERE res.sequentialnumbers_2 = r.sequentialnumbers_2 AND res.agevalues_1 = r.agevalues_1\n)\n\n\t----- bird -----\tformula_1",
    "999": "\nSELECT r.grandprixnames_4 \nFROM races r\nJOIN lapTimes lt ON r.sequentialnumbers_0 = lt.allones_0\nWHERE lt.timeseconds_4 = (SELECT MIN(timeseconds_4) FROM lapTimes)\n\n\t----- bird -----\tformula_1",
    "1000": "\nSELECT T2.racetracks_1, T2.countrylist_4 FROM races AS T1 JOIN circuits AS T2 ON T1.numberslist_3 = T2.numberslist_0 WHERE T1.datecolumn_5 = (SELECT MAX(datecolumn_5) FROM races)\n\n\t----- bird -----\tformula_1",
    "1001": "\nSELECT D.drivernames_1, D.drivernames_4, D.drivernames_5 \nFROM drivers AS D \nJOIN qualifying AS Q ON D.sequentialnumbers_0 = Q.numericdata_2 \nJOIN races AS R ON Q.agevalues_1 = R.sequentialnumbers_0 \nWHERE R.year_1 = 2008 AND R.grandprixnames_4 = 'Marina Bay Street Circuit' AND Q.sequencevalues_3 = 3 \nORDER BY Q.sequencevalues_3 ASC \nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "1002": "\nSELECT d.drivernames_1, d.nationality_7, r.grandprixnames_4 \nFROM drivers d \nJOIN results res ON d.sequentialnumbers_0 = res.sequentialnumbers_2 \nJOIN races r ON res.agevalues_1 = r.sequentialnumbers_0 \nWHERE d.dateofbirth_6 = (SELECT MAX(dateofbirth_6) FROM drivers) \nORDER BY r.year_1 ASC, r.sequencevalues_2 ASC \nLIMIT 1\n\n\t----- bird -----\tformula_1",
    "1003": "\nSELECT COUNT(r.status_1) AS number_of_accidents\nFROM (\n    SELECT s.agevalues_1, d.drivernames_1, st.sequentialnumbers_0 AS status_1\n    FROM results r\n    JOIN races s ON r.agevalues_1 = s.sequentialnumbers_0\n    JOIN drivers d ON r.userids_12 = d.sequentialnumbers_0\n    JOIN status st ON r.numericdata_17 = st.sequentialnumbers_0\n    WHERE s.grandprixnames_4 = 'Canadian Grand Prix' AND st.raceoutcomes_1 = 'Accident'\n) AS r\nGROUP BY r.agevalues_1, r.drivernames_1\nORDER BY number_of_accidents DESC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1004": "\nSELECT d.drivernames_1, COUNT(r.sequentialnumbers_0) AS wins\nFROM drivers d\nJOIN results res ON d.sequentialnumbers_0 = res.sequentialnumbers_2\nJOIN races r ON res.agevalues_1 = r.sequentialnumbers_0\nWHERE res.sequenceofnumbers_3 IS NOT NULL AND res.primesandodds_5 = 1\nGROUP BY d.sequentialnumbers_0, d.drivernames_1\nORDER BY d.dateofbirth_6 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1005": "\nSELECT MAX(timestampdiff(second, timestamp_column_4, lead(timestamp_column_4) over (ORDER BY value_841_0, idnumbers_1)) AS longest_pit_stop_time\nFROM pit_stops\nWHERE temperaturevalues_5 IS NOT NULL AND userids_6 IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "1006": "\nSELECT MIN(timeseconds_4) AS fastest_lap_time\nFROM lapTimes\n\n\t----- bird -----\tformula_1",
    "1007": "\nSELECT MAX(T2.timestampcolumn_4) AS longest_pit_stop_time\nFROM drivers AS T1\nJOIN pitStops AS T2 ON T1.sequentialnumbers_0 = T2.userids_6\nWHERE T1.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "1008": "\nSELECT ps.timestampcolumn_4 \nFROM pitStops ps\nJOIN races r ON ps.value_841_0 = r.sequentialnumbers_0\nJOIN drivers d ON ps.idnumbers_1 = d.sequentialnumbers_0\nWHERE r.year_1 = 2011 AND r.grandprixnames_4 = 'Australian Grand Prix' AND d.drivernames_1 = 'Lewis Hamilton'\n\n\t----- bird -----\tformula_1",
    "1009": "\nSELECT d.drivernames_1, ps.timestampcolumn_4 \nFROM pitStops ps\nJOIN races r ON ps.value_841_0 = r.sequentialnumbers_0\nJOIN drivers d ON ps.idnumbers_1 = d.sequentialnumbers_0\nWHERE r.year_1 = 2011 AND r.grandprixnames_4 = 'Australian Grand Prix'\nORDER BY ps.timestampcolumn_4;\n\n\t----- bird -----\tformula_1",
    "1010": "\nSELECT lt.timeseconds AS lap_record_time\nFROM drivers d\nJOIN qualifying q ON d.sequentialnumbers_0 = q.numericdata_2\nJOIN races r ON q.agevalues_1 = r.sequentialnumbers_0\nJOIN lapTimes lt ON (d.sequentialnumbers_0 = lt.allones_1 AND r.sequentialnumbers_0 = lt.allones_0)\nWHERE d.drivernames_1 = 'Lewis Hamilton'\nORDER BY CAST(SUBSTRING(lt.timeseconds, 4) AS INTEGER), \n          CASE WHEN LEFT(lt.timeseconds, 2) = '-' THEN 1 ELSE 0 END\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1011": "\nSELECT D.drivernames_1, L.timeseconds_4 AS shortest_lap_time\nFROM drivers D\nJOIN lapTimes L ON D.sequentialnumbers_0 = L.allones_1\nWHERE L.timeseconds_4 = (\n    SELECT MIN(timeseconds_4)\n    FROM lapTimes\n)\n\n\t----- bird -----\tformula_1",
    "1012": "\nSELECT c.racetracks_1, r.sequencevalues_2 AS race_sequence, q.timedurations_8 AS fastest_lap_time\nFROM circuits c\nJOIN races r ON c.numberslist_0 = r.numberslist_3\nJOIN qualifying q ON r.sequentialnumbers_0 = q.agevalues_1 AND d.sequentialnumbers_0 = q.numericdata_2\nJOIN drivers d ON d.drivernames_1 = 'Lewis Hamilton'\nWHERE d.drivernames_1 = 'Lewis Hamilton' AND q.timedurations_8 = (\n    SELECT MIN(q2.timedurations_8)\n    FROM qualifying q2\n    JOIN races r2 ON r2.sequentialnumbers_0 = q2.agevalues_1\n    WHERE r2.numberslist_3 = c.numberslist_0 AND d.sequentialnumbers_0 = q2.numericdata_2\n)\n\n\t----- bird -----\tformula_1",
    "1013": "\nSELECT T2.grandprixnames_4, MIN(T1.timeseconds_4) AS lap_record FROM lapTimes AS T1 JOIN races AS T2 ON T1.allones_0 = T2.sequentialnumbers_0 WHERE T2.grandprixnames_4 = 'Austrian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "1014": "\nSELECT c.racetracks_1, l.timeseconds_4 \nFROM circuits c\nJOIN races r ON c.numberslist_0 = r.numberslist_3\nJOIN lapTimes l ON r.sequentialnumbers_0 = l.allones_0\nWHERE c.countrylist_4 = 'Italy'\nORDER BY l.timeseconds_4 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1015": "\nSELECT r.grandprixnames_4, c.racetracks_1, l.timeseconds_4 \nFROM races r\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nJOIN lapTimes l ON r.sequentialnumbers_0 = l.allones_0 AND l.scoreslist_3 = 1 -- Assuming the fastest lap is recorded as '1'\nWHERE r.grandprixnames_4 LIKE '%Austrian%' AND c.racetracks_1 LIKE '%Austrian%'\nORDER BY l.timeseconds_4 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1016": "\nSELECT ps.timestampcolumn_4, ps.temperaturevalues_5 \nFROM pitStops ps\nJOIN races r ON ps.value_841_0 = r.sequentialnumbers_0\nJOIN drivers d ON ps.idnumbers_1 = d.sequentialnumbers_0\nWHERE r.grandprixnames_4 = 'Austrian Grand Prix' AND r.year_1 IN (\n    SELECT year_1 \n    FROM lapTimes lt\n    JOIN races r2 ON lt.allones_0 = r2.sequentialnumbers_0\n    WHERE r2.grandprixnames_4 = 'Austrian Grand Prix'\n)\nORDER BY ps.timestampcolumn_4 ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1017": "\nSELECT T1.latitudevalues_6, T1.longitudevalues FROM circuits AS T1 JOIN lapTimes AS T2 ON T1.numberslist_0 = T2.allones_1 WHERE T2.timeseconds_4 = '1:29.488'\n\n\t----- bird -----\tformula_1",
    "1018": "\nSELECT AVG(EXTRACT(EPOCH FROM timestamp_column::TIME)) * 1000 AS average_pit_stop_time_ms\nFROM pit_stops ps\nJOIN drivers d ON ps.driver_id = d.sequentialnumbers_0\nJOIN races r ON ps.race_id = r.sequentialnumbers_0\nWHERE d.drivernames_1 = 'Lewis Hamilton' AND timestamp_column IS NOT NULL;\n\n\t----- bird -----\tformula_1",
    "1019": "\nSELECT AVG(l.timeseconds * 1000) AS average_lap_time_ms\nFROM lapTimes l\nJOIN races r ON l.allones_0 = r.sequentialnumbers_0\nJOIN circuits c ON r.numberslist_3 = c.numberslist_0\nWHERE c.countrylist_4 = 'Italy'\n\n\t----- bird -----\tformula_1",
    "1020": "\nSELECT userids_1 FROM player WHERE ratingscore_89 = (SELECT MAX(ratingscore_89) FROM player)\n\n\t----- bird -----\teuropean_football_2",
    "1021": "\nSELECT P.heights_85, P.player_name FROM Player AS P ORDER BY P.heights_85 DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1022": "\nSELECT preferred_foot_when_attacking FROM player WHERE potential = (SELECT MIN(potential) FROM player)\n\n\t----- bird -----\teuropean_football_2",
    "1023": "\nSELECT COUNT(*)\nFROM Player AS P\nJOIN Match AS M ON P.PlayerID = M.PlayerID\nWHERE P.OverallRating BETWEEN 60 AND 65\nAND M.Position NOT IN ('Defender', 'Midfielder')\nGROUP BY P.PlayerID\nHAVING COUNT(DISTINCT M.MatchID) = (SELECT COUNT(*) FROM Match WHERE Position NOT IN ('Defender', 'Midfielder'))\n\n\t----- bird -----\teuropean_football_2",
    "1024": "\nSELECT P.player_id, SUM(CASE WHEN M.action_type = 'Crossing' THEN M.performance ELSE 0 END) AS crossing_performance\nFROM PlayerStats P\nJOIN MatchActions M ON P.match_id = M.match_id AND P.player_id = M.player_id\nGROUP BY P.player_id\nORDER BY crossing_performance DESC\nLIMIT 5;\n\n\t----- bird -----\teuropean_football_2",
    "1025": "\nSELECT L.name FROM league AS L JOIN team AS T ON L.id = T.league_id JOIN match AS M ON T.id = M.home_team_api_id OR T.id = M.away_team_api_id WHERE M.season = '2016' GROUP BY L.name ORDER BY SUM(CASE WHEN M.home_team_api_id = T.id THEN M.fthg ELSE M.ftag END) DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1026": "\nSELECT T2.name, COUNT(*) AS losses\nFROM Match AS T1\nJOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id\nWHERE T1.season = '2016' AND T1.match_result LIKE '%L'\nGROUP BY T2.name\nORDER BY losses ASC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1027": "\nSELECT P.full_name, COUNT(M.penalty_id) AS penalty_count\nFROM Player_Penalties M\nJOIN Players P ON M.player_id = P.player_id\nGROUP BY P.player_id, P.full_name\nORDER BY penalty_count DESC\nLIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1028": "\nSELECT T2.away_team_name, COUNT(*) AS wins\nFROM match_results AS T1\nJOIN teams AS T2 ON T1.away_team_id = T2.team_id\nJOIN leagues AS T3 ON T2.league_id = T3.league_id\nWHERE T3.league_name = 'Scotland Premier League' AND YEAR(T1.match_date) = 2010 AND T1.away_team_score > T1.home_team_score\nGROUP BY T2.away_team_name\nORDER BY wins DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1029": "\nSELECT T1.Team, T1.BuildUpPlaySpeed FROM (\n    SELECT Team, BuildUpPlaySpeed,\n    ROW_NUMBER() OVER (ORDER BY BuildUpPlaySpeed DESC) as rnk\n    FROM TeamAttributes\n) AS T1\nWHERE T1.rnk <= 4\nORDER BY T1.rnk\n\n\t----- bird -----\teuropean_football_2",
    "1030": "\nSELECT L.league_name, COUNT(*) AS draw_count\nFROM Match M\nJOIN League L ON M.league_id = L.league_id\nWHERE M.season = 2016 AND M.result = 'draw'\nGROUP BY L.league_name\nORDER BY draw_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1031": "\nSELECT p.age\nFROM PlayerAttributes pa\nJOIN Players p ON pa.player_api_id = p.id\nWHERE pa.sprint_speed >= 97 AND \nYEAR(pa.date) BETWEEN 2013 AND 2015\nGROUP BY p.age\n\n\t----- bird -----\teuropean_football_2",
    "1032": "\nSELECT L.name, COUNT(M.sequentialnumbers) AS total_matches\nFROM Match M\nJOIN League L ON M.league_id = L.id\nGROUP BY L.name\nORDER BY total_matches DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1033": "\nSELECT AVG(T1.heights_85) \nFROM Player AS T1\nJOIN Match AS T2 ON T1.user_id = T2.player_id\nWHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, T1.birthdate)) BETWEEN 1990 AND 1995;\n\n\t----- bird -----\teuropean_football_2",
    "1034": "\nSELECT P.user_api_id FROM Player AS P JOIN Match AS M ON P.user_api_id = M.player_api_id WHERE M.match_date LIKE '2010%' AND P.overall_rating > (SELECT AVG(overall_rating) FROM Player) ORDER BY P.overall_rating DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1035": "\nSELECT fifa_api_id AS team_fifa_api_id\nFROM team\nWHERE buildUpPlaySpeed BETWEEN 50 AND 60\n\n\t----- bird -----\teuropean_football_2",
    "1036": "\nSELECT T.long_name\nFROM Team AS T\nJOIN Match AS M ON T.id = M.home_team_api_id OR T.id = M.away_team_api_id\nJOIN BuildUpPlayPassing AS BPP ON (M.home_team_api_id = BPP.team_api_id OR M.away_team_api_id = BPP.team_api_id)\nWHERE EXTRACT(YEAR FROM M.date) = 2012 AND BPP.buildUpPlayPassingAtt > (\n    SELECT AVG(buildUpPlayPassingAtt) \n    FROM BuildUpPlayPassing\n    WHERE buildUpPlayPassingAtt IS NOT NULL\n)\nGROUP BY T.long_name\nHAVING COUNT(*) > 0\nORDER BY AVG(BPP.buildUpPlayPassingSuc * 1.0 / BPP.buildUpPlayPassingAtt) DESC;\n\n\t----- bird -----\teuropean_football_2",
    "1037": "\nSELECT CAST(COUNT(CASE WHEN pref_foot = 'Left' THEN player_api_id ELSE NULL END) AS FLOAT) * 100 / COUNT(player_api_id) AS left_foot_percentage\nFROM player\nWHERE date_part('year', age(birth_date)) BETWEEN 1987 AND 1992\n\n\t----- bird -----\teuropean_football_2",
    "1038": "\nSELECT L.league_name, SUM(G.goals) AS total_goals\nFROM Leagues L\nJOIN Teams T ON L.league_id = T.league_id\nJOIN Matches M ON T.team_id = M.home_team_id OR T.team_id = M.away_team_id\nJOIN Goals G ON (M.match_id = G.match_id AND G.player_id IN (SELECT player_id FROM Players WHERE team_id = T.team_id))\nGROUP BY L.league_name\nORDER BY total_goals ASC\nLIMIT 5\n\n\t----- bird -----\teuropean_football_2",
    "1039": "\nSELECT AVG(T2.long_shots)\nFROM player AS T1\nJOIN performance_stats AS T2 ON T1.player_id = T2.player_id\nWHERE T1.name = 'Ahmed Samir Farag';\n\n\t----- bird -----\teuropean_football_2",
    "1040": "\nSELECT p.user_id, p.name, AVG(m.heading_accuracy) AS avg_heading_accuracy\nFROM player AS p\nJOIN match_player AS mp ON p.user_id = mp.player_api_id\nJOIN match AS m ON mp.match_api_id = m.id\nWHERE p.height > 180\nGROUP BY p.user_id, p.name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1041": "\nSELECT T2.name\nFROM Team AS T1\nJOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id\nWHERE T2.buildUpPlayDribbling = 'normal' AND YEAR(T1.date) = 2014\nAND T2.chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes)\nORDER BY T2.chanceCreationPassing DESC\n\n\t----- bird -----\teuropean_football_2",
    "1042": "\nSELECT L.name\nFROM League AS L\nJOIN Match AS M ON L.id = M.league_id\nWHERE M.season = '2009/2010'\nGROUP BY L.id\nHAVING AVG(CASE WHEN M.home_team_goal > M.away_team_goal THEN 1 ELSE 0 END) * 100 / COUNT(*) > 50\n\n\t----- bird -----\teuropean_football_2",
    "1043": "\nSELECT T2.heights_85 FROM Team AS T1 JOIN Match AS T2 ON T1.valueslist_1 = T2.numericdata_7 WHERE T1.measurements_92 = 'Queens Park Rangers' LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1044": "\nSELECT * FROM Player WHERE YEAR(Birthdate) = 1970 AND MONTH(Birthdate) = 10\n\n\t----- bird -----\teuropean_football_2",
    "1045": "\nSELECT T2.attacking_work_rate FROM player AS T1 JOIN player_info AS T2 ON T1.player_id = T2.player_id WHERE T1.name = 'Franco Zennaro'\n\n\t----- bird -----\teuropean_football_2",
    "1046": "\nSELECT T2.thirds_of_pitch FROM TeamFreedomOfMovement AS T1 JOIN TeamThirdsOfPitch AS T2 ON T1.team_id = T2.team_id WHERE T1.team_name = 'ADO Den Haag' AND T2.pitch_third = 'first_two'\n\n\t----- bird -----\teuropean_football_2",
    "1047": "\nSELECT T3.ratingscore_103 \nFROM Team AS T1 \nJOIN Match AS T2 ON T1.TeamID = T2.HomeTeamID OR T1.TeamID = T2.AwayTeamID \nJOIN PlayerPerformance AS T3 ON T2.MatchID = T3.MatchID AND T1.TeamID = T3.TeamID \nWHERE T3.PlayerName = 'Francois Affolter' AND T3.Technique_Headers = 1 AND DATE(T2.MatchDate) = '2014-09-18'\n\n\t----- bird -----\teuropean_football_2",
    "1048": "\nSELECT T3.ratings FROM Match AS T1 JOIN Player AS T2 ON T1.player_id = T2.id JOIN Rating AS T3 ON T1.match_id = T3.match_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\n\n\t----- bird -----\teuropean_football_2",
    "1049": "\nSELECT COUNT(*) FROM Match AS T1 JOIN Team AS T2 ON T1.Team_Home_ID = T2.TeamID JOIN League AS T3 ON T2.League_ID = T3.LeagueID WHERE T3.Country_Name = 'Scotland' AND T3.League_Name = 'Premier League' AND (T1.Season = '2015/2016')\n\n\t----- bird -----\teuropean_football_2",
    "1050": "\nSELECT P.preferred_foot FROM Player AS P JOIN (\n    SELECT MIN(Player.age) as min_age FROM Player\n) AS Subquery ON P.age = Subquery.min_age\n\n\t----- bird -----\teuropean_football_2",
    "1051": "\nSELECT p.user_id, p.potential_score \nFROM Player p\nWHERE p.potential_score = (SELECT MAX(p2.potential_score) FROM Player p2)\nORDER BY p.potential_score DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1052": "\nSELECT COUNT(*) FROM Player WHERE weight < 130 AND preferred_foot = 'left'\n\n\t----- bird -----\teuropean_football_2",
    "1053": "\nSELECT T2.shortname FROM match_event AS T1 JOIN team AS T2 ON T1.teamid = T2.teamid WHERE T1.chancecreationpassingclass = 'Risky'\n\n\t----- bird -----\teuropean_football_2",
    "1054": "\nSELECT T2.ratingscore_103 \nFROM Match AS T1 \nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'David Wilson'\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1055": "\nSELECT T2.heights_106 FROM Match AS T1 JOIN Player AS T2 ON T1.nullvalues_55 = T2.user_id ORDER BY T2.ratings_107 DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1056": "\nSELECT L.name FROM league AS L JOIN country AS C ON L.country_id = C.id WHERE C.name = 'Netherlands'\n\n\t----- bird -----\teuropean_football_2",
    "1057": "\nSELECT AVG(home_team_goal) AS average_home_team_goal\nFROM match\nJOIN team ON match.home_team_api_id = team.team_api_id\nJOIN country ON team.country_id = country.country_id\nWHERE season = '2010/2011' AND country_name = 'Poland'\n\n\t----- bird -----\teuropean_football_2",
    "1058": "\nSELECT P1.name AS tallest_player, P2.name AS shortest_player, AVG(M.measurements_92) as avg_finishing_rate\nFROM Player P1\nJOIN Match M ON P1.userids_1 = M.nullvalues_57\nWHERE P1.heights_85 = (SELECT MAX(heights_85) FROM Player)\nUNION ALL\nSELECT P3.name AS tallest_player, P4.name AS shortest_player, AVG(M.measurements_92) as avg_finishing_rate\nFROM Player P3\nJOIN Match M ON P3.userids_1 = M.nullvalues_60\nWHERE P3.heights_85 = (SELECT MIN(heights_85) FROM Player)\n\n\t----- bird -----\teuropean_football_2",
    "1059": "\nSELECT player_name FROM Player WHERE heights_85 > 180;\n\n\t----- bird -----\teuropean_football_2",
    "1060": "\nSELECT COUNT(*) FROM Player WHERE YEAR(CURDATE()) - AGE(birthdate) > 1990\n\n\t----- bird -----\teuropean_football_2",
    "1061": "\nSELECT COUNT(*) FROM Player WHERE player_name = 'Adam' AND weight > 170;\n\n\t----- bird -----\teuropean_football_2",
    "1062": "\nSELECT P.player_name FROM Player AS P JOIN Match AS M ON P.player_api_id = M.player_api_id WHERE M.date BETWEEN '2008-01-01' AND '2010-12-31' AND P.overall_rating > 80 GROUP BY P.player_name\n\n\t----- bird -----\teuropean_football_2",
    "1063": "\nSELECT T1.potential_score FROM (\n    SELECT NULL AS player_id, NULL AS name, NULL AS position, NULL AS age, NULL AS overall, NULL AS potential_score\n    UNION ALL\n    -- Assuming there is a table or subquery that contains Aaron Doran's data and calculates the potential score.\n    -- For demonstration purposes, we'll assume this information needs to be retrieved from an existing structure.\n    SELECT player_id, name, position, age, overall,\n           (overall + age + position_value) / 3 AS potential_score\n    FROM (\n        SELECT player_id, name, position, age, overall,\n               CASE WHEN position = 'Forward' THEN 85\n                    WHEN position = 'Midfielder' THEN 75\n                    ELSE 60 END AS position_value\n        FROM players -- Assuming there is a table named `players` with relevant columns.\n    ) AS subquery\n) AS T1\nWHERE T1.name = 'Aaron Doran'\n\n\t----- bird -----\teuropean_football_2",
    "1064": "\nSELECT * FROM Player WHERE preferred_foot = 'left'\n\n\t----- bird -----\teuropean_football_2",
    "1065": "\nSELECT T2.name FROM TeamClass AS T1 JOIN Teams AS T2 ON T1.team_id = T2.id WHERE T1.class = 'fast'\n\n\t----- bird -----\teuropean_football_2",
    "1066": "\nSELECT T2.passing_class FROM team AS T1 JOIN player AS T2 ON T1.team_id = T2.team_id WHERE T1.team_name = 'CLB'\n\n\t----- bird -----\teuropean_football_2",
    "1067": "\nSELECT T2.shortname FROM team AS T1 JOIN squad AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > 70\n\n\t----- bird -----\teuropean_football_2",
    "1068": "\nSELECT AVG(T2.ratings) AS average_rating\nFROM MATCHES AS T1\nJOIN PLAYERS AS T2 ON T1.player_id = T2.player_id\nWHERE T2.heights > 170 AND (T1.match_date BETWEEN '2010-01-01' AND '2015-12-31')\nGROUP BY T2.player_id;\n\n\t----- bird -----\teuropean_football_2",
    "1069": "\nSELECT name, heights_85 AS height FROM Player ORDER BY height ASC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1070": "\nSELECT C.country_name FROM league L JOIN country C ON L.country_id = C.id WHERE L.league_name = 'Italy Serie A'\n\n\t----- bird -----\teuropean_football_2",
    "1071": "\nSELECT T2.shortname FROM team_attributes AS T1 JOIN teams AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32\n\n\t----- bird -----\teuropean_football_2",
    "1072": "\nSELECT AVG(measurements_92) AS average_overall_rating \nFROM Player \nJOIN Measure ON Player.user_id = Measure.player_id \nWHERE Player.name = 'Aaron Doran';\n\n\t----- bird -----\teuropean_football_2",
    "1073": "\nSELECT COUNT(*)\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Germany 1. Bundesliga' AND \nm.date BETWEEN '2008-08-01' AND '2008-10-31'\n\n\t----- bird -----\teuropean_football_2",
    "1074": "\nSELECT T2.heights_85 \nFROM Match AS T1\nJOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id\nWHERE T1.home_team_goal = 10\nGROUP BY T2.team_short_name\n\n\t----- bird -----\teuropean_football_2",
    "1075": "\nSELECT p.*\nFROM Player AS p\nJOIN (\n    SELECT user_id, MAX(balance_score) AS max_balance_score\n    FROM Player_Statistics\n    GROUP BY user_id\n) AS ps ON p.user_id = ps.user_id AND p.potential_score = 61\nWHERE ps.max_balance_score = (SELECT MAX(max_balance_score) FROM (SELECT user_id, MAX(balance_score) AS max_balance_score FROM Player_Statistics WHERE potential_score = 61 GROUP BY user_id) AS subquery)\n\n\t----- bird -----\teuropean_football_2",
    "1076": "\nSELECT (SELECT AVG(ball_control) FROM player_stats WHERE player_name = 'Abdou Diallo') - \n       (SELECT AVG(ball_control) FROM player_stats WHERE player_name = 'Aaron Appindangoye') AS difference\nFROM dual;\n\n\t----- bird -----\teuropean_football_2",
    "1077": "\nSELECT Team_Name FROM Teams WHERE Abbreviation = 'GEN'\n\n\t----- bird -----\teuropean_football_2",
    "1078": "\nSELECT player_name, age FROM (\n    SELECT 'Aaron Lennon' AS player_name, (YEAR(CURRENT_DATE) - YEAR(birth_year)) - (RIGHT(CAST(birth_year AS CHAR), 5) < RIGHT(CAST(CURRENT_DATE AS CHAR), 5)) AS age\n    UNION ALL\n    SELECT 'Abdelaziz Barrada' AS player_name, (YEAR(CURRENT_DATE) - YEAR(birth_year)) - (RIGHT(CAST(birth_year AS CHAR), 5) < RIGHT(CAST(CURRENT_DATE AS CHAR), 5)) AS age\n) AS players_info\nORDER BY age DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1079": "\nSELECT heights_85, player_id FROM Player ORDER BY heights_85 DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1080": "\nSELECT COUNT(*)\nFROM Player AS P\nJOIN Team_Attack_Position AS TAP ON P.PlayerID = TAP.PlayerID\nWHERE P.PreferredFoot = 'Left' AND TAP.PositionChange = 'Stay'\n\n\t----- bird -----\teuropean_football_2",
    "1081": "\nSELECT T2.country_name FROM league AS T1 JOIN country AS T2 ON T1.country_id = T2.id WHERE T1.name = 'Belgium Jupiler League'\n\n\t----- bird -----\teuropean_football_2",
    "1082": "\nSELECT league_name FROM leagues WHERE country = 'Germany'\n\n\t----- bird -----\teuropean_football_2",
    "1083": "\nSELECT player_name FROM Player WHERE overall_strength = (SELECT MAX(overall_strength) FROM Player)\n\n\t----- bird -----\teuropean_football_2",
    "1084": "\nSELECT COUNT(T1.user_id) \nFROM Player AS T1\nJOIN Match AS T2 ON T1.user_id = T2.player_id\nJOIN Team AS T3 ON T2.team_id = T3.team_id\nWHERE YEAR(T1.birth_date) < 1986 AND T2.position_type = 'Defender' AND T2.defensive_role = 'Remain'\n\n\t----- bird -----\teuropean_football_2",
    "1085": "\nSELECT player_name, AVG(crossing) AS avg_crossing\nFROM player_stats\nWHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nGROUP BY player_name\nORDER BY avg_crossing DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1086": "\nSELECT T1.heading_accuracy FROM player_stats AS T1 JOIN players AS T2 ON T1.player_id = T2.player_id WHERE T2.name = 'Ariel Borysiuk'\n\n\t----- bird -----\teuropean_football_2",
    "1087": "\nSELECT COUNT(*) FROM Player WHERE heights_85 > 180 AND ratingscore_89 > 70;\n\n\t----- bird -----\teuropean_football_2",
    "1088": "\nSELECT P.user_name FROM Player AS P JOIN Player_Stats AS PS ON P.player_id = PS.player_id WHERE PS.volley_score > 70 AND PS.dribbling_score > 70;\n\n\t----- bird -----\teuropean_football_2",
    "1089": "\nSELECT COUNT(*) FROM Match AS T1 JOIN Team AS T2 ON T1.TeamHome = T2.TeamID JOIN Country AS T3 ON T2.Country = T3.CountryID WHERE T3.Name = 'Belgium' AND T1.Season = '2008/2009'\n\n\t----- bird -----\teuropean_football_2",
    "1090": "\nSELECT T1.long_passing FROM Player AS T1 JOIN (\n    SELECT MAX(age) AS max_age FROM Player\n) AS T2 ON T1.age = T2.max_age\n\n\t----- bird -----\teuropean_football_2",
    "1091": "\nSELECT COUNT(*) FROM MATCHES M JOIN TEAMS T ON M.HOME_TEAM_API_ID = T.TEAM_API_ID OR M.AWAY_TEAM_API_ID = T.TEAM_API_ID JOIN LEAGUES L ON T.LEAGUE_ID = L.LEAGUE_ID WHERE (M.DATE LIKE '2009-04-%') AND L.NAME = 'Belgium Jupiler League'\n\n\t----- bird -----\teuropean_football_2",
    "1092": "\nSELECT L.league_name, COUNT(M.match_id) AS match_count\nFROM Match M\nJOIN League L ON M.league_id = L.league_id\nWHERE M.season = '2008/2009'\nGROUP BY L.league_name\nORDER BY match_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1093": "\nSELECT AVG(T1.ratingscore_89) \nFROM Player AS T1 \nJOIN Match AS T2 ON T1.userids = T2.nullvalues_55 OR T1.userids = T2.nullvalues_56 OR T1.userids = T2.nullvalues_57 OR T1.userids = T2.nonevalues_58 OR T1.userids = T2.nonevalues_59 OR T1.userids = T2.nullvalues_60 OR T1.userids = T2.nullvalues_61 OR T1.userids = T2.nullvalues_62 OR T1.userids = T2.nullvalues_63 OR T1.userids = T2.nullvalues_64 OR T1.userids = T2.nullvalues_65 OR T1.userids = T2.nullvalues_66 OR T1.userids = T2.nullvalues_67 OR T1.userids = T2.nullvalues_68 OR T1.userids = T2.nullvalues_69 OR T1.userids = T2.nullvalues_70 OR T1.userids = T2.nullvalues_71 OR T1.userids = T2.nullvalues_72 OR T1.userids = T2.nullvalues_73 OR T1.userids = T2.nullvalues_74 OR T1.userids = T2.nullvalues_75 OR T1.userids = T2.nullvalues_76\nWHERE DATE_PART('year', AGE(T1.birthdate)) < 37;\n\n\t----- bird -----\teuropean_football_2",
    "1094": "\nSELECT (p1.ratings - p2.ratings) / p2.ratings * 100 AS percentage_difference\nFROM (\n    SELECT ratings\n    FROM Player\n    WHERE name = 'Ariel Borysiuk'\n) p1,\n(\n    SELECT ratings\n    FROM Player\n    WHERE name = 'Paulin Puel'\n) p2\n\n\t----- bird -----\teuropean_football_2",
    "1095": "\nSELECT AVG(T2.buildUpPlaySpeed)\nFROM Team AS T1\nJOIN PlayerAttributes AS T2 ON T1.TeamID = T2.TeamID\nWHERE T1.Name = 'Heart of Midlothian'\nGROUP BY T1.TeamID;\n\n\t----- bird -----\teuropean_football_2",
    "1096": "\nSELECT AVG(T1.ratings_86) AS average_overall_rating\nFROM Match AS T1\nJOIN Player AS T2 ON T1.nullvalues_55 = T2.user_id\nWHERE T2.name = 'Pietro Marino'\nGROUP BY T2.name;\n\n\t----- bird -----\teuropean_football_2",
    "1097": "\nSELECT SUM(crossing) AS total_crossing_score \nFROM player_stats ps\nJOIN players p ON ps.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Lennox'\n\n\t----- bird -----\teuropean_football_2",
    "1098": "\nSELECT MAX(T1.passing_score), T2.classification_name \nFROM Player AS T1 \nJOIN PassingClassification AS T2 ON T1.player_classification_id = T2.classification_id \nWHERE T1.player_name = 'Ajax'\n\n\t----- bird -----\teuropean_football_2",
    "1099": "\nSELECT foot FROM player WHERE name = 'Abdou Diallo'\n\n\t----- bird -----\teuropean_football_2",
    "1100": "\nSELECT MAX(T1.ratings) AS Highest_Rating FROM Player AS T1 JOIN Match AS T2 ON T1.user_id = T2.player_id WHERE T1.name = 'Dorlan Pabon'\n\n\t----- bird -----\teuropean_football_2",
    "1101": "\nSELECT AVG(T1.nullvalues_75) AS average_goals\nFROM Match AS T1\nJOIN Team AS T2 ON T1.userids_8 = T2.valueslist_1\nJOIN Country AS T3 ON T2.country_id = T3.id\nWHERE T3.name = 'Italy' AND T2.name = 'Parma' AND T1.nullvalues_76 = 'away'\n\n\t----- bird -----\teuropean_football_2",
    "1102": "\nSELECT P.name FROM Player AS P JOIN Match AS M ON P.id = M.player_id WHERE M.date = '2016-06-23' AND P.overall_rating = 77 ORDER BY P.age DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1103": "\nSELECT T1.ratingscore_89 FROM Match AS T1 JOIN Player AS T2 ON T1.nullvalues_57 = T2.user_id WHERE T2.name = 'Aaron Mooy' AND DATE(T1.nullvalues_76) = '2016-02-04'\n\n\t----- bird -----\teuropean_football_2",
    "1104": "\nSELECT T2.potential FROM Matches AS T1 JOIN Players AS T2 ON T1.player_id = T2.player_id WHERE T2.name = 'Francesco Parravicini' AND DATE(T1.date) = '2010-08-30'\n\n\t----- bird -----\teuropean_football_2",
    "1105": "\nSELECT T2.attacking_work_rate FROM match AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name = 'Francesco Migliore' AND DATE_FORMAT(T1.date, '%Y/%m/%d') = '2015/5/1'\n\n\t----- bird -----\teuropean_football_2",
    "1106": "\nSELECT T1.defense_work_rate FROM Player_Attributes AS T1 JOIN Players AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Berigaud' AND T1.date = '2013-02-22'\n\n\t----- bird -----\teuropean_football_2",
    "1107": "\nSELECT T2.date_of_match AS Date\nFROM (\n    SELECT MAX(T1.crossing) AS highest_crossing, player_api_id\n    FROM player_stats AS T1\n    JOIN player AS T2 ON T1.player_api_id = T2.player_api_id\n    WHERE player_name = 'Kevin Constant'\n    GROUP BY player_api_id\n) AS T1\nJOIN match AS T2 ON T1.player_api_id = T2.home_player_1\nWHERE T2.home_player_X_1 = (SELECT MAX(crossing) FROM player_stats WHERE player_api_id = (\n    SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'\n))\nUNION ALL\nSELECT T2.date_of_match AS Date\nFROM (\n    SELECT MAX(T1.crossing) AS highest_crossing, player_api_id\n    FROM player_stats AS T1\n    JOIN player AS T2 ON T1.player_api_id = T2.player_api_id\n    WHERE player_name = 'Kevin Constant'\n    GROUP BY player_api_id\n) AS T1\nJOIN match AS T2 ON T1.player_api_id = T2.away_player_1\nWHERE T2.away_player_X_1 = (SELECT MAX(crossing) FROM player_stats WHERE player_api_id = (\n    SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'\n))\nORDER BY Date ASC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1108": "\nSELECT build_up_play_speed_class FROM team_attributes WHERE team_api_id = (SELECT team_api_id FROM team WHERE name = \"Willem II\") AND date = \"2011-02-22\"\n\n\t----- bird -----\teuropean_football_2",
    "1109": "\nSELECT build_up_play_dribbling FROM player_attributes WHERE team_api_id = (SELECT team_api_id FROM team WHERE name = \"LEI\") AND date = \"2015-09-10\"\n\n\t----- bird -----\teuropean_football_2",
    "1110": "\nSELECT m.buildUpPlayPassing\nFROM Match m\nJOIN Team t ON m.homeTeamId = t.team_api_id OR m.awayTeamId = t.team_api_id\nWHERE (m.homeTeamId = (\n    SELECT team_api_id\n    FROM Team\n    WHERE team_long_name = 'FC Lorient'\n) OR m.awayTeamId = (\n    SELECT team_api_id\n    FROM Team\n    WHERE team_long_name = 'FC Lorient'\n)) AND m.date = '2010-02-22'\n\n\t----- bird -----\teuropean_football_2",
    "1111": "\nSELECT chance_creation_passing_class FROM Team WHERE team_name = \"PEC Zwolle\" AND date = \"2013-09-20\"\n\n\t----- bird -----\teuropean_football_2",
    "1112": "\nSELECT T1.chance_creation_crossing FROM team AS T1 JOIN match AS T2 ON T1.team_api_id = T2.home_team_api_id WHERE T1.team_long_name = 'Hull City' AND DATE(T2.match_date) = '2010-02-22'\nUNION\nSELECT T1.chance_creation_crossing FROM team AS T1 JOIN match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T1.team_long_name = 'Hull City' AND DATE(T2.match_date) = '2010-02-22'\n\n\t----- bird -----\teuropean_football_2",
    "1113": "\nSELECT T2.defense_aggression_class FROM match AS T1 JOIN team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND DATE(T1.date) = '2015-09-10'\n\n\t----- bird -----\teuropean_football_2",
    "1114": "\nSELECT AVG(measurements_92) AS average_rating\nFROM Match\nJOIN Player ON Match.player_id = Player.id\nWHERE Player.name = 'Marko Arnautovic'\nAND Match.date BETWEEN '2007-02-22' AND '2016-04-21';\n\n\t----- bird -----\teuropean_football_2",
    "1115": "\nSELECT ((MAX(CASE WHEN p.name = 'Landon Donovan' THEN m.overall_rating ELSE NULL END) - MAX(CASE WHEN p.name = 'Jordan Bowery' THEN m.overall_rating ELSE NULL END)) / MAX(CASE WHEN p.name = 'Jordan Bowery' THEN m.overall_rating ELSE NULL END)) * 100 AS percentage_difference\nFROM match_player AS mp\nJOIN player AS p ON mp.player_api_id = p.player_api_id\nJOIN match AS m ON mp.match_api_id = m.match_api_id\nWHERE m.date LIKE '2013-7-12%'\nGROUP BY m.match_api_id\n\n\t----- bird -----\teuropean_football_2",
    "1116": "\nSELECT p.user_id, t.heights_85 AS height FROM Player p JOIN Match m ON p.user_id = m.nullvalues_60 OR p.user_id = m.nullvalues_61 OR p.user_id = m.nullvalues_62 OR p.user_id = m.nonevalues_58 OR p.user_id = m.nonevalues_59 OR p.user_id = m.nullvalues_60 OR p.user_id = m.nullvalues_61 OR p.user_id = m.nullvalues_62 OR p.user_id = m.nullvalues_63 OR p.user_id = m.nullvalues_64 OR p.user_id = m.nullvalues_65 OR p.user_id = m.nullvalues_66 OR p.user_id = m.nullvalues_67 OR p.user_id = m.nullvalues_68 OR p.user_id = m.nullvalues_69 OR p.user_id = m.nullvalues_70 OR p.user_id = m.nullvalues_71 OR p.user_id = m.nullvalues_72 OR p.user_id = m.nullvalues_73 OR p.user_id = m.nullvalues_74 OR p.user_id = m.nullvalues_75 OR p.user_id = m.nullvalues_76 JOIN Team t ON m.numericdata_7 = t.valueslist_1 ORDER BY height DESC LIMIT 5;\n\n\t----- bird -----\teuropean_football_2",
    "1117": "\nSELECT userids_1 FROM player ORDER BY heights DESC LIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1118": "\nSELECT name FROM player WHERE age >= 35\n\n\t----- bird -----\teuropean_football_2",
    "1119": "\nSELECT SUM(CASE WHEN M.name = 'Aaron Lennon' THEN T1.nullvalues_76 ELSE 0 END) AS home_team_goals\nFROM Match AS M\nJOIN Team AS T1 ON M.home_team_api_id = T1.team_api_id\nJOIN Player AS P ON T1.nullvalues_76 = P.player_api_id\nWHERE P.player_name = 'Aaron Lennon'\n\n\t----- bird -----\teuropean_football_2",
    "1120": "\nSELECT SUM(T2.away_goal) AS total_away_goals\nFROM match AS T1\nJOIN player_statistic AS T2 ON T1.season_id = T2.season_id AND T1.match_id = T2.match_id\nWHERE T2.player_name IN ('Daan Smith', 'Filipe Ferreira')\n\n\t----- bird -----\teuropean_football_2",
    "1121": "\nSELECT SUM(T2.home_goal) AS total_home_goals\nFROM player AS T1\nJOIN match AS T2 ON T1.player_api_id = T2.home_player_1 OR T1.player_api_id = T2.home_player_2 OR T1.player_api_id = T2.home_player_3 OR T1.player_api_id = T2.home_player_4 OR T1.player_api_id = T2.home_player_5 OR T1.player_api_id = T2.home_player_6 OR T1.player_api_id = T2.home_player_7 OR T1.player_api_id = T2.home_player_8 OR T1.player_api_id = T2.home_player_9 OR T1.player_api_id = T2.home_player_10 OR T1.player_api_id = T2.home_player_11\nWHERE T1.age <= 30;\n\n\t----- bird -----\teuropean_football_2",
    "1122": "\nSELECT p.user_id, p.rating_score FROM player_stats AS p ORDER BY p.rating_score DESC LIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1123": "\nSELECT P1.user_id, P1.name FROM Player AS P1 JOIN Match AS M ON P1.user_id = M.player_id WHERE M.potential = (SELECT MAX(potential) FROM Match) GROUP BY P1.user_id, P1.name\n\n\t----- bird -----\teuropean_football_2",
    "1124": "\nSELECT DISTINCT P1.name\nFROM Player AS P1\nJOIN Match AS M ON P1.id = M.player_id\nWHERE M.action_type = 'attack' AND EXISTS (\n    SELECT 1\n    FROM Match AS M2\n    WHERE M2.match_id = M.match_id AND M2.action_type = 'mate_attack_move'\n)\n\n\t----- bird -----\teuropean_football_2",
    "1125": "\nSELECT P2.name FROM (\n    SELECT user_id, MAX(heights_85) AS max_height \n    FROM Match AS M1 \n    JOIN Player AS P1 ON M1.user_id = P1.user_id \n    WHERE P1.finishing_rate = 1 \n    GROUP BY M1.user_id\n) AS T1 \nJOIN Player AS P2 ON T1.user_id = P2.user_id \nWHERE P2.heights_85 = T1.max_height\n\n\t----- bird -----\teuropean_football_2",
    "1126": "\nSELECT P1.name FROM player AS P1 JOIN country AS C1 ON P1.country_id = C1.id WHERE C1.name = 'Belgium'\n\n\t----- bird -----\teuropean_football_2",
    "1127": "\nSELECT P.player_name, C.country_name\nFROM Player AS P\nJOIN Country AS C ON P.country_id = C.country_id\nWHERE P.vision_score >= 90;\n\n\t----- bird -----\teuropean_football_2",
    "1128": "\nSELECT c.country_name, AVG(p.heights_106) AS average_weight\nFROM Player p\nJOIN Team t ON p.user_id = t.player_id\nJOIN Country c ON t.country_id = c.id\nGROUP BY c.country_name\nORDER BY average_weight DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1129": "\nSELECT T2.long_name FROM team AS T1 JOIN player AS T2 ON T1.player_id = T2.user_id WHERE T1.speed_class = 'slow'\n\n\t----- bird -----\teuropean_football_2",
    "1130": "\nSELECT T2.short_name FROM Team_Strategy AS T1 JOIN Teams AS T2 ON T1.team_id = T2.team_id WHERE T1.strategy_type = 'safe' AND T1.chance_of_passing > 0\n\n\t----- bird -----\teuropean_football_2",
    "1131": "\nSELECT AVG(T1.heights_85) \nFROM Player AS T1 \nJOIN Team AS T2 ON T1.userids_1 = T2.nullvalues_55 OR T1.userids_1 = T2.nullvalues_56 OR T1.userids_1 = T2.nullvalues_57 OR T1.userids_1 = T2.nonevalues_58 OR T1.userids_1 = T2.nonevalues_59 OR T1.userids_1 = T2.nullvalues_60 OR T1.userids_1 = T2.nullvalues_61 OR T1.userids_1 = T2.nullvalues_62 OR T1.userids_1 = T2.nullvalues_63 OR T1.userids_1 = T2.nullvalues_64 OR T1.userids_1 = T2.nullvalues_65 OR T1.userids_1 = T2.nullvalues_66 OR T1.userids_1 = T2.nullvalues_67 OR T1.userids_1 = T2.nullvalues_68 OR T1.userids_1 = T2.nullvalues_69 OR T1.userids_1 = T2.nullvalues_70 OR T1.userids_1 = T2.nullvalues_71 OR T1.userids_1 = T2.nullvalues_72 OR T1.userids_1 = T2.nullvalues_73 OR T1.userids_1 = T2.nullvalues_74 OR T1.userids_1 = T2.nullvalues_75 OR T1.userids_1 = T2.nullvalues_76\nJOIN Country AS T3 ON T2.nullvalues_80 = T3.country_id\nWHERE T3.name = 'Italy';\n\n\t----- bird -----\teuropean_football_2",
    "1132": "\nSELECT player_name FROM Player WHERE heights > 180 ORDER BY player_name ASC LIMIT 3\n\n\t----- bird -----\teuropean_football_2",
    "1133": "\nSELECT COUNT(*) FROM Player WHERE first_name = 'Aaron' AND birth_year > 1990;\n\n\t----- bird -----\teuropean_football_2",
    "1134": "\nSELECT (t1.ratingscore_89 - t2.ratingscore_89) AS score_difference\nFROM Player AS t1, Player AS t2\nWHERE t1.userids = 6 AND t2.userids = 23\n\n\t----- bird -----\teuropean_football_2",
    "1135": "\nSELECT TOP 3 p.player_id\nFROM Players p\nJOIN PlayerAttributes pa ON p.player_id = pa.player_id\nWHERE pa.preferred_foot = 'Right' AND p.potential IN (\n    SELECT MIN(potential)\n    FROM Players\n)\nORDER BY p.potential ASC, pa.attack_work_rate DESC\n\n\t----- bird -----\teuropean_football_2",
    "1136": "\nSELECT COUNT(*)\nFROM Player AS P\nJOIN PotentialScore AS PS ON P.id = PS.player_id\nWHERE PS.crossing = (SELECT MAX(crossing) FROM PotentialScore)\nAND P.preferred_foot = 'Left'\nAND P.attacking_work_rate LIKE '%Low%' OR P.attacking_work_rate LIKE '%Medium%'\n\n\t----- bird -----\teuropean_football_2",
    "1137": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM Player) * 100 \nFROM Player \nWHERE strength_and_stamina_score > 80;\n\n\t----- bird -----\teuropean_football_2",
    "1138": "\nSELECT C.country_name \nFROM Country AS C\nJOIN League AS L ON C.id = L.country_id\nWHERE L.name = 'Poland Ekstraklasa'\n\n\t----- bird -----\teuropean_football_2",
    "1139": "\nSELECT home_team_score, away_team_score \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE date = '2008-09-24' AND league_name = 'Belgian Jupiler'\n\n\t----- bird -----\teuropean_football_2",
    "1140": "\nSELECT T2.sprint_speed, T2.agility, T2.acceleration \nFROM Player AS T1 \nJOIN Player_Stats AS T2 ON T1.player_id = T2.player_id \nWHERE T1.name = 'Alexis Blin';\n\n\t----- bird -----\teuropean_football_2",
    "1141": "\nSELECT T2.speed_class FROM Team AS T1 JOIN PlayerAttributes AS T2 ON T1.TeamID = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge' AND T2.player_api_id IN (SELECT player_api_id FROM Player WHERE player_name LIKE '%Cercle Brugge%')\n\n\t----- bird -----\teuropean_football_2",
    "1142": "\nSELECT COUNT(*) FROM Matches WHERE league_id = (SELECT id FROM Leagues WHERE name = 'Serie A' AND country = 'Italy') AND season = '2015-2016'\n\n\t----- bird -----\teuropean_football_2",
    "1143": "\nSELECT MAX(T1.ratingscore_103) AS HighestHomeTeamScore\nFROM Match T1\nJOIN Team T2 ON T1.nullvalues_55 = T2.userids_1\nJOIN League T3 ON T2.league_id = T3.id\nWHERE T3.name = 'Netherlands Eredivisie' AND T1.nullvalues_55 IS NOT NULL\nGROUP BY T1.nullvalues_55;\n\n\t----- bird -----\teuropean_football_2",
    "1144": "\nSELECT T2.heights_106, T2.ratingscore_103 FROM Player AS T1 JOIN Match AS T2 ON T1.user_id = T2.nullvalues_55 ORDER BY T1.weight DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1145": "\nSELECT L.name, COUNT(M.match_id) AS game_count\nFROM league L\nJOIN team T1 ON L.league_id = T1.league_id\nJOIN match M ON T1.team_id = M.home_team_api_id OR T1.team_id = M.away_team_api_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY game_count DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1146": "\nSELECT T2.full_name FROM (\n    SELECT nullvalues_76 AS team_id, SUM(nullvalues_109) AS total_goals\n    FROM MATCHES\n    GROUP BY nullvalues_76\n) AS T1\nJOIN TEAMS AS T2 ON T1.team_id = T2.id\nORDER BY T1.total_goals DESC\nLIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1147": "\nSELECT player_name FROM Player ORDER BY overall_strength DESC LIMIT 1\n\n\t----- bird -----\teuropean_football_2",
    "1148": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM Player WHERE heights_106 < 180) * 100 \nFROM Player \nWHERE heights_106 < 180 AND ratingscore_103 > 70\n\n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT \n    CASE \n        WHEN male_inpatients > male_outpatients THEN 'More in-patients'\n        ELSE 'More out-patients'\n    END AS patient_type,\n    ABS((male_inpatients - male_outpatients) * 100.0 / (male_inpatients + male_outpatients)) AS percentage_deviation\nFROM (\n    SELECT \n        SUM(CASE WHEN statuscodes_8 = 'Inpatient' AND gendercode_1 = 'M' THEN 1 ELSE 0 END) AS male_inpatients,\n        SUM(CASE WHEN statuscodes_8 = 'Outpatient' AND gendercode_1 = 'M' THEN 1 ELSE 0 END) AS male_outpatients\n    FROM Patient JOIN Examination ON Patient.userids_0 = Examination.userids_0\n) AS patient_counts;\n\n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(COUNT(CASE WHEN gendercode_1 = 'F' THEN 1 END) AS FLOAT) / COUNT(*) * 100 \nFROM Patient \nWHERE dateofbirth_2 > '1930-01-01'\nAND gendercode_1 = 'F';\n\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\nSELECT CAST(COUNT(CASE WHEN E.statuscodes_8 = 'inpatient' THEN P.userids_0 END) AS REAL) * 100 / COUNT(P.userids_0) AS percentage_inpatient\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE EXTRACT(YEAR FROM P.dateofbirth_2) BETWEEN 1930 AND 1940\n\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT \n    SUM(CASE WHEN statuscodes_8 = 'outpatient' THEN 1 ELSE 0 END) / \n    (SUM(CASE WHEN statuscodes_8 = 'inpatient' THEN 1 ELSE 0 END) + \n     SUM(CASE WHEN statuscodes_8 = 'outpatient' THEN 1 ELSE 0 END)) AS outpatient_to_inpatient_ratio\nFROM Examination\nWHERE diseasesandconditions_7 LIKE '%SLE%';\n\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nSELECT P.diseases_6, L.datecolumn_1 \nFROM Patient P \nJOIN Laboratory L ON P.userids_0 = L.user_id_0 \nWHERE P.userids_0 = 30609;\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nSELECT P.gendercode_1, P.dateofbirth_2, E.datecolumn_1, E.diseasesandconditions_7 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE P.userids_0 = 163109;\n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%LDH beyond normal range%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT P.userids_0, EXTRACT(YEAR FROM AGE(P.dateofbirth_2)) AS age\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%positive degree of coagulation%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT P.userids_0, P.gendercode_1, E.diseasesandconditions_7 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE E.diseasesandconditions_7 LIKE '%thrombosis%' AND E.statuscodes_8 = 'severe';\n\n\t----- bird -----\tthrombosis_prediction",
    "1158": "\nSELECT P.userids_0, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE YEAR(P.dateofbirth_2) = 1937 AND E.valueslist_2 > 200 OR E.scoresdata_3 > 200;\n\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT P.userids_0, P.gendercode_1, P.diseases_6 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 < 3.5;\n\n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(COUNT(P.userids_0) AS FLOAT) / (SELECT COUNT(*) FROM Patient WHERE gendercode_1 = 'F') * 100 \nFROM Patient P \nJOIN Examination E ON P.userids_0 = E.userids_0 \nWHERE P.gendercode_1 = 'F' AND E.valueslist_2 NOT BETWEEN 6.4 AND 8.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(E.valueslist_2) AS average_antibody_concentration\nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE P.dateofbirth_2 <= DATE_SUB(CURDATE(), INTERVAL 50 YEAR)\nAND E.diseasesandconditions_7 LIKE '%anti-cardiolipin antibody (IgG)%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'F' AND EXTRACT(YEAR FROM E.datecolumn_1) = 1997 AND EXISTS (\n    SELECT 1\n    FROM Laboratory L\n    WHERE L.user_id_0 = P.userids_0 AND L.datecolumn_1 > E.datecolumn_1 AND L.datecolumn_1 < (E.datecolumn_1 + INTERVAL '1 DAY')\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT MIN(dateofbirth_2) AS youngest_patient_birthdate FROM Patient\n\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(P.gendercode_1) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.datecolumn_1 BETWEEN '1997-01-01' AND '1997-12-31'\nAND E.diseasesandconditions_7 LIKE '%thrombosis%'\nAND P.gendercode_1 = 'F'\nORDER BY E.scoresdata_3 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MAX(P.dateofbirth_2) - MIN(P.dateofbirth_2) AS age_gap\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal triglyceride%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT P.gendercode_1, P.dateofbirth_2, E.diseasesandconditions_7 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE P.dateofbirth_2 = (\n    SELECT MIN(dateofbirth_2) \n    FROM Patient\n)\nORDER BY P.dateofbirth_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT MONTH(L.datecolumn_1) AS month, COUNT(DISTINCT L.user_id_0) AS male_patients_count\nFROM Laboratory L\nJOIN Patient P ON L.user_id_0 = P.userids_0\nWHERE YEAR(L.datecolumn_1) = 1998 AND P.gendercode_1 = 'M'\nGROUP BY MONTH(L.datecolumn_1)\nORDER BY month;\n\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT P.dateofbirth_2, L.datecolumn_1 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nJOIN Laboratory AS L ON P.userids_0 = L.user_id_0\nWHERE E.diseasesandconditions_7 LIKE '%SJS%'\nORDER BY TIMESTAMPDIFF(YEAR, P.dateofbirth_2, CURRENT_DATE) DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1169": "\nSELECT \n    SUM(CASE WHEN p.gendercode_1 = 'M' THEN 1 ELSE 0 END) / \n    SUM(CASE WHEN p.gendercode_1 = 'F' THEN 1 ELSE 0 END) AS male_to_female_ratio\nFROM \n    Patient p\nJOIN \n    Examination e ON p.userids_0 = e.userids_0\nWHERE \n    e.diseasesandconditions_7 LIKE '%abnormal uric acid count%' AND \n    (p.gendercode_1 = 'M' OR p.gendercode_1 = 'F')\n\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nLEFT JOIN Examination E ON P.userids_0 = E.userids_0 AND E.datecolumn_1 >= DATEADD(year, 1, P.dateofbirth_2)\nWHERE E.userids_0 IS NULL;\n\n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.dateofbirth_2 > '1987-01-01' AND P.dateofbirth_2 < '1994-01-01'\nAND E.datecolumn_1 BETWEEN '1990-01-01' AND '1993-12-31';\n\n\t----- bird -----\tthrombosis_prediction",
    "1172": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%elevated total bilirubin%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT diseases_6, COUNT(*) AS count_of_diseases\nFROM Patient p\nJOIN Laboratory l ON p.userids_0 = l.user_id_0\nJOIN Examination e ON p.userids_0 = e.userids_0\nWHERE l.datecolumn_1 BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY diseases_6\nORDER BY count_of_diseases DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT AVG(L.agevalues_2) AS average_age\nFROM Laboratory L\nJOIN Examination E ON L.user_id_0 = E.userids_0\nWHERE EXTRACT(YEAR FROM L.datecolumn_1) = 1991 AND EXTRACT(MONTH FROM L.datecolumn_1) = 10\n\n\t----- bird -----\tthrombosis_prediction",
    "1175": "\nSELECT P.dateofbirth_2, E.diseasesandconditions_7 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 = (SELECT MAX(valueslist_2) FROM Examination)\n\n\t----- bird -----\tthrombosis_prediction",
    "1176": "\nSELECT valueslist_2 FROM Examination WHERE userids_0 = 3605340 AND datecolumn_1 = '1996-12-02' AND diseasesandconditions_7 LIKE '%anti-nucleus antibody%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1177": "\nSELECT CASE WHEN statuscodes_8 = 'Normal' THEN 'Yes' ELSE 'No' END AS normal_level\nFROM Examination\nWHERE userids_0 = 2927464 AND datecolumn_1 = '1995-09-04';\n\n\t----- bird -----\tthrombosis_prediction",
    "1178": "\nSELECT P.gendercode_1 FROM Patient AS P JOIN Examination AS E ON P.userids_0 = E.userids_0 WHERE E.diseasesandconditions_7 = 'AORTITIS' LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT L.temperaturedata_3, E.statuscodes_8 \nFROM Patient P \nJOIN Examination E ON P.userids_0 = E.userids_0 \nJOIN Laboratory L ON P.userids_0 = L.user_id_0 \nWHERE P.diseases_6 LIKE '%SLE%' AND E.datecolumn_1 = '1994-02-19' AND L.datecolumn_1 = '1993-11-12'\n\n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT P.gendercode_1 FROM Patient AS P JOIN Examination AS E ON P.userids_0 = E.userids_0 WHERE E.datecolumn_1 = '1992-06-12' AND E.statuscodes_8 = '9' AND E.medicalabbreviations_11 LIKE '%ALT%' OR E.diseasesandconditions_7 LIKE '%ALT%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT EXTRACT(YEAR FROM datecolumn_1) - EXTRACT(YEAR FROM dateofbirth_2) - \n    (CASE WHEN (EXTRACT(MONTH FROM datecolumn_1), EXTRACT(DAY FROM datecolumn_1)) < (EXTRACT(MONTH FROM dateofbirth_2), EXTRACT(DAY FROM dateofbirth_2)) THEN 1 ELSE 0 END) AS age\nFROM Laboratory L JOIN Patient P ON L.user_id_0 = P.userids_0\nWHERE L.datecolumn_1 = '1991-10-21' AND temperaturedata_3 = 8.4;\n\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT COUNT(*) \nFROM Laboratory L JOIN Patient P ON L.user_id_0 = P.userids_0\nWHERE P.datecolumn_3 = '1991-06-13' AND P.diseases_6 LIKE '%SJS%' AND YEAR(L.datecolumn_1) = 1995\n\n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT P.diseases_6 FROM Patient AS P JOIN Examination AS E ON P.userids_0 = E.userids_0 WHERE E.datecolumn_1 = '1997-01-27' AND E.diseasesandconditions_7 = 'SLE'\n\n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT T1.diseasesandconditions_7 \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0 \nWHERE T2.dateofbirth_2 = '1959-03-01' AND T1.datecolumn_1 = '1993-09-27'\n\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT E2.valueslist_2 - E1.valueslist_2 AS decrease_rate\nFROM Examination E1\nJOIN Patient P ON E1.userids_0 = P.userids_0\nJOIN Examination E2 ON E2.userids_0 = P.userids_0\nWHERE P.dateofbirth_2 = '1959-02-18'\nAND E1.datecolumn_1 = '1981-11-01'\nAND E2.datecolumn_1 = '1981-12-01';\n\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT P.userids_0 FROM Patient AS P JOIN Examination AS E ON P.userids_0 = E.userids_0 WHERE E.datecolumn_1 BETWEEN '1970-01-01' AND '1997-12-31' AND E.diseasesandconditions_7 LIKE '%Behcet%' OR E.medicalabbreviations_11 LIKE '%Behcet%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.datecolumn_1 BETWEEN '1987-07-06' AND '1996-01-31'\nAND E.valueslist_2 > 30\nAND E.scoresdata_3 < 4\nGROUP BY P.userids_0\n\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT userids_0 FROM Patient WHERE gendercode_1 = 'F' AND EXTRACT(YEAR FROM dateofbirth_2) = 1964\n\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%degree of thrombosis level 2%' \nAND E.medicalabbreviations_11 LIKE '%ANA pattern only S%' \nAND E.valueslist_2 > (SELECT AVG(valueslist_2) FROM Examination WHERE diseasesandconditions_7 LIKE '%degree of thrombosis level 2%' AND medicalabbreviations_11 LIKE '%ANA pattern only S%') * 1.2\n\n\t----- bird -----\tthrombosis_prediction",
    "1190": "\nSELECT CAST(COUNT(CASE WHEN L.temperaturedata_17 < 32 THEN 1 END) AS REAL) * 100 / COUNT(L.user_id_0) AS percentage\nFROM Laboratory L\nJOIN Examination E ON L.user_id_0 = E.userids_0\nWHERE E.valueslist_2 BETWEEN 5 AND 140\n\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(COUNT(P.userids_0) AS FLOAT) / (SELECT COUNT(*) FROM Patient WHERE dateofbirth_2 BETWEEN '1981-01-01' AND '1981-12-31' AND gendercode_1 = 'M') * 100\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND EXTRACT(YEAR FROM datecolumn_1) = 1981 AND diseasesandconditions_7 LIKE '%BEHCET%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1192": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2\nFROM Patient AS P\nJOIN Laboratory AS L ON P.userids_0 = L.user_id_0\nWHERE L.datecolumn_1 BETWEEN '1991-10-01' AND '1991-10-31'\nAND EXISTS (\n    SELECT 1\n    FROM Examination AS E\n    WHERE E.userids_0 = P.userids_0\n)\nAND L.temperaturedata_3 >= 0.5 AND L.temperaturedata_3 <= 20.5 -- Assuming temperaturedata_3 represents total blood bilirubin level and normal range is between 0.5 to 20.5 umol/L\n\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.userids_0 = e.userids_0\nWHERE p.gendercode_1 = 'F' AND p.dateofbirth_2 BETWEEN '1980-01-01' AND '1989-12-31'\nAND e.diseasesandconditions_7 NOT LIKE '%P only ANA Pattern%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nSELECT P.gendercode_1 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nJOIN Laboratory AS L ON P.userids_0 = L.user_id_0 \nWHERE E.diseasesandconditions_7 LIKE '%PSS%' AND L.temperaturedata_3 = 2 AND L.temperaturedata_16 = 1 AND L.measurementvalues_8 = 123\n\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(e.valueslist_2) \nFROM Examination e\nJOIN Patient p ON e.userids_0 = p.userids_0\nWHERE p.gendercode_1 = 'F' AND e.diseasesandconditions_7 LIKE '%SLE%' AND e.scoresdata_3 > 400\n\n\t----- bird -----\tthrombosis_prediction",
    "1196": "\nSELECT T1.diseases_6, T2.diseasesandconditions_7\nFROM Patient AS T1\nJOIN Examination AS T2 ON T1.userids_0 = T2.userids_0\nWHERE T1.diseases_6 LIKE '%SLE%'\nGROUP BY T2.diseasesandconditions_7\nORDER BY COUNT(T2.diseasesandconditions_7) DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nSELECT MIN(T1.datecolumn_3), T1.diseases_6 \nFROM Patient AS T1 \nJOIN Examination AS T2 ON T1.userids_0 = T2.userids_0 \nWHERE T1.userids_0 = 48473\n\n\t----- bird -----\tthrombosis_prediction",
    "1198": "\nSELECT COUNT(*) \nFROM Patient p\nJOIN Examination e ON p.userids_0 = e.userids_0\nWHERE p.gendercode_1 = 'F' AND e.diseasesandconditions_7 LIKE '%APS%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1199": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE EXTRACT(YEAR FROM E.datecolumn_1) = 1997 AND E.valueslist_2 NOT BETWEEN 6 AND 8\n\n\t----- bird -----\tthrombosis_prediction",
    "1200": "\nSELECT CAST(SUM(CASE WHEN T1.diseasesandconditions_7 LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.userids_0) \nFROM Examination AS T1 \nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0 \nWHERE T1.diseasesandconditions_7 LIKE '%thrombocytopenia%' OR T2.diseases_6 LIKE '%thrombocytopenia%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1201": "\nSELECT CAST(COUNT(CASE WHEN gendercode_1 = 'F' THEN 1 END) AS FLOAT) * 100 / COUNT(*) \nFROM Patient\nWHERE dateofbirth_2 BETWEEN '1980-01-01' AND '1980-12-31'\nAND diseases_6 LIKE '%RA%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.datecolumn_1 BETWEEN '1995-01-01' AND '1997-12-31' AND E.diseasesandconditions_7 LIKE '%BEHCET%' AND E.statuscodes_8 NOT IN ('INPATIENT', 'HOSPITALIZED')\n\n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'F' AND E.valueslist_2 < 3.5\n\n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT EXTRACT(EPOCH FROM (datecolumn_1 - dateofbirth_2)) AS time_difference_seconds\nFROM Examination E JOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.userids_0 = 821298 AND E.datecolumn_1 > P.dateofbirth_2\nORDER BY E.datecolumn_1 ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1205": "\nSELECT l.temperaturedata_3 AS uric_acid_value\nFROM Laboratory l\nJOIN Patient p ON l.user_id_0 = p.userids_0\nWHERE p.userids_0 = 57266\nAND l.temperaturedata_19 IS NOT NULL -- Assuming temperaturedata_19 represents uric acid value\n\n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT L.datecolumn_1\nFROM Laboratory AS L\nJOIN Examination AS E ON L.user_id_0 = E.userids_0\nWHERE L.user_id_0 = 48473 AND E.valueslist_2 > NORMAL_RANGE_VALUE\n\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Laboratory AS L ON P.userids_0 = L.user_id_0\nWHERE L.datecolumn_1 BETWEEN '1994-01-01' AND '1994-12-31'\nAND EXISTS (\n    SELECT 1 FROM Examination E WHERE E.userids_0 = P.userids_0 \n    AND E.valueslist_2 BETWEEN 5 AND 40 -- Assuming normal range for AST is between 5 and 40 IU/L\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%ALT glutamic pylvic transaminase (GPT)%'\nGROUP BY P.userids_0\nHAVING MAX(E.scoresdata_3) > 40;\n\n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT P.userids_0, P.dateofbirth_2, E.diseasesandconditions_7 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE E.diseasesandconditions_7 LIKE '%ALT glutamic pylvic transaminase%' \nORDER BY P.dateofbirth_2 ASC\n\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(E.scoresdata_3) AS average_ldh_index\nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.medicalabbreviations_11 = 'LDH' AND E.statuscodes_8 = 'Normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT P.userids_0, EXTRACT(YEAR FROM AGE(P.dateofbirth_2)) AS age\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 BETWEEN 100 AND 300;\n\n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT P.userids_0, E.statuscodes_8 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE E.diseasesandconditions_7 LIKE '%ALP within normal range%' \nAND (E.statuscodes_8 IN ('inpatient', 'outpatient'))\n\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT P.userids_0, E.diseasesandconditions_7 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE P.dateofbirth_2 = '1982-04-01' AND E.diseasesandconditions_7 LIKE '%ALP normal range%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 < (SELECT MIN(valueslist_2) FROM Examination WHERE valueslist_2 IS NOT NULL)\n\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT P.userids_0, E.valueslist_2 - normal_value AS deviation FROM Patient P JOIN Examination E ON P.userids_0 = E.userids_0 WHERE P.gendercode_1 = 'F' AND E.diseasesandconditions_7 LIKE '%total protein%' AND (E.valueslist_2 > normal_value OR E.valueslist_2 < normal_value)\n\n\t----- bird -----\tthrombosis_prediction",
    "1216": "\nSELECT P.userids_0, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 NOT LIKE '%albumin within range%'\nORDER BY P.dateofbirth_2 DESC\n\n\t----- bird -----\tthrombosis_prediction",
    "1217": "\nSELECT P.userids_0, E.diseasesandconditions_7 AS albumin_status\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE YEAR(P.dateofbirth_2) = 1982 AND E.diseasesandconditions_7 LIKE '%normal range%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1218": "\nSELECT CAST(COUNT(CASE WHEN T1.diseasesandconditions_7 LIKE '%UA%' AND T2.gendercode_1 = 'F' THEN 1 END) AS REAL) * 100 / COUNT(T2.userids_0) AS female_patients_with_high_UA_percentage\nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0\nWHERE T1.diseasesandconditions_7 LIKE '%UA%' AND T2.gendercode_1 = 'F'\n\n\t----- bird -----\tthrombosis_prediction",
    "1219": "\nSELECT AVG(L.temperaturedata_3) AS average_UA_index\nFROM (\n    SELECT user_id_0, MAX(datecolumn_1) AS max_date\n    FROM Laboratory\n    GROUP BY user_id_0\n) AS T\nJOIN Laboratory L ON T.user_id_0 = L.user_id_0 AND T.max_date = L.datecolumn_1\nWHERE EXISTS (\n    SELECT 1\n    FROM Examination E\n    WHERE E.userids_0 = L.user_id_0\n    AND E.diseasesandconditions_7 LIKE '%normal uric acid%'\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%UN borderline passing%' OR E.medicalabbreviations_11 LIKE '%UN borderline passing%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%RA%' AND E.statuscodes_8 IN ('UN')\n\n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND (E.valueslist_2 < 0.6 OR E.valueslist_2 > 1.2)\n\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT CASE WHEN male_count > female_count THEN TRUE ELSE FALSE END AS result\nFROM (\n    SELECT \n        SUM(CASE WHEN P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%creatinine%' THEN 1 ELSE 0 END) AS male_count,\n        SUM(CASE WHEN P.gendercode_1 = 'F' AND E.diseasesandconditions_7 LIKE '%creatinine%' THEN 1 ELSE 0 END) AS female_count\n    FROM Patient P\n    JOIN Examination E ON P.userids_0 = E.userids_0\n    WHERE E.diseasesandconditions_7 NOT LIKE '%normal%'\n) subquery;\n\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE E.diseasesandconditions_7 LIKE '%total bilirubin%' \nORDER BY E.valueslist_2 DESC \nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1225": "\nSELECT P.gendercode_1, E.diseasesandconditions_7 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE E.diseasesandconditions_7 LIKE '%T-BIL%' AND E.statuscodes_8 NOT IN ('Normal', 'WithinRange')\nGROUP BY P.gendercode_1, E.diseasesandconditions_7\n\n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT P.userids_0, E.valueslist_2 AS T_CHO\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%T-CHO%'\nORDER BY P.dateofbirth_2 ASC, E.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1227": "\nSELECT AVG(YEAR(P.dateofbirth_2)) AS average_age\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%high cholesterol%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1228": "\nSELECT P.userids_0, E.diseasesandconditions_7 AS diagnosis\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 > 100;\n\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Laboratory L ON P.userids_0 = L.user_id_0\nWHERE L.temperaturedata_3 > (SELECT AVG(temperaturedata_3) FROM Laboratory) AND P.dateofbirth_2 < DATE('now', '-50 years')\n\n\t----- bird -----\tthrombosis_prediction",
    "1230": "\nSELECT DISTINCT p.userids_0 \nFROM Patient p\nJOIN Examination e ON p.userids_0 = e.userids_0\nWHERE e.diseasesandconditions_7 NOT LIKE '%inpatient%' AND e.scoresdata_3 BETWEEN 24 AND 165;\n\n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.dateofbirth_2 BETWEEN '1936-01-01' AND '1956-12-31'\nAND P.gendercode_1 = 'M'\nAND E.valueslist_2 > 100 -- Assuming normal range for creatinine phosphokinase is up to 100\n\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT P.userids_0, P.gendercode_1, AGE(P.dateofbirth_2) AS age \nFROM Patient P \nJOIN Examination E ON P.userids_0 = E.userids_0 \nWHERE (E.diseasesandconditions_7 LIKE '%GLU%' AND E.scoresdata_3 NOT BETWEEN 4.0 AND 5.5)\nAND (E.diseasesandconditions_7 LIKE '%T-CHO%' AND E.scoresdata_3 BETWEEN 120 AND 200);\n\n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT P.userids_0, E.valueslist_2 AS blood_glucose_index\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE EXTRACT(YEAR FROM E.datecolumn_1) = 1991 AND E.valueslist_2 BETWEEN 70 AND 140;\n\n\t----- bird -----\tthrombosis_prediction",
    "1234": "\nSELECT P.userids_0, P.gendercode_1, P.dateofbirth_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%abnormal white blood cell count%'\nGROUP BY P.gendercode_1\nORDER BY P.dateofbirth_2 DESC\n\n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT P.userids_0, P.dateofbirth_2 AS age FROM Patient P JOIN Examination E ON P.userids_0 = E.userids_0 WHERE E.diseasesandconditions_7 LIKE '%lower red blood cell%' OR E.medicalabbreviations_11 LIKE '%lower red blood cell%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT P.userids_0, E.statuscodes_8 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE P.gendercode_1 = 'F' AND P.dateofbirth_2 <= DATE_SUB(CURDATE(), INTERVAL 50 YEAR) AND E.diseasesandconditions_7 LIKE '%abnormal red blood cell count%' \n\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT P.userids_0, P.gendercode_1 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.statuscodes_8 = 'outpatient' AND E.valueslist_2 < 13 -- Assuming valueslist_2 is hemoglobin level and low threshold is 13 g/dL\n\n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT P.userids_0, P.gendercode_1 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%SLE%' AND E.valueslist_2 BETWEEN 12 AND 16\nORDER BY P.dateofbirth_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1239": "\nSELECT P.userids_0, EXTRACT(YEAR FROM AGE(P.dateofbirth)) AS age\nFROM Patient P\nJOIN Laboratory L ON P.userids_0 = L.user_id_0\nWHERE L.measurements > 42 -- Assuming normal range for hematocrit is below 42%\nGROUP BY P.userids_0\nHAVING COUNT(L.user_id_0) >= 2\n\n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(measurements_7) AS average_hematocrit_level\nFROM Laboratory\nWHERE datecolumn_1 BETWEEN '1991-01-01' AND '1991-12-31'\nAND measurements_7 < 45 -- Assuming normal range for hematocrit is above 45% for adult males and above 42% for adult females, using a general value of 45%\n\n\t----- bird -----\tthrombosis_prediction",
    "1241": "\nSELECT \n    (SELECT COUNT(*) FROM Examination AS E JOIN Patient AS P ON E.userids_0 = P.userids_0 WHERE E.diseasesandconditions_7 LIKE '%abnormal platelet%' AND E.scoresdata_3 < 150) AS lower_than_normal,\n    (SELECT COUNT(*) FROM Examination AS E JOIN Patient AS P ON E.userids_0 = P.userids_0 WHERE E.diseasesandconditions_7 LIKE '%abnormal platelet%' AND E.scoresdata_3 > 450) AS higher_than_normal\n\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT P.userids_0, P.dateofbirth_2, L.agevalues_2, L.temperaturedata_3 \nFROM Laboratory AS L\nJOIN Patient AS P ON L.user_id_0 = P.userids_0\nWHERE EXTRACT(YEAR FROM L.datecolumn_1) = 1984 AND L.agevalues_2 < 50 AND L.temperaturedata_3 BETWEEN 150 AND 450\n\n\t----- bird -----\tthrombosis_prediction",
    "1243": "\nSELECT CAST(COUNT(CASE WHEN T1.gendercode_1 = 'F' AND T2.diseasesandconditions_7 LIKE '%abnormal prothrombin time%' THEN 1 END) AS REAL) * 100 / COUNT(T1.userids_0) AS percentage_female_with_abnormal_PT\nFROM Patient AS T1\nJOIN Examination AS T2 ON T1.userids_0 = T2.userids_0\nWHERE DATE_PART('year', AGE(T1.dateofbirth_2)) > 55;\n\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT P.userids_0, P.dateofbirth_2, E.datecolumn_1 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.statuscodes_8 = 'Normal' AND YEAR(E.datecolumn_1) > 1992\nORDER BY E.datecolumn_1 ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(*)\nFROM Examination\nWHERE datecolumn_1 > '1997-01-01'\nAND diseasesandconditions_7 LIKE '%inactivated partial prothrombin time%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1246": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%abnormal activated partial prothrombin time%' AND P.diseases_6 LIKE '%mild thrombosis%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1247": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.statuscodes_8 = 'Normal' AND E.statuscodes_9 = 'Abnormal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.dateofbirth_2 > '1980-01-01' AND E.diseasesandconditions_7 LIKE '%abnormal fibrinogen level%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1249": "\nSELECT P.diseases_6\nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 > NORMAL_PROTEINURIA_LEVEL\n\n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%SLE%' AND E.statuscodes_8 LIKE '%Normal%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.medicalabbreviations_11 LIKE '%Ig G%' AND E.scoresdata_3 < (SELECT AVG(scoresdata_3) FROM Examination WHERE medicalabbreviations_11 LIKE '%Ig G%') \nAND E.diseasesandconditions_7 LIKE '%abortion%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1252": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.scoresdata_3 = 'normal' AND E.diseasesandconditions_7 IS NOT NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT P.diseases_6 \nFROM Patient P \nJOIN Examination E ON P.userids_0 = E.userids_0 \nWHERE E.medicalabbreviations_11 = 'Ig A' AND E.scoresdata_3 BETWEEN 95 AND 328 -- Assuming normal range for IgA is between 95 and 328 mg/dL\nORDER BY E.scoresdata_3 DESC \nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%Normal Ig A%' AND E.datecolumn_1 > '1990-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT diseases_6, COUNT(*) AS count FROM Patient\nJOIN Examination ON Patient.userids_0 = Examination.userids_0\nWHERE medicalabbreviations_11 LIKE '%Ig M%' AND statuscodes_8 = 'Abnormal'\nGROUP BY diseases_6\nORDER BY count DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(*) \nFROM Patient p\nLEFT JOIN Laboratory l ON p.userids_0 = l.user_id_0\nWHERE l.temperaturedata_3 IS NULL AND p.diseases_6 LIKE '%normal C-reactive protein%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%C-reactive protein abnormal%' AND P.dateofbirth_2 > DATE_SUB(CURDATE(), INTERVAL 18 YEAR)\n\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal Rhuematoid Factor%' AND E.statuscodes_8 = 'positive'\n\n\t----- bird -----\tthrombosis_prediction",
    "1259": "\nSELECT P.diseases_6 \nFROM Patient AS P \nJOIN Examination AS E ON P.userids_0 = E.userids_0 \nWHERE P.dateofbirth_2 > '1995-01-01' AND E.medicalabbreviations_11 = 'RF Normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1260": "\nSELECT P.userids_0 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.medicalabbreviations_11 = 'RF' AND E.statuscodes_8 = 'Normal' AND P.dateofbirth_2 < DATE_SUB(CURDATE(), INTERVAL 60 YEAR)\n\n\t----- bird -----\tthrombosis_prediction",
    "1261": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%thrombosis%' AND E.medicalabbreviations_11 LIKE '%RF Normal%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal level of complement 3%' AND E.statuscodes_8 LIKE '%P pattern%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%Hematocrit abnormal%' \nORDER BY E.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1264": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE P.diseases LIKE '%blood clots in veins%' AND E.scoresdata_3 = 'normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1265": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%anti-ribonuclear protein normal%' AND E.statuscodes_8 = 'Admitted'\n\n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT p.dateofbirth_2 FROM Patient p JOIN Examination e ON p.userids_0 = e.userids_0 WHERE e.diseasesandconditions_7 LIKE '%abnormal anti-ribonuclear protein%' ORDER BY p.dateofbirth_2 DESC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT COUNT(*)\nFROM Patient p\nJOIN Examination e ON p.userids_0 = e.userids_0\nWHERE e.diseasesandconditions_7 LIKE '%normal anti-SM%'\nAND e.statuscodes_8 IN ('most severe', 'severe')\nOR e.statuscodes_9 IN ('most severe', 'severe')\nOR e.statuscodes_10 IN ('most severe', 'severe');\n\n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%abnormal anti-SM%'\nORDER BY P.dateofbirth_2 DESC\nLIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.datecolumn_1 > '1997-01-01' AND E.diseasesandconditions_7 LIKE '%normal anti-scl70%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%vertigo%' AND E.medicalabbreviations_11 LIKE '%normal anti-scl70%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal anti-SSA%' AND E.datecolumn_1 < '1990-01-01'\n\n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%anti-SSA%'\nORDER BY E.datecolumn_1 ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1273": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%SLE%' AND E.medicalabbreviations_11 LIKE '%normal anti-SSB%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1274": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%abnormal%' AND E.diseasesandconditions_7 LIKE '%anti-SSB%'\nAND (E.scoresdata_3 > 0 OR E.memoryvalues_4 > 0 OR E.valuecounts_6 > 0)\n\n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.statuscodes_8 = 'Normal' AND E.statuscodes_9 = 'Normal'\nAND E.medicalabbreviations_11 IN ('anti-centromere', 'anti-SSB')\n\n\t----- bird -----\tthrombosis_prediction",
    "1276": "\nSELECT P.userids_0, P.diseases_6 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.medicalabbreviations_11 LIKE '%anti-DNA%' AND E.statuscodes_8 = 'Abnormal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nLEFT JOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%anti-DNA%' OR E.diseasesandconditions_7 IS NULL\nGROUP BY P.userids_0\nHAVING COUNT(E.userids_0) = 0;\n\n\t----- bird -----\tthrombosis_prediction",
    "1278": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%anti-DNA-II%' AND E.statuscodes_8 = 'Admitted'\n\n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT CAST(COUNT(E.userids_0) AS FLOAT) / (SELECT COUNT(*) FROM Patient) * 100 \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%SLE%' AND E.scoresdata_3 > NORMAL_GLUTAMIC_OXALOACETIC_TRANSAMINASE_LEVEL\n\n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.diseasesandconditions_7 LIKE '%normal range of glutamic oxaloacetic transaminase%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT MIN(T2.dateofbirth_2) AS youngest_birth_date\nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0\nWHERE T1.diseasesandconditions_7 LIKE '%glutamic oxaloacetic transaminase abnormal%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT P.dateofbirth_2, E.valueslist_2 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.statuscodes_8 = 'Normal' AND E.scoresdata_3 BETWEEN 15 AND 40 -- Assuming the normal range for glutamic pyruvic transaminase is between 15 and 40 IU/L\nORDER BY E.valueslist_2 DESC\nLIMIT 3\n\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 IS NOT NULL AND P.gendercode_1 = 'M'\n\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT L.datecolumn_1 FROM Laboratory AS L WHERE L.measurements = (SELECT MAX(L.measurements) FROM Laboratory AS L WHERE L.measurements BETWEEN 140 AND 450)\n\n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nSELECT MAX(T1.datecolumn_1) AS latest_record_date\nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0\nWHERE T1.diseasesandconditions_7 LIKE '%lactate dehydrogenase%' AND T1.statuscodes_8 != 'normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%abnormal alkaliphophatase%' AND E.statuscodes_8 = 'admitted'\n\n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal alkaliphophatase%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1288": "\nSELECT P.userids_0, E.diseasesandconditions_7 \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 < (SELECT AVG(valueslist_2) FROM Examination)\n\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%SJS%' AND E.statuscodes_8 = 'Normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT E.datecolumn_1\nFROM Examination AS E\nJOIN (\n    SELECT MAX(E.valueslist_2) AS max_albumin\n    FROM Examination AS E\n    WHERE E.diseasesandconditions_7 = 'Normal' AND E.medicalabbreviations_11 = 'Albumin'\n) AS Subquery\nON E.valueslist_2 = Subquery.max_albumin AND E.diseasesandconditions_7 = 'Normal' AND E.medicalabbreviations_11 = 'Albumin'\n\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.gendercode_1 = 'M' AND E.statuscodes_8 = 'Normal' AND E.statuscodes_9 = 'Normal'\nAND E.medicalabbreviations_11 IN ('Albumin', 'Total Protein')\nGROUP BY P.userids_0\nHAVING COUNT(DISTINCT E.medicalabbreviations_11) = 2\n\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT E.valueslist_2 AS anti_cardiolipin_antibody_concentration, P.gendercode_1, L.temperaturedata_3 AS uric_acid_level\nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nJOIN Laboratory L ON L.user_id_0 = P.userids_0\nWHERE P.gendercode_1 = 'F' AND L.temperaturedata_3 BETWEEN 2.4 AND 6.0 -- Assuming uric acid normal range is between 2.4 and 6.0 mg/dL\nORDER BY L.temperaturedata_3 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1293": "\nSELECT MAX(e.valueslist_2) AS highest_antinucleus_ab_concentration\nFROM Examination e\nJOIN Patient p ON e.userids_0 = p.userids_0\nWHERE e.statuscodes_8 = 'Normal' AND e.diseasesandconditions_7 LIKE '%creatinine%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1294": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%normal creatinine%'\nORDER BY E.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%total bilirubin over normal range%' AND E.medicalabbreviations_11 LIKE '%peripheral pattern%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1296": "\nSELECT E.userids_0, E.valueslist_2 AS anti_nucleus_antibody_concentration\nFROM Examination E\nWHERE E.valueslist_2 IS NOT NULL AND E.valueslist_2 BETWEEN 0 AND 1 -- Assuming normal range for anti-nucleus antibody concentration is between 0 and 1\nORDER BY E.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1297": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.valueslist_2 > NORMAL_TOTAL_CHOLESTEROL_VALUE -- Replace with actual normal total cholesterol value\nAND EXISTS (\n    SELECT 1 FROM Laboratory L WHERE P.userids_0 = L.user_id_0 AND L.temperaturedata_3 < 0 -- Assuming temperaturedata_3 is the measure of degree of coagulation and should be negative for a negative measure\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(E.userids_0) \nFROM Examination E\nJOIN Patient P ON E.userids_0 = P.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%P pattern%'\nAND E.scoresdata_3 BETWEEN 130 AND 200 -- Assuming normal total cholesterol range is between 130 and 200 mg/dL\n\n\t----- bird -----\tthrombosis_prediction",
    "1299": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 IS NOT NULL AND E.diseasesandconditions_7 != ''\n\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT P.diseases_6 \nFROM Patient P \nJOIN Examination E ON P.userids_0 = E.userids_0 \nWHERE E.valueslist_2 BETWEEN 40 AND 200 -- Assuming normal range for triglyceride is between 40 and 200 mg/dL\nORDER BY E.valueslist_2 DESC \nLIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1301": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%thrombosis%' AND E.scoresdata_3 > NORMAL_CREATINE_PHOSPHOKINASE_LEVEL\n\n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(L.user_id_0) \nFROM Laboratory L\nJOIN Patient P ON L.user_id_0 = P.userids_0\nWHERE L.temperaturedata_3 BETWEEN 24 AND 186 -- Assuming this is the normal range for creatinine phosphokinase in arbitrary units\nAND EXISTS (\n    SELECT 1 FROM Examination E WHERE E.userids_0 = L.user_id_0 AND E.valueslist_2 > 0 -- Assuming valueslist_2 represents degree of coagulation and positive measure is greater than 0\n)\n\n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT P.dateofbirth_2 FROM Patient AS P JOIN Examination AS E ON P.userids_0 = E.userids_0 WHERE E.diseasesandconditions_7 LIKE '%abnormal blood glucose%' ORDER BY P.dateofbirth_2 ASC LIMIT 1\n\n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%thrombosis%' AND E.scoresdata_3 BETWEEN 70 AND 140\n\n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.statuscodes_8 = 'Normal' AND E.diseasesandconditions_7 = 'White Blood Cells'\n\n\t----- bird -----\tthrombosis_prediction",
    "1306": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE P.diseases LIKE '%SLE%' AND E.statuscodes_8 = 'Normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1307": "\nSELECT P.userids_0\nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%abnormal red blood cell%' AND E.statuscodes_8 = 'outpatient';\n\n\t----- bird -----\tthrombosis_prediction",
    "1308": "\nSELECT COUNT(DISTINCT P.userids_0) \nFROM Patient AS P\nJOIN Examination AS E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 NOT LIKE '%normal platelet level%' AND E.diseasesandconditions_7 IS NOT NULL AND E.diseasesandconditions_7 != ''\n\n\t----- bird -----\tthrombosis_prediction",
    "1309": "\nSELECT L.temperaturedata_3, P.diseases_6 \nFROM Laboratory AS L \nJOIN Patient AS P ON L.user_id_0 = P.userids_0 \nWHERE P.diseases_6 LIKE '%MCTD%' AND L.temperaturedata_3 BETWEEN 150 AND 450\n\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG(T1.scoresdata_3) \nFROM Examination AS T1\nJOIN Patient AS T2 ON T1.userids_0 = T2.userids_0\nWHERE T2.gendercode_1 = 'M' AND T1.diseasesandconditions_7 LIKE '%normal prothrombin time%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(P.userids_0) \nFROM Patient P\nJOIN Examination E ON P.userids_0 = E.userids_0\nWHERE E.diseasesandconditions_7 LIKE '%severe thrombosis%' AND E.statuscodes_8 = 'normal'\n\n\t----- bird -----\tthrombosis_prediction",
    "1312": "\nSELECT T2.majorsandfields_1 FROM member AS T1 JOIN major AS T2 ON T1.recordids_0 = T2.recordids_0 WHERE T1.nameslist_1 = 'Angela' AND T1.lastnames_2 = 'Sanders'\n\n\t----- bird -----\tstudent_club",
    "1313": "\nSELECT COUNT(m.recordids_0) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.collegename_3 = 'College of Engineering'\n\n\t----- bird -----\tstudent_club",
    "1314": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.departmentname_2 = 'Art and Design Department'\nAND EXISTS (\n    SELECT 1 FROM event e JOIN attendance a ON e.recordids_0 = a.recordid_0\n    WHERE a.recordid_0 = m.recordids_0 AND e.eventtype_3 = 'Student_Club'\n)\n\n\t----- bird -----\tstudent_club",
    "1315": "\nSELECT COUNT(DISTINCT m.recordids_0) \nFROM event e\nJOIN attendance a ON e.recordids_0 = a.recordid_0\nJOIN member m ON a.recordidentifier_1 = m.recordids_0\nWHERE e.eventslist_1 = 'Women\\'s Soccer'\nAND m.memberstatus_4 = 'Student_Club';\n\n\t----- bird -----\tstudent_club",
    "1316": "\nSELECT m.phone_numbers_6\nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nJOIN event e ON a.recordidentifier_1 = e.recordids_0\nWHERE e.eventslist_1 = 'Women\\'s Soccer'\nAND m.memberstatus_4 = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1317": "\nSELECT COUNT(m.recordids_0) \nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nJOIN event e ON a.recordidentifier_1 = e.recordids_0\nWHERE e.eventslist_1 = 'Women\\'s Soccer' AND m.shirtsize_5 = 'Medium'\n\n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT e.recordids_0, COUNT(a.recordid_0) AS attendance_count\nFROM event e\nJOIN attendance a ON e.recordids_0 = a.recordid_0\nJOIN member m ON a.recordidentifier_1 = m.recordids_0\nWHERE m.memberstatus_4 = 'Student_Club'\nGROUP BY e.recordids_0\nORDER BY attendance_count DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1319": "\nSELECT T3.collegename_3 FROM member AS T1 JOIN major AS T2 ON T1.recordids_0 = T2.recordids_0 JOIN attendance AS T4 ON T1.recordids_0 = T4.recordid_0 JOIN event AS T5 ON T4.recordidentifier_1 = T5.recordids_0 WHERE T5.eventslist_1 LIKE '%Vice President%' AND T5.locationorfacility_5 = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1320": "\nSELECT e.eventslist_1 \nFROM event e\nJOIN attendance a ON e.recordids_0 = a.recordid_0\nJOIN member m ON a.recordidentifier_1 = m.recordids_0\nWHERE m.nameslist_1 = 'Maya' AND m.lastnames_2 = 'Mclean'\n\n\t----- bird -----\tstudent_club",
    "1321": "\nSELECT COUNT(*) \nFROM event e\nJOIN attendance a ON e.recordids_0 = a.recordid_0\nJOIN member m ON a.recordidentifier_1 = m.recordids_0\nWHERE m.nameslist_1 = 'Sacha' AND m.lastnames_2 = 'Harrison'\nAND e.eventtype_3 LIKE '%Student_Club%'\nAND CAST(e.timestampdata_2 AS DATE) BETWEEN '2019-01-01' AND '2019-12-31';\n\n\t----- bird -----\tstudent_club",
    "1322": "\nSELECT COUNT(e.recordids_0) \nFROM event e\nJOIN attendance a ON e.recordids_0 = a.recordid_0\nWHERE EXISTS (\n    SELECT 1 FROM member m\n    WHERE a.recordidentifier_1 = m.recordids_0 AND m.memberstatus_4 LIKE '%Student_Club%'\n)\nGROUP BY e.eventtype_3, e.recordids_0\nHAVING COUNT(DISTINCT a.recordidentifier_1) > 10\nAND e.eventtype_3 = 'meeting'\n\n\t----- bird -----\tstudent_club",
    "1323": "\nSELECT e.eventslist_1 FROM event AS e JOIN attendance AS a ON e.recordids_0 = a.recordid_0 WHERE (SELECT COUNT(*) FROM attendance WHERE recordid_0 = e.recordids_0) > 20\n\n\t----- bird -----\tstudent_club",
    "1324": "\nSELECT AVG(T2.recordidentifier_1) AS average_attendance\nFROM event AS T1\nJOIN attendance AS T2 ON T1.recordids_0 = T2.recordid_0\nWHERE strftime('%Y', T1.timestampdata_2) = '2020'\nGROUP BY strftime('%Y', T1.timestampdata_2)\n\n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT itemsavailable_1, MAX(numericdata_3) AS max_expense\nFROM expense\nWHERE istrue_4 = 'true'\nGROUP BY itemsavailable_1\nORDER BY max_expense DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1326": "\nSELECT COUNT(m.recordids_0) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 = 'Environmental Engineering'\nAND m.recordids_8 IS NOT NULL;\n\n\t----- bird -----\tstudent_club",
    "1327": "\nSELECT m.nameslist_1 || ' ' || m.lastnames_2 AS full_name\nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nJOIN event e ON a.recordidentifier_1 = e.recordids_0\nWHERE e.eventslist_1 = 'Laugh Out Loud'\n\n\t----- bird -----\tstudent_club",
    "1328": "\nSELECT m.lastnames FROM member AS m JOIN major AS ma ON m.recordids_8 = ma.recordids_0 WHERE ma.majorsandfields_1 = 'Law and Constitutional Studies'\n\n\t----- bird -----\tstudent_club",
    "1329": "\nSELECT T3.geographicalarea_3 \nFROM member AS T1 \nJOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 \nWHERE T1.nameslist_1 = 'Sherri' AND T1.lastnames_2 = 'Ramsey'\n\n\t----- bird -----\tstudent_club",
    "1330": "\nSELECT T3.collegename FROM member AS T1 JOIN major AS T2 ON T1.recordids_0 = T2.recordids_0 JOIN major AS T3 ON T2.collegename = T3.collegename WHERE T1.nameslist_1 = 'Tyler' AND T1.lastnames_2 = 'Hewitt'\n\n\t----- bird -----\tstudent_club",
    "1331": "\nSELECT SUM(valueslist_2) AS total_funds_received\nFROM income\nWHERE duesorfundraising_3 = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1332": "\nSELECT SUM(e.numericdata_3) AS total_spent_on_food\nFROM expense e\nJOIN event ev ON e.recordid_5 = ev.recordids_0\nWHERE e.itemsavailable_1 LIKE '%food%' AND ev.eventslist_1 LIKE '%September Meeting%'\n\n\t----- bird -----\tstudent_club",
    "1333": "\nSELECT T3.location_4, T3.statecode_5 \nFROM member AS T1\nJOIN major AS T2 ON T1.recordids_0 = T2.recordids_0\nJOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0\nWHERE T2.collegename_3 = 'Student_Club' AND T1.nameslist_1 = 'President'\n\n\t----- bird -----\tstudent_club",
    "1334": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN zip_code z ON m.userids_7 = z.ids_0\nWHERE z.statecode_5 = 'IL'\nAND m.memberstatus_4 = 'Student_Club';\n\n\t----- bird -----\tstudent_club",
    "1335": "\nSELECT SUM(e.numericdata_3) AS total_spent_on_advertisement\nFROM expense e\nJOIN event ev ON e.recordid_5 = ev.recordids_0\nWHERE e.itemsavailable_1 LIKE '%advertisement%' AND ev.eventslist_1 LIKE '%September Meeting%' AND e.istrue_4 = 'true'\n\n\t----- bird -----\tstudent_club",
    "1336": "\nSELECT T2.departmentname_2 \nFROM member AS T1\nJOIN major AS T2 ON T1.recordids_0 = T2.recordids_0\nWHERE T1.nameslist_1 = 'Pierce' AND T1.lastnames_2 = 'Guidi'\n\n\t----- bird -----\tstudent_club",
    "1337": "\nSELECT SUM(valueslist_2) + SUM(valueslist_3) AS total_budgeted_amount\nFROM budget\nJOIN event ON budget.recordid_6 = event.recordids_0\nWHERE event.eventtype_3 = 'October Speaker'\n\n\t----- bird -----\tstudent_club",
    "1338": "\nSELECT e.recordids_0, ex.istrue_4 \nFROM event e\nJOIN expense ex ON e.recordids_0 = ex.recordid_5\nWHERE e.eventtype_3 = 'October Meeting' AND e.timestampdata_2 = '2019-10-08'\n\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT AVG(e.expense.numericdata_3) AS average_cost\nFROM expense e\nJOIN event ev ON e.recordid_5 = ev.recordids_0\nJOIN member m ON m.recordids_0 = e.uniqueidentifier_6\nWHERE m.nameslist_1 = 'Elijah' AND m.lastnames_2 = 'Allen'\nAND (ev.timestampdata_2 LIKE '2023-09-%' OR ev.timestampdata_2 LIKE '2023-10-%')\n\n\t----- bird -----\tstudent_club",
    "1340": "\nSELECT SUM(CASE WHEN EXTRACT(YEAR FROM datecolumn_2) = 2019 THEN numericdata_3 ELSE 0 END) - SUM(CASE WHEN EXTRACT(YEAR FROM datecolumn_2) = 2020 THEN numericdata_3 ELSE 0 END) AS total_spent_difference\nFROM expense e\nJOIN event ev ON e.recordid_5 = ev.recordids_0\nWHERE ev.eventtype_3 = 'Student_Club'\n\n\t----- bird -----\tstudent_club",
    "1341": "\nSELECT T1.locationorfacility_5 \nFROM event AS T1 \nWHERE T1.eventtype_3 = 'Spring Budget Review';\n\n\t----- bird -----\tstudent_club",
    "1342": "\nSELECT numericdata_3 FROM expense WHERE itemsavailable_1 = 'Posters' AND datecolumn_2 = '2019/9/4'\n\n\t----- bird -----\tstudent_club",
    "1343": "\nSELECT MAX(T1.valueslist_2 - T1.valueslist_3) AS remaining_budget\nFROM budget AS T1\nJOIN event AS T2 ON T1.recordid_6 = T2.recordids_0\nWHERE T1.categorytype_1 = 'Food'\nGROUP BY T1.valueslist_2, T1.valueslist_3\nORDER BY remaining_budget DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1344": "\nSELECT T1.eventslist_1 FROM event AS T1 JOIN income AS T2 ON T1.recordids_0 = T2.recordidentifier_5 WHERE T2.datecolumn_1 = '2019-09-14' AND T2.duesorfundraising_3 = 'fundraising'\n\n\t----- bird -----\tstudent_club",
    "1345": "\nSELECT COUNT(*) FROM major WHERE collegename_3 = 'College of Humanities and Social Sciences'\n\n\t----- bird -----\tstudent_club",
    "1346": "\nSELECT phone_numbers_6 FROM member WHERE nameslist_1 = 'Carlo' AND lastnames_2 = 'Jacobs'\n\n\t----- bird -----\tstudent_club",
    "1347": "\nSELECT T3.geographicalarea_3 \nFROM member AS T1 \nJOIN zip_code AS T3 \nON T1.userids_7 = T3.ids_0 \nWHERE T1.nameslist_1 = 'Adela' AND T1.lastnames_2 = 'O''Gallagher'\n\n\t----- bird -----\tstudent_club",
    "1348": "\nSELECT COUNT(*)\nFROM budget b\nJOIN event e ON b.recordid_6 = e.recordids_0\nWHERE e.eventslist_1 LIKE '%November Meeting%' AND (b.valueslist_2 < b.valueslist_3 OR b.valueslist_4 > 0)\n\n\t----- bird -----\tstudent_club",
    "1349": "\nSELECT SUM(valueslist_2) AS total_budget_amount\nFROM budget\nJOIN event ON budget.recordid_6 = event.recordids_0\nWHERE event.eventtype_3 = 'September Speaker'\nGROUP BY event.eventtype_3\n\n\t----- bird -----\tstudent_club",
    "1350": "\nSELECT e.status_6 FROM event AS e JOIN expense AS ex ON e.recordids_0 = ex.recordid_5 WHERE ex.itemsavailable_1 = 'Post Cards, Posters' AND ex.datecolumn_2 = '2019/8/20'\n\n\t----- bird -----\tstudent_club",
    "1351": "\nSELECT T2.majorsandfields_1 FROM member AS T1 JOIN major AS T2 ON T1.recordids_8 = T2.recordids_0 WHERE T1.nameslist_1 = 'Brent' AND T1.lastnames_2 = 'Thomason'\n\n\t----- bird -----\tstudent_club",
    "1352": "\nSELECT COUNT(*) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 = 'Human Development and Family Studies' AND m.shirtsize_5 = 'Large'\n\n\t----- bird -----\tstudent_club",
    "1353": "\nSELECT T3.deliverytype_1 FROM member AS T1 JOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 WHERE T1.nameslist_1 = 'Christof' AND T1.lastnames_2 = 'Nielsen'\n\n\t----- bird -----\tstudent_club",
    "1354": "\nSELECT T2.majorsandfields_1 FROM member AS T1 JOIN major AS T2 ON T1.recordids_8 = T2.recordids_0 WHERE T1.nameslist_1 = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1355": "\nSELECT T3.statecode_5 FROM member AS T1 JOIN zip_code AS T2 ON T1.userids_7 = T2.ids_0 JOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 WHERE T1.nameslist_1 = 'Sacha' AND T1.lastnames_2 = 'Harrison'\n\n\t----- bird -----\tstudent_club",
    "1356": "\nSELECT T2.departmentname_2 FROM member AS T1 JOIN major AS T2 ON T1.recordids_0 = T2.recordids_0 WHERE T1.nameslist_1 = 'President' AND T1.lastnames_2 = 'of the club'\n\n\t----- bird -----\tstudent_club",
    "1357": "\nSELECT i.datecolumn_1 FROM income AS i JOIN member AS m ON i.recordidentifier_5 = m.recordids_0 WHERE m.nameslist_1 = 'Connor' AND m.lastnames_2 = 'Hilton' AND i.duesorfundraising_3 = 'Dues'\n\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT nameslist_1, lastnames_2 \nFROM member \nWHERE recordids_0 IN (\n    SELECT recordidentifier_5 \n    FROM income \n    WHERE duesorfundraising_3 = 'dues' \n    ORDER BY datecolumn_1 ASC \n    LIMIT 1\n)\n\n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(b1.recordids_0) \nFROM budget b1\nJOIN event e1 ON b1.recordid_6 = e1.recordids_0\nWHERE b1.categorytype_1 = 'Advertisement' AND e1.eventslist_1 = 'Yearly Kickoff'\nAND (\n    SELECT SUM(valueslist_2)\n    FROM budget b2\n    JOIN event e2 ON b2.recordid_6 = e2.recordids_0\n    WHERE b2.categorytype_1 = 'Advertisement' AND e2.eventslist_1 = 'October Meeting'\n) < (\n    SELECT SUM(valueslist_2)\n    FROM budget b3\n    JOIN event e3 ON b3.recordid_6 = e3.recordids_0\n    WHERE b3.categorytype_1 = 'Advertisement' AND e3.eventslist_1 = 'Yearly Kickoff'\n)\n\n\t----- bird -----\tstudent_club",
    "1360": "\nWITH total_budget AS (\n    SELECT SUM(valueslist_2) as total FROM budget WHERE recordid_6 IN (SELECT recordids_0 FROM event WHERE eventsandnotifications_4 = 'November Speaker')\n),\nparking_budget AS (\n    SELECT SUM(valueslist_2) as parking_total FROM budget WHERE categorytype_1 = 'Parking' AND recordid_6 IN (SELECT recordids_0 FROM event WHERE eventsandnotifications_4 = 'November Speaker')\n)\nSELECT \n    CASE \n        WHEN total_budget.total > 0 THEN (parking_budget.parking_total * 100.0 / total_budget.total)\n        ELSE 0\n    END as parking_percentage\nFROM \n    total_budget, parking_budget;\n\n\t----- bird -----\tstudent_club",
    "1361": "\nSELECT SUM(numericdata_3) AS total_pizza_cost\nFROM expense\nWHERE itemsavailable_1 = 'pizza';\n\n\t----- bird -----\tstudent_club",
    "1362": "\nSELECT COUNT(DISTINCT location_4) \nFROM zip_code\nWHERE geographicalarea_3 = 'Orange County, Virginia'\nAND deliverytype_1 = 'City';\n\n\t----- bird -----\tstudent_club",
    "1363": "\nSELECT DISTINCT departmentname_2 \nFROM major \nWHERE collegename_3 = 'College of Humanities and Social Sciences'\n\n\t----- bird -----\tstudent_club",
    "1364": "\nSELECT T3.locationnames_2 FROM member AS T1 JOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 WHERE T1.nameslist_1 = 'Amy' AND T1.lastnames_2 = 'Firth'\n\n\t----- bird -----\tstudent_club",
    "1365": "\nSELECT e.recordid_5, e.numericdata_3 \nFROM expense e\nJOIN budget b ON e.recordid_5 = b.recordid_6\nWHERE b.status_5 = 'active' AND b.valueslist_2 - b.valueslist_3 = (SELECT MIN(valueslist_2 - valueslist_3) FROM budget WHERE status_5 = 'active')\n\n\t----- bird -----\tstudent_club",
    "1366": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nJOIN event e ON a.recordidentifier_1 = e.recordids_0\nWHERE e.eventslist_1 = 'October Meeting';\n\n\t----- bird -----\tstudent_club",
    "1367": "\nSELECT T2.collegename_3, COUNT(*) AS member_count\nFROM member AS T1\nJOIN major AS T2 ON T1.recordids_0 = T2.recordids_0\nGROUP BY T2.collegename_3\nORDER BY member_count DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1368": "\nSELECT T2.majorsandfields_1 FROM member AS T1 JOIN major AS T2 ON T1.recordids_8 = T2.recordids_0 WHERE T1.phone_numbers_6 = '809-555-3360'\n\n\t----- bird -----\tstudent_club",
    "1369": "\nSELECT e.recordids_0, b.valueslist_2 + b.valueslist_3 AS total_budget\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nORDER BY total_budget DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1370": "\nSELECT e.recordids_0, e.itemsavailable_1, e.datecolumn_2, e.numericdata_3 \nFROM expense e\nJOIN member m ON e.recordid_5 = m.recordids_0\nWHERE m.nameslist_1 = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1371": "\nSELECT COUNT(*) AS member_count\nFROM attendance a\nJOIN event e ON a.recordid_0 = e.recordids_0\nWHERE e.eventslist_1 = 'Women\\'s Soccer';\n\n\t----- bird -----\tstudent_club",
    "1372": "\nSELECT i.datecolumn_1 FROM income AS i JOIN member AS m ON i.recordidentifier_5 = m.recordids_0 WHERE m.nameslist_1 = 'Casey' AND m.lastnames_2 = 'Mason'\n\n\t----- bird -----\tstudent_club",
    "1373": "\nSELECT COUNT(*)\nFROM member m\nJOIN zip_code z ON m.userids_7 = z.ids_0\nWHERE z.statecode_5 = 'MD';\n\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(*) \nFROM attendance a\nJOIN event e ON a.recordid_0 = e.recordids_0\nJOIN member m ON a.recordidentifier_1 = m.recordids_0\nWHERE m.phone_numbers_6 = '954-555-6240';\n\n\t----- bird -----\tstudent_club",
    "1375": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.departmentname_2 = 'School of Applied Sciences, Technology and Education'\n\n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT e.recordids_0, SUM(exp.numericdata_3) / b.valueslist_2 AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nJOIN expense exp ON e.recordids_0 = exp.uniqueidentifier_6\nWHERE e.status_6 = 'closed'\nGROUP BY e.recordids_0, b.valueslist_2\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1377": "\nSELECT COUNT(*) \nFROM member \nWHERE nameslist_1 = 'President'\n\n\t----- bird -----\tstudent_club",
    "1378": "\nSELECT MAX(valueslist_2) AS highest_budget_spend\nFROM budget\nWHERE status_5 = 'spent'\n\n\t----- bird -----\tstudent_club",
    "1379": "\nSELECT COUNT(*) FROM event WHERE eventtype_3 = 'meeting' AND timestampdata_2 LIKE '2020-%'\n\n\t----- bird -----\tstudent_club",
    "1380": "\nSELECT SUM(numericdata_3) AS total_money_spent_for_food\nFROM expense\nWHERE itemsavailable_1 = 'Food'\n\n\t----- bird -----\tstudent_club",
    "1381": "\nSELECT m.nameslist_1, COUNT(a.recordid_0) AS event_count\nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nGROUP BY m.recordids_0, m.nameslist_1\nHAVING COUNT(a.recordid_0) > 7\n\n\t----- bird -----\tstudent_club",
    "1382": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nJOIN event e ON a.recordidentifier_1 = e.recordids_0\nWHERE ma.majorsandfields_1 LIKE '%Interior Design%' AND e.eventtype_3 = 'Community Theater'\n\n\t----- bird -----\tstudent_club",
    "1383": "\nSELECT T1.nameslist_1, T1.lastnames_2 \nFROM member AS T1\nJOIN zip_code AS T2 ON T1.userids_7 = T2.ids_0\nWHERE T2.locationnames_2 = 'Georgetown' AND T2.statecode_5 = 'SC'\n\n\t----- bird -----\tstudent_club",
    "1384": "\nSELECT SUM(valueslist_2) AS total_income\nFROM income i\nJOIN member m ON i.recordidentifier_5 = m.recordids_0\nWHERE m.nameslist_1 = 'Grant' AND m.lastnames_2 = 'Gilmour'\n\n\t----- bird -----\tstudent_club",
    "1385": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN income i ON m.recordids_0 = i.recordidentifier_5\nWHERE i.valueslist_2 > 40\nGROUP BY m.nameslist_1, m.lastnames_2\n\n\t----- bird -----\tstudent_club",
    "1386": "\nSELECT SUM(numericdata_3) AS total_expense\nFROM expense e\nJOIN budget b ON e.uniqueidentifier_6 = b.recordids_0\nJOIN event ev ON b.recordid_6 = ev.recordids_0\nWHERE ev.eventtype_3 = 'Yearly Kickoff'\n\n\t----- bird -----\tstudent_club",
    "1387": "\nSELECT m.nameslist_1, m.lastnames_2 \nFROM member m\nJOIN event e ON m.recordids_0 = e.recordid_6\nWHERE e.eventslist_1 LIKE '%Yearly Kickoff%' AND e.eventtype_3 = 'Budget Management'\n\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT m.nameslist_1 || ' ' || m.lastnames_2 AS full_name, i.fundingsources_4 AS income_source, SUM(i.valueslist_2) AS total_income\nFROM member m\nJOIN income i ON m.recordids_0 = i.recordidentifier_5\nGROUP BY m.nameslist_1, m.lastnames_2, i.fundingsources_4\nORDER BY total_income DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1389": "\nSELECT e.recordids_0, SUM(exp.numericdata_3) AS total_cost\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nJOIN expense exp ON b.recordids_0 = exp.uniqueidentifier_6\nGROUP BY e.recordids_0\nORDER BY total_cost ASC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1390": "\nWITH TotalCost AS (\n    SELECT SUM(numericdata_3) AS total_cost\n    FROM expense\n),\nYearlyKickoffCost AS (\n    SELECT SUM(numericdata_3) AS yearly_kickoff_cost\n    FROM expense e\n    JOIN event ev ON e.recordid_5 = ev.recordids_0\n    WHERE ev.eventtype_3 = 'Yearly Kickoff'\n)\nSELECT (yk.yearly_kickoff_cost * 100.0 / tc.total_cost) AS percentage_of_total_cost\nFROM YearlyKickoffCost yk, TotalCost tc;\n\n\t----- bird -----\tstudent_club",
    "1391": "\nSELECT \n    (SELECT COUNT(*) FROM major WHERE majorsandfields_1 = 'finance') * 1.0 /\n    (SELECT COUNT(*) FROM major WHERE majorsandfields_1 = 'physics')\n\n\t----- bird -----\tstudent_club",
    "1392": "\nSELECT fundingsources_4, SUM(valueslist_2) AS total_income\nFROM income\nWHERE datecolumn_1 BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY fundingsources_4\nORDER BY total_income DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1393": "\nSELECT nameslist_1, lastnames_2, emailaddresses_3 \nFROM member \nWHERE memberstatus_4 = 'Secretary';\n\n\t----- bird -----\tstudent_club",
    "1394": "\nSELECT COUNT(*) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 LIKE '%Physics Teaching%'\nAND m.nameslist_1 IN (SELECT nameslist_1 FROM member WHERE recordids_8 IN (SELECT recordids_0 FROM major WHERE departmentname_2 = 'Student_Club'))\n\n\t----- bird -----\tstudent_club",
    "1395": "\nSELECT COUNT(DISTINCT a.recordid_0) \nFROM attendance AS a\nJOIN event AS e ON a.recordid_0 = e.recordids_0\nWHERE e.eventtype_3 = 'Community Theater' AND CAST(SUBSTR(e.timestampdata_2, 1, 4) AS INTEGER) = 2019;\n\n\t----- bird -----\tstudent_club",
    "1396": "\nSELECT COUNT(a.recordid_0) AS number_of_events_attended, m.majorsandfields_1 AS major\nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nWHERE m.nameslist_1 = 'Luisa' AND m.lastnames_2 = 'Guidi';\n\n\t----- bird -----\tstudent_club",
    "1397": "\nSELECT AVG(numericdata_3) AS average_food_expense\nFROM expense\nJOIN budget ON expense.uniqueidentifier_6 = budget.recordids_0\nWHERE itemsavailable_1 LIKE '%food%' AND categorytype_1 = 'Event'\nGROUP BY budget.categorytype_1\n\n\t----- bird -----\tstudent_club",
    "1398": "\nSELECT e.eventslist_1, b.valueslist_2 AS total_spent\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nWHERE b.categorytype_1 LIKE '%advertisement%'\nORDER BY b.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1399": "\nSELECT CASE WHEN t1.recordids_0 IS NOT NULL THEN 'Yes' ELSE 'No' END AS attended\nFROM event AS e\nJOIN attendance AS a ON e.recordids_0 = a.recordid_0\nJOIN member AS m ON a.recordidentifier_1 = m.recordids_0\nWHERE e.eventslist_1 = 'Women''s Soccer'\nAND m.nameslist_1 = 'Maya' AND m.lastnames_2 = 'Mclean';\n\n\t----- bird -----\tstudent_club",
    "1400": "\nSELECT CAST(COUNT(CASE WHEN eventtype_3 = 'Community Service' THEN 1 END) AS REAL) * 100 / COUNT(*) AS percentage_share\nFROM event\nWHERE locationorfacility_5 LIKE '%Student_Club%' AND timestampdata_2 BETWEEN '2019-01-01' AND '2019-12-31'\n\n\t----- bird -----\tstudent_club",
    "1401": "\nSELECT numericdata_3 \nFROM expense \nJOIN event ON expense.recordid_5 = event.recordids_0 \nWHERE event.eventtype_3 = 'September Speaker' AND itemsavailable_1 LIKE '%posters%'\n\n\t----- bird -----\tstudent_club",
    "1402": "\nSELECT shirtsize_5, COUNT(shirtsize_5) AS popularity\nFROM member\nGROUP BY shirtsize_5\nORDER BY popularity DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT e.eventslist_1, b.valueslist_2 - ex.numericdata_3 AS cost_difference\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nJOIN expense ex ON e.recordids_0 = ex.uniqueidentifier_6\nWHERE e.status_6 = 'closed'\nORDER BY cost_difference DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1404": "\nSELECT E.eventtype_3, SUM(B.valueslist_2) AS total_value_approved\nFROM event E\nJOIN budget B ON E.recordids_0 = B.recordid_6\nWHERE E.eventtype_3 = 'October Meeting'\nGROUP BY E.eventtype_3\n\n\t----- bird -----\tstudent_club",
    "1405": "\nSELECT categorytype_1, valueslist_2 FROM budget WHERE recordid_6 = (SELECT recordids_0 FROM event WHERE eventslist_1 = 'April Speaker') ORDER BY valueslist_2 ASC\n\n\t----- bird -----\tstudent_club",
    "1406": "\nSELECT recordids_0, MAX(valueslist_2) AS max_budgeted_amount\nFROM budget\nWHERE categorytype_1 = 'Food'\nGROUP BY recordids_0\nORDER BY max_budgeted_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT recordids_0, valueslist_2 FROM budget WHERE categorytype_1 = 'Advertising' ORDER BY valueslist_2 DESC LIMIT 3\n\n\t----- bird -----\tstudent_club",
    "1408": "\nSELECT SUM(numericdata_3) AS total_parking_cost\nFROM expense\nWHERE itemsavailable_1 = 'Parking'\n\n\t----- bird -----\tstudent_club",
    "1409": "\nSELECT SUM(numericdata_3) AS total_expense\nFROM expense\nWHERE datecolumn_2 = '8/20/2019';\n\n\t----- bird -----\tstudent_club",
    "1410": "\nSELECT m.nameslist_1 || ' ' || m.lastnames_2 AS full_name, SUM(e.numericdata_3) AS total_cost\nFROM member m\nJOIN expense e ON m.recordids_0 = e.recordid_5\nWHERE m.recordids_0 = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.nameslist_1, m.lastnames_2\n\n\t----- bird -----\tstudent_club",
    "1411": "\nSELECT e.itemsavailable_1, e.numericdata_3 \nFROM expense AS e\nJOIN member AS m ON e.recordid_5 = m.recordids_0\nWHERE m.nameslist_1 = 'Sacha' AND m.lastnames_2 = 'Harrison'\n\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT e.itemsavailable_1, e.numericdata_3 \nFROM expense AS e\nJOIN member AS m ON e.recordid_5 = m.recordids_0\nWHERE m.shirtsize_5 = 'X-Large'\n\n\t----- bird -----\tstudent_club",
    "1413": "\nSELECT T3.location_4 FROM member AS T1 JOIN income AS T2 ON T1.recordids_0 = T2.recordidentifier_5 JOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 WHERE T2.valueslist_2 < 50\n\n\t----- bird -----\tstudent_club",
    "1414": "\nSELECT T3.majorsandfields_1 FROM member AS T1 JOIN attendance AS T2 ON T1.recordids_0 = T2.recordid_0 JOIN major AS T3 ON T2.recordidentifier_1 = T3.recordids_0 WHERE T1.nameslist_1 = 'Phillip' AND T1.lastnames_2 = 'Cullen'\n\n\t----- bird -----\tstudent_club",
    "1415": "\nSELECT m.nameslist_1, m.lastnames_2, ma.departmentname_2 \nFROM member m\nJOIN major ma ON m.recordids_0 = ma.recordids_0\nWHERE ma.majorsandfields_1 LIKE '%Business%'\nORDER BY m.nameslist_1, m.lastnames_2;\n\n\t----- bird -----\tstudent_club",
    "1416": "\nSELECT COUNT(m.recordids_0) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.departmentname_2 = 'Business' AND m.shirtsize_5 = 'Medium'\n\n\t----- bird -----\tstudent_club",
    "1417": "\nSELECT DISTINCT e.eventtype_3 \nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nWHERE (b.valueslist_2 - COALESCE((SELECT SUM(numericdata_3) FROM expense WHERE recordid_5 = e.recordids_0), 0)) > 30\n\n\t----- bird -----\tstudent_club",
    "1418": "\nSELECT DISTINCT T1.eventtype_3 \nFROM event AS T1 \nJOIN zip_code AS T2 ON T1.locationorfacility_5 = T2.locationnames_2 \nWHERE T1.locationorfacility_5 = 'MU 215'\n\n\t----- bird -----\tstudent_club",
    "1419": "\nSELECT event.eventtype_3 FROM event WHERE event.timestampdata_2 = '2020-03-24T12:00:00'\n\n\t----- bird -----\tstudent_club",
    "1420": "\nSELECT T2.majorsandfields_1 FROM member AS T1 JOIN major AS T2 ON T1.recordids_0 = T2.recordids_0 WHERE T1.memberstatus_4 = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1421": "\nSELECT CAST(COUNT(m.recordids_0) AS FLOAT) / (SELECT COUNT(recordids_0) FROM member) * 100\nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 = 'Mathematics'\n\n\t----- bird -----\tstudent_club",
    "1422": "\nSELECT DISTINCT T1.eventtype_3 \nFROM event AS T1 \nJOIN zip_code AS T2 ON T1.locationorfacility_5 = T2.locationnames_2 \nWHERE T2.locationnames_2 = 'MU 215';\n\n\t----- bird -----\tstudent_club",
    "1423": "\nSELECT COUNT(recordids_0) FROM income WHERE valueslist_2 = 50\n\n\t----- bird -----\tstudent_club",
    "1424": "\nSELECT COUNT(*) FROM member WHERE shirtsize_5 = 'Extra Large'\n\n\t----- bird -----\tstudent_club",
    "1425": "\nSELECT COUNT(*) \nFROM major \nWHERE departmentname_2 = 'School of Applied Sciences, Technology and Education' AND collegename_3 = 'College of Agriculture and Applied Sciences';\n\n\t----- bird -----\tstudent_club",
    "1426": "\nSELECT m.lastnames, major.departmentname, major.collegename \nFROM member AS m\nJOIN major ON m.recordids_8 = major.recordids_0\nWHERE major.majorsandfields_1 = 'Environmental Engineering'\n\n\t----- bird -----\tstudent_club",
    "1427": "\nSELECT b.categorytype_1 FROM event e JOIN budget b ON e.recordids_0 = b.recordid_6 WHERE e.locationorfacility_5 = 'MU 215' AND e.eventtype_3 = 'guest speaker' AND b.valueslist_2 = 0 AND b.status_5 = 'spent'\n\n\t----- bird -----\tstudent_club",
    "1428": "\nSELECT T3.locationnames_2, T3.statecode_5 \nFROM member AS T1\nJOIN major AS T2 ON T1.recordids_0 = T2.recordids_0\nJOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0\nWHERE T2.departmentname_2 = 'electrical and computer engineering'\n\n\t----- bird -----\tstudent_club",
    "1429": "\nSELECT e.eventslist_1 FROM event AS e\nJOIN attendance AS a ON e.recordids_0 = a.recordid_0\nJOIN member AS m ON a.recordidentifier_1 = m.recordids_0\nJOIN major AS ma ON m.recordids_8 = ma.recordids_0\nWHERE m.nameslist_1 = 'vice president' AND ma.collegename_3 = 'Student_Club' AND e.locationorfacility_5 = '900 E. Washington St.' AND e.eventtype_3 = 'social';\n\n\t----- bird -----\tstudent_club",
    "1430": "\nSELECT m.lastnames, e.eventslist_1 AS position\nFROM member m\nJOIN event e ON m.recordids_0 = e.recordids_0\nJOIN expense ex ON ex.recordid_5 = m.recordids_0\nWHERE ex.datecolumn_2 = '09/10/2019' AND ex.itemsavailable_1 LIKE '%pizza%'\n\n\t----- bird -----\tstudent_club",
    "1431": "\nSELECT m.lastnames FROM member AS m\nJOIN attendance AS a ON m.recordids_0 = a.recordid_0\nJOIN event AS e ON a.recordidentifier_1 = e.recordids_0\nWHERE e.eventtype_3 = 'women''s soccer' AND m.memberstatus_4 = 'active'\n\n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT CAST(SUM(CASE WHEN i.fundingsources_4 = 'Student_Club' AND i.valueslist_2 = 50 THEN i.valueslist_2 ELSE 0 END) AS REAL) * 100 / SUM(i.valueslist_2) AS percentage\nFROM income i\nJOIN member m ON i.recordidentifier_5 = m.recordids_0\nWHERE m.shirtsize_5 = 'medium'\n\n\t----- bird -----\tstudent_club",
    "1433": "\nSELECT DISTINCT T1.statecode_5 AS country\nFROM zip_code AS T1\nWHERE T1.deliverytype_1 = 'Post Office Box'\nGROUP BY T1.statecode_5\n\n\t----- bird -----\tstudent_club",
    "1434": "\nSELECT T1.location_4 FROM zip_code AS T1 JOIN major AS T2 ON 1 = 1 WHERE T1.statecode_5 = 'PR' AND T1.locationnames_2 LIKE '%San Juan Municipio%' AND T1.deliverytype_1 = 'Post Office Box'\n\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT eventslist_1 AS game\nFROM event\nWHERE status_6 = 'closed'\nAND eventtype_3 = 'game'\nAND timestampdata_2 BETWEEN '2019-03-15' AND '2020-03-20';\n\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT e.eventslist_1, i.recordidentifier_5 \nFROM event AS e\nJOIN income AS i ON e.recordids_0 = i.recordidentifier_5\nWHERE i.valueslist_2 > 50;\n\n\t----- bird -----\tstudent_club",
    "1437": "\nSELECT m.nameslist_1, m.lastnames_2, a.recordid_0 \nFROM member m\nJOIN attendance a ON m.recordids_0 = a.recordid_0\nWHERE m.memberstatus_4 = 'approved' AND EXISTS (\n    SELECT 1 FROM event e WHERE a.recordidentifier_1 = e.recordids_0 AND e.timestampdata_2 BETWEEN '2019-01-10' AND '2019-11-19'\n)\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT T2.collegename FROM member AS T1 JOIN major AS T2 ON T1.recordids_8 = T2.recordids_0 WHERE T1.nameslist_1 = 'Katy' AND T1.recordids_8 = 'rec1N0upiVLy5esTO'\n\n\t----- bird -----\tstudent_club",
    "1439": "\nSELECT m.phone_numbers_6\nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 LIKE '%Business%' AND ma.collegename_3 = 'College of Agriculture and Applied Sciences'\n\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT DISTINCT m.emailaddresses_3\nFROM income i\nJOIN member m ON i.recordidentifier_5 = m.recordids_0\nWHERE i.valueslist_2 > 20 AND i.datecolumn_1 BETWEEN '9/10/2019' AND '11/19/2019'\n\n\t----- bird -----\tstudent_club",
    "1441": "\nSELECT COUNT(*) \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.collegename_3 = 'College of Education & Human Services' AND ma.departmentname_2 = 'Education';\n\n\t----- bird -----\tstudent_club",
    "1442": "\nSELECT CAST(COUNT(CASE WHEN budget.valueslist_2 < SUM(expense.numericdata_3) THEN 1 END) AS REAL) * 100 / COUNT(budget.recordids_0) AS percentage_over_budget\nFROM budget\nJOIN expense ON budget.recordids_0 = expense.uniqueidentifier_6\nGROUP BY budget.recordids_0\n\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT e.recordids_0 AS event_id, e.locationorfacility_5 AS location, e.status_6 AS status\nFROM event e\nWHERE e.timestampdata_2 BETWEEN '2019-11-01' AND '2020-03-31';\n\n\t----- bird -----\tstudent_club",
    "1444": "\nSELECT itemsavailable_1, AVG(numericdata_3) AS average_spending\nFROM expense\nGROUP BY itemsavailable_1\nHAVING AVG(numericdata_3) > 50;\n\n\t----- bird -----\tstudent_club",
    "1445": "\nSELECT nameslist_1, lastnames_2 FROM member WHERE shirtsize_5 = 'extra large'\n\n\t----- bird -----\tstudent_club",
    "1446": "\nSELECT CAST(COUNT(CASE WHEN deliverytype_1 = 'PO Box' THEN ids_0 END) AS FLOAT) * 100 / COUNT(ids_0) AS po_box_percentage\nFROM zip_code\n\n\t----- bird -----\tstudent_club",
    "1447": "\nSELECT e.eventslist_1, z.locationnames_2 \nFROM event AS e\nJOIN budget AS b ON e.recordids_0 = b.recordid_6\nJOIN zip_code AS z ON e.locationorfacility_5 = z.geographicalarea_3\nWHERE b.valueslist_2 > b.valueslist_3;\n\n\t----- bird -----\tstudent_club",
    "1448": "\nSELECT e.eventslist_1, e.timestampdata_2 \nFROM event e\nJOIN expense ex ON e.recordids_0 = ex.recordid_5\nWHERE ex.itemsavailable_1 LIKE '%pizza%' AND ex.numericdata_3 > 50 AND ex.numericdata_3 < 100\n\n\t----- bird -----\tstudent_club",
    "1449": "\nSELECT m.nameslist_1, m.lastnames_2, maj.majorsandfields_1 \nFROM member m\nJOIN expense exp ON m.recordids_0 = exp.recordid_5\nJOIN major maj ON m.recordids_8 = maj.recordids_0\nWHERE exp.numericdata_3 > 100;\n\n\t----- bird -----\tstudent_club",
    "1450": "\nSELECT DISTINCT e.locationorfacility_5, z.geographicalarea_3 \nFROM event e\nJOIN income i ON e.recordids_0 = i.recordidentifier_5\nJOIN zip_code z ON SUBSTRING_INDEX(e.locationorfacility_5, ',', -1) = z.statecode_5\nGROUP BY e.recordids_0\nHAVING COUNT(i.recordids_0) > 40;\n\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT m.recordids_0, SUM(e.numericdata_3) AS total_expenses\nFROM member m\nJOIN expense e ON m.recordids_0 = e.recordid_5\nGROUP BY m.recordids_0\nHAVING COUNT(DISTINCT e.uniqueidentifier_6) > 1\nORDER BY total_expenses DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1452": "\nSELECT AVG(i.valueslist_2) AS average_amount_paid\nFROM income i\nJOIN member m ON i.recordidentifier_5 = m.recordids_0\nWHERE m.memberstatus_4 != 'member'\n\n\t----- bird -----\tstudent_club",
    "1453": "\nSELECT e.eventslist_1\nFROM event e\nJOIN expense ex ON e.recordids_0 = ex.recordid_5\nWHERE ex.itemsavailable_1 LIKE '%parking%'\nGROUP BY e.eventslist_1, SUM(ex.numericdata_3)\nHAVING SUM(ex.numericdata_3) < (SELECT AVG(numericdata_3) FROM expense WHERE itemsavailable_1 LIKE '%parking%')\n\n\t----- bird -----\tstudent_club",
    "1454": "\nSELECT SUM(b.valueslist_2) * 100 / (SELECT SUM(valueslist_2) FROM budget WHERE recordid_6 IN (SELECT recordids_0 FROM event WHERE eventtype_3 = 'game')) AS percentage_cost_for_game_events\nFROM budget b\nJOIN event e ON b.recordid_6 = e.recordids_0\nWHERE e.eventtype_3 = 'game' AND b.categorytype_1 = 'cost'\n\n\t----- bird -----\tstudent_club",
    "1455": "\nSELECT b.recordids_0, SUM(b.valueslist_2) AS total_amount\nFROM budget b\nJOIN expense e ON b.recordids_0 = e.uniqueidentifier_6\nWHERE b.categorytype_1 IN ('water', 'chips', 'cookies')\nGROUP BY b.recordids_0\nORDER BY total_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1456": "\nSELECT m.nameslist_1, m.lastnames_2, SUM(e.numericdata_3) AS total_spending\nFROM member m\nJOIN expense e ON m.recordids_0 = e.recordid_5\nGROUP BY m.recordids_0\nORDER BY total_spending DESC\nLIMIT 5\n\n\t----- bird -----\tstudent_club",
    "1457": "\nSELECT m.nameslist_1, m.lastnames_2, m.phone_numbers_6 \nFROM member m\nJOIN expense e ON m.recordids_0 = e.recordid_5\nWHERE e.numericdata_3 > (SELECT AVG(numericdata_3) FROM expense)\n\n\t----- bird -----\tstudent_club",
    "1458": "\nSELECT \n    (COUNT(CASE WHEN z.statecode_5 = 'ME' THEN m.recordids_0 ELSE NULL END) * 100.0 / COUNT(m.recordids_0)) -\n    (COUNT(CASE WHEN z.statecode_5 = 'VT' THEN m.recordids_0 ELSE NULL END) * 100.0 / COUNT(m.recordids_0))\nFROM \n    member m\nJOIN \n    zip_code z ON m.userids_7 = z.ids_0\n\n\t----- bird -----\tstudent_club",
    "1459": "\nSELECT major.majorsandfields_1, major.departmentname_2 \nFROM member \nJOIN major ON member.recordids_0 = major.recordids_0 \nWHERE member.nameslist_1 = 'Garrett' AND member.lastnames_2 = 'Gerke'\n\n\t----- bird -----\tstudent_club",
    "1460": "\nSELECT m.nameslist_1, m.lastnames_2, e.numericdata_3 \nFROM member m\nJOIN expense e ON m.recordids_0 = e.recordid_5\nWHERE e.itemsavailable_1 IN ('water', 'veggie tray', 'supplies')\n\n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT m.lastnames, m.phone_numbers \nFROM member m\nJOIN major ma ON m.recordids_8 = ma.recordids_0\nWHERE ma.majorsandfields_1 = 'Elementary Education'\n\n\t----- bird -----\tstudent_club",
    "1462": "\nSELECT b.categorytype_1, SUM(b.valueslist_2) AS budgeted_amount\nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nWHERE e.eventtype_3 = 'January Speaker'\nGROUP BY b.categorytype_1\n\n\t----- bird -----\tstudent_club",
    "1463": "\nSELECT DISTINCT e.eventslist_1 \nFROM event e\nJOIN budget b ON e.recordids_0 = b.recordid_6\nWHERE b.categorytype_1 LIKE '%food%'\n\n\t----- bird -----\tstudent_club",
    "1464": "\nSELECT M.nameslist_1 || ' ' || M.lastnames_2 AS full_name, I.valueslist_2 AS amount_received\nFROM member M\nJOIN income I ON M.recordids_0 = I.recordidentifier_5\nWHERE I.datecolumn_1 = '9/9/2019'\nAND I.fundingsources_4 IS NOT NULL;\n\n\t----- bird -----\tstudent_club",
    "1465": "\nSELECT b.categorytype_1 FROM budget AS b JOIN expense AS e ON b.recordids_0 = e.recordid_5 WHERE e.itemsavailable_1 = 'Posters'\n\n\t----- bird -----\tstudent_club",
    "1466": "\nSELECT m.nameslist_1, m.lastnames_2, maj.collegename_3 \nFROM member m\nJOIN major maj ON m.recordids_8 = maj.recordids_0\nWHERE m.memberstatus_4 = 'Secretary'\n\n\t----- bird -----\tstudent_club",
    "1467": "\nSELECT SUM(e.numericdata_3) AS total_spent, b.eventslist_1 AS event_name\nFROM expense e\nJOIN budget b ON e.uniqueidentifier_6 = b.recordids_0\nWHERE b.categorytype_1 LIKE '%speaker gifts%'\nGROUP BY b.eventslist_1\n\n\t----- bird -----\tstudent_club",
    "1468": "\nSELECT T3.location_4 FROM member AS T1 JOIN zip_code AS T2 ON T1.userids_7 = T2.ids_0 JOIN zip_code AS T3 ON T1.userids_7 = T3.ids_0 WHERE T1.nameslist_1 = 'Garrett' AND T1.lastnames_2 = 'Girke'\n\n\t----- bird -----\tstudent_club",
    "1469": "\nSELECT m.nameslist_1, m.lastnames_2, z.locationnames_2 AS hometown FROM member m JOIN zip_code z ON m.userids_7 = z.ids_0 WHERE z.locationnames_2 = 'Lincolnton' AND z.statecode_5 = 'NC' AND z.ids_0 = 28092\n\n\t----- bird -----\tstudent_club",
    "1470": "\nSELECT COUNT(*) \nFROM gasstations \nWHERE countrycode_2 = 'CZE' AND valuefor_moneyorpremium_3 = 'Premium'\n\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT \n    SUM(CASE WHEN currencycode_2 = 'EUR' THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS eur_ratio,\n    SUM(CASE WHEN currencycode_2 = 'CZK' THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS czk_ratio\nFROM customers\n\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT c.sme_lam_kam_1, ym.valueslist_2 AS consumption\nFROM yearmonth ym\nJOIN customers c ON ym.ratingvalues_0 = c.numberslist_0\nWHERE ym.yearmonth_1 LIKE '2012%'\nGROUP BY c.sme_lam_kam_1, ym.valueslist_2\nORDER BY consumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT ym.yearmonth_1, AVG(t.valueslist_8) AS average_consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON DATE_PART('year', t.datecolumn_1) = EXTRACT(YEAR FROM ym.yearmonth_1::date)\nAND DATE_PART('month', t.datecolumn_1) = EXTRACT(MONTH FROM ym.yearmonth_1::date)\nJOIN customers c ON t.userids_3 = c.numberslist_0\nWHERE c.sme_lam_kam_1 = 'SME' AND EXTRACT(YEAR FROM ym.yearmonth_1::date) = 2013\nGROUP BY ym.yearmonth_1\nORDER BY ym.yearmonth_1 ASC;\n\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT c.sme_lam_kam_1, SUM(t.valueslist_8) AS total_gas_consumption\nFROM customers c\nJOIN yearmonth ym ON c.numberslist_0 = ym.ratingvalues_0\nJOIN transactions_1k t ON c.numberslist_0 = t.userids_3\nWHERE c.currencycode_2 = 'CZK' AND ym.yearmonth_1 LIKE '2011%'\nGROUP BY c.sme_lam_kam_1\nORDER BY total_gas_consumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1475": "\nSELECT COUNT(c.numberslist_0) \nFROM customers c\nJOIN yearmonth ym ON c.numberslist_0 = ym.ratingvalues_0\nWHERE c.sme_lam_kam_1 = 'KAM' AND ym.yearmonth_1 LIKE '2012%' AND ym.valueslist_2 < 30000\n\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT \n    c.currencycode_2, \n    SUM(t.valueslist_8) AS total_consumption\nFROM \n    transactions_1k t\nJOIN \n    yearmonth ym ON EXTRACT(YEAR FROM t.datecolumn_1) = EXTRACT(YEAR FROM ym.yearmonth_1::date)\nJOIN \n    customers c ON t.userids_3 = c.numberslist_0\nWHERE \n    EXTRACT(YEAR FROM ym.yearmonth_1::date) = 2012\nGROUP BY \n    c.currencycode_2;\n\n\t----- bird -----\tdebit_card_specializing",
    "1477": "\nWITH TotalGasUse AS (\n    SELECT \n        ym.yearmonth_1,\n        SUM(t.valueslist_8) AS total_use\n    FROM \n        transactions_1k t\n    JOIN \n        yearmonth ym ON DATE_PART('year', t.datecolumn_1) = CAST(SUBSTRING(ym.yearmonth_1, 1, 4) AS INT)\n                     AND DATE_PART('month', t.datecolumn_1) = CAST(SUBSTRING(ym.yearmonth_1, 6, 2) AS INT)\n    JOIN \n        gasstations gs ON t.numberslist_6 = gs.valueslist_1\n    JOIN \n        customers c ON gs.countrycode_2 = c.currencycode_2\n    WHERE \n        c.currencycode_2 = 'EUR'\n    GROUP BY \n        ym.yearmonth_1\n)\nSELECT \n    yearmonth_1,\n    total_use\nFROM \n    TotalGasUse\nORDER BY \n    total_use DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT t.productcategories, SUM(t.valueslist_8) AS total_consumption\nFROM transactions_1k a\nJOIN products t ON a.productids_5 = t.sequentialnumbers_0\nGROUP BY t.productcategories\nORDER BY total_consumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT yearmonth_1, SUM(valueslist_2) AS total_consumption\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nJOIN yearmonth ym ON t.userids_3 = ym.ratingvalues_0\nWHERE currencycode_2 = 'CZK'\nGROUP BY yearmonth_1\nORDER BY total_consumption DESC\nLIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1480": "\nSELECT T2.yearmonth_1, SUM(T1.valueslist_8) AS total_consumption\nFROM transactions_1k AS T1\nJOIN yearmonth AS T2 ON DATE_PART('year', T1.datecolumn_1) = CAST(SUBSTRING(T2.yearmonth_1 FROM 1 FOR 4) AS INTEGER)\nAND DATE_PART('month', T1.datecolumn_1) = CAST(SUBSTRING(T2.yearmonth_1 FROM 6 FOR 2) AS INTEGER)\nJOIN customers AS T3 ON T1.userids_3 = T3.numberslist_0\nWHERE T2.yearmonth_1 LIKE '2013%' AND T3.sme_lam_kam_1 = 'SME'\nGROUP BY T2.yearmonth_1\nORDER BY total_consumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\nWITH customer_consumption AS (\n    SELECT \n        c.numberslist_0,\n        c.sme_lam_kam_1,\n        y.yearmonth_1,\n        SUM(t.valueslist_8) AS annual_consumption\n    FROM \n        customers c\n    JOIN \n        yearmonth y ON c.numberslist_0 = y.ratingvalues_0\n    JOIN \n        transactions_1k t ON c.numberslist_0 = t.userids_3 AND y.yearmonth_1 LIKE '2013%'\n    WHERE \n        c.currencycode_2 = 'CZK'\n    GROUP BY \n        c.numberslist_0, c.sme_lam_kam_1, y.yearmonth_1\n),\nranked_consumption AS (\n    SELECT \n        numberslist_0,\n        sme_lam_kam_1,\n        yearmonth_1,\n        annual_consumption,\n        RANK() OVER (PARTITION BY sme_lam_kam_1 ORDER BY annual_consumption ASC) as rank\n    FROM \n        customer_consumption\n)\nSELECT \n    r1.sme_lam_kam_1 AS category1,\n    r2.sme_lam_kam_1 AS category2,\n    AVG(r1.annual_consumption) - AVG(r2.annual_consumption) AS consumption_difference\nFROM \n    ranked_consumption r1\nJOIN \n    ranked_consumption r2 ON r1.numberslist_0 = r2.numberslist_0 AND r1.yearmonth_1 = r2.yearmonth_1 AND r1.rank = r2.rank AND r1.sme_lam_kam_1 < r2.sme_lam_kam_1\nGROUP BY \n    r1.sme_lam_kam_1, r2.sme_lam_kam_1\nORDER BY \n    consumption_difference DESC;\n\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\nWITH consumption_data AS (\n    SELECT c.numberslist_0, c.currencycode_2, ym1.yearmonth_1 AS year_month_1, ym1.valueslist_2 AS value_1, ym2.yearmonth_1 AS year_month_2, ym2.valueslist_2 AS value_2\n    FROM customers c\n    JOIN yearmonth ym1 ON c.numberslist_0 = ym1.ratingvalues_0 AND ym1.yearmonth_1 LIKE '2012%'\n    JOIN yearmonth ym2 ON c.numberslist_0 = ym2.ratingvalues_0 AND ym2.yearmonth_1 LIKE '2013%'\n    WHERE c.currencycode_2 = 'EUR'\n),\nsegment_data AS (\n    SELECT cd.year_month_1, cd.year_month_2, c.sme_lam_kam_1 AS segment, (cd.value_2 - cd.value_1) / cd.value_1 * 100.0 AS percentage_increase\n    FROM consumption_data cd\n    JOIN customers c ON cd.numberslist_0 = c.numberslist_0\n)\nSELECT segment, MAX(percentage_increase) AS max_percentage_increase, MIN(percentage_increase) AS min_percentage_increase\nFROM segment_data\nGROUP BY segment;\n\n\t----- bird -----\tdebit_card_specializing",
    "1483": "\nSELECT SUM(t4.valueslist_8) AS total_consumption\nFROM yearmonth t1\nJOIN customers t2 ON t1.ratingvalues_0 = t2.numberslist_0\nJOIN transactions_1k t4 ON t2.numberslist_0 = t4.userids_3\nWHERE t2.numberslist_0 = 6 AND t1.yearmonth_1 BETWEEN '2013-08' AND '2013-11'\n\n\t----- bird -----\tdebit_card_specializing",
    "1484": "\nSELECT \n    SUM(CASE WHEN T2.countrycode_2 = 'CZ' THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN T2.countrycode_2 = 'SK' THEN 1 ELSE 0 END) AS discount_difference\nFROM gasstations AS T2\nJOIN products AS T3 ON T2.valueslist_1 = T3.sequentialnumbers_0\nWHERE T3.productcategories_1 = 'discount'\nAND (T2.countrycode_2 = 'CZ' OR T2.countrycode_2 = 'SK')\n\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT (SELECT valueslist_2 FROM yearmonth WHERE ratingvalues_0 = 7 AND yearmonth_1 = '2013-04') - \n       (SELECT valueslist_2 FROM yearmonth WHERE ratingvalues_0 = 5 AND yearmonth_1 = '2013-04') AS consumption_difference\n\n\t----- bird -----\tdebit_card_specializing",
    "1486": "\nSELECT \n    COUNT(*) FILTER (WHERE currencycode_2 = 'CZK') - COUNT(*) FILTER (WHERE currencycode_2 = 'EUR') AS difference\nFROM customers\nWHERE currencycode_2 IN ('CZK', 'EUR')\n\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT c.sme_lam_kam_1, y.valueslist_2 AS consumption\nFROM customers c\nJOIN yearmonth y ON c.numberslist_0 = y.ratingvalues_0\nWHERE c.currencycode_2 = 'Euro' AND y.yearmonth_1 = '2013-10'\nORDER BY y.valueslist_2 DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1488": "\nSELECT T2.sme_lam_kam_1, SUM(T4.valueslist_8) AS total_consumption\nFROM yearmonth AS T1\nJOIN customers AS T2 ON T1.ratingvalues_0 = T2.numberslist_0\nJOIN transactions_1k AS T4 ON T2.numberslist_0 = T4.userids_3\nWHERE T2.sme_lam_kam_1 IS NOT NULL\nGROUP BY T2.sme_lam_kam_1\nORDER BY total_consumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(t4.valueslist_8) \nFROM customers AS t1\nJOIN yearmonth AS t2 ON t1.numberslist_0 = t2.ratingvalues_0\nJOIN transactions_1k AS t4 ON t1.numberslist_0 = t4.userids_3\nWHERE t1.sme_lam_kam_1 = 'KAM' AND t2.yearmonth_1 = 'May 2013'\n\n\t----- bird -----\tdebit_card_specializing",
    "1490": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM customers WHERE sme_lam_kam_1 = 'LAM') * 100 \nFROM transactions_1k t JOIN yearmonth ym ON t.sequentialnumbers_0 = ym.ratingvalues_0\nJOIN customers c ON t.numberslist_6 = c.numberslist_0\nWHERE c.sme_lam_kam_1 = 'LAM' AND t.valueslist_8 > 46.73\n\n\t----- bird -----\tdebit_card_specializing",
    "1491": "\nSELECT T2.countrycode_2, COUNT(T2.numberscolumn_0) AS value_for_money_stations_count\nFROM gasstations AS T2\nWHERE T2.valuefor_moneyorpremium_3 = 'value for money'\nGROUP BY T2.countrycode_2\nORDER BY value_for_money_stations_count DESC\n\n\t----- bird -----\tdebit_card_specializing",
    "1492": "\nSELECT CAST(COUNT(CASE WHEN currencycode_2 = 'EUR' THEN 1 END) AS FLOAT) * 100 / COUNT(*) FROM customers WHERE sme_lam_kam_1 = 'KAM'\n\n\t----- bird -----\tdebit_card_specializing",
    "1493": "\nSELECT CAST(COUNT(CASE WHEN t.valueslist_8 > 528.3 THEN y.ratingvalues_0 END) AS FLOAT) * 100 / COUNT(y.ratingvalues_0) AS percentage\nFROM yearmonth y\nJOIN transactions_1k t ON y.ratingvalues_0 = t.userids_3\nWHERE y.yearmonth_1 = '2012-02'\n\n\t----- bird -----\tdebit_card_specializing",
    "1494": "\nSELECT CAST(COUNT(CASE WHEN valuefor = 'moneyorpremium' THEN 1 END) AS REAL) * 100 / COUNT(*) FROM gasstations WHERE countrycode_2 = 'SK'\n\n\t----- bird -----\tdebit_card_specializing",
    "1495": "\nSELECT T4.numberslist_6 \nFROM transactions_1k AS T4 \nJOIN yearmonth AS T5 ON EXTRACT(YEAR FROM T4.datecolumn_1) = EXTRACT(YEAR FROM TO_DATE(T5.yearmonth_1, 'YYYY-MM')) AND EXTRACT(MONTH FROM T4.datecolumn_1) = EXTRACT(MONTH FROM TO_DATE(T5.yearmonth_1, 'YYYY-MM'))\nWHERE T5.yearmonth_1 = '2013-09'\nGROUP BY T4.numberslist_6\nORDER BY SUM(T4.valueslist_8) DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT c.sme_lam_kam_1 AS client_segment, SUM(t.valueslist_8) AS total_consumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.sequentialnumbers_0 = ym.ratingvalues_0\nJOIN customers c ON t.userids_3 = c.numberslist_0\nWHERE ym.yearmonth_1 = '2013-09'\nGROUP BY c.sme_lam_kam_1\nORDER BY total_consumption ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT c.sme_lam_kam_1, ym.valueslist_2 AS consumption\nFROM customers c\nJOIN yearmonth ym ON c.numberslist_0 = ym.ratingvalues_0\nWHERE ym.yearmonth_1 = '2012-06'\nORDER BY ym.valueslist_2 ASC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1498": "\nSELECT MAX(valueslist_2) AS highest_monthly_consumption\nFROM yearmonth\nWHERE yearmonth_1 LIKE '2012-%'\n\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT MAX(y.yearmonth_1), MAX(t.valueslist_8) AS biggest_consumption\nFROM yearmonth y\nJOIN transactions_1k t ON y.ratingvalues_0 = t.userids_3\nJOIN customers c ON c.numberslist_0 = y.ratingvalues_0\nWHERE c.currencycode_2 = 'euro'\nGROUP BY y.yearmonth_1\nORDER BY biggest_consumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT p.productcategories AS product_description\nFROM transactions_1k t\nJOIN products p ON t.productids_5 = p.sequentialnumbers_0\nWHERE EXTRACT(YEAR FROM t.datecolumn_1) = 2013 AND EXTRACT(MONTH FROM t.datecolumn_1) = 9\nGROUP BY p.productcategories\n\n\t----- bird -----\tdebit_card_specializing",
    "1501": "\nSELECT DISTINCT gs.countrycode_2\nFROM gasstations gs\nJOIN transactions_1k t ON gs.valueslist_1 = t.numberslist_6\nWHERE EXTRACT(YEAR FROM t.datecolumn_1) = 2013 AND EXTRACT(MONTH FROM t.datecolumn_1) = 6\n\n\t----- bird -----\tdebit_card_specializing",
    "1502": "\nSELECT DISTINCT t1.valueslist_1, t2.currencycode_2 \nFROM gasstations AS t1\nJOIN yearmonth AS t3 ON t1.numberscolumn_0 = t3.ratingvalues_0\nJOIN customers AS t2 ON t3.ratingvalues_0 = t2.numberslist_0\nWHERE t2.currencycode_2 = 'EUR'\n\n\t----- bird -----\tdebit_card_specializing",
    "1503": "\nSELECT p.productcategories AS product_description, t.valueslist_8 AS transaction_value\nFROM transactions_1k t\nJOIN products p ON t.productids_5 = p.sequentialnumbers_0\nJOIN yearmonth ym ON t.sequentialnumbers_0 = ym.ratingvalues_0\nJOIN customers c ON ym.ratingvalues_0 = c.numberslist_0\nWHERE c.currencycode_2 = 'EUR'\n\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(valueslist_8) AS average_total_price\nFROM transactions_1k\nWHERE datecolumn_1 BETWEEN '2012-01-01' AND '2012-01-31';\n\n\t----- bird -----\tdebit_card_specializing",
    "1505": "\nSELECT COUNT(DISTINCT c.numberslist_0) \nFROM customers c\nJOIN yearmonth ym ON c.numberslist_0 = ym.ratingvalues_0\nWHERE c.currencycode_2 = 'EUR' AND ym.valueslist_2 > 1000\n\n\t----- bird -----\tdebit_card_specializing",
    "1506": "\nSELECT p.productcategories AS product_description\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nJOIN products p ON t.productids_5 = p.sequentialnumbers_0\nWHERE g.countrycode_2 = 'CZ'\n\n\t----- bird -----\tdebit_card_specializing",
    "1507": "\nSELECT DISTINCT timeslots_2 \nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nWHERE g.countrycode_2 = 'chain_no_11'\n\n\t----- bird -----\tdebit_card_specializing",
    "1508": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nWHERE g.countrycode_2 = 'CZ' AND t.valueslist_8 > 1000\n\n\t----- bird -----\tdebit_card_specializing",
    "1509": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nWHERE g.countrycode_2 = 'CZ' AND t.datecolumn_1 > '2012-01-01'\n\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(t.valueslist_8) AS average_total_price\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nWHERE g.countrycode_2 = 'CZ'\n\n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(t.valueslist_8) AS average_total_price\nFROM transactions_1k t\nJOIN customers c ON t.numberslist_6 = c.numberslist_0\nWHERE c.currencycode_2 = 'EUR'\n\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT c.sme_lam_kam_1, SUM(t.valueslist_8) AS total_spent\nFROM transactions_1k t\nJOIN customers c ON t.userids_3 = c.numberslist_0\nWHERE t.datecolumn_1 = '2012-08-25'\nGROUP BY c.sme_lam_kam_1\nORDER BY total_spent DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1513": "\nSELECT T3.countrycode_2 FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.numberslist_6 = T2.valueslist_1 JOIN yearmonth AS T4 ON T1.sequentialnumbers_0 = T4.ratingvalues_0 JOIN customers AS T5 ON T1.userids_3 = T5.numberslist_0 JOIN products AS T6 ON T1.productids_5 = T6.sequentialnumbers_0 WHERE T1.datecolumn_1 = '2012-08-25' AND T4.yearmonth_1 = '2012/8/25' AND T6.productcategories_1 != 'free' LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1514": "\nSELECT T1.currencycode_2 FROM customers AS T1 JOIN transactions_1k AS T2 ON T1.numberslist_0 = T2.userids_3 WHERE T2.datecolumn_1 = '2012-08-24' AND T2.timeslots_2 = '16:25:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1515": "\nSELECT T4.productcategories FROM transactions_1k AS T1 JOIN yearmonth AS T2 ON T1.sequentialnumbers_0 = T2.ratingvalues_0 JOIN customers AS T3 ON T2.ratingvalues_0 = T3.numberslist_0 JOIN products AS T4 ON T1.productids_5 = T4.sequentialnumbers_0 WHERE T1.datecolumn_1 = '2012-08-23' AND T1.timeslots_2 = '21:20:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1516": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN yearmonth ym ON t.sequentialnumbers_0 = ym.ratingvalues_0\nJOIN customers c ON ym.ratingvalues_0 = c.numberslist_0\nWHERE c.currencycode_2 = 'EUR'\nAND t.datecolumn_1 = '2012-08-26'\nAND t.timeslots_2 LIKE '%morning%'\n\n\t----- bird -----\tdebit_card_specializing",
    "1517": "\nSELECT sme_lam_kam_1 FROM customers WHERE numberslist_0 = (SELECT MIN(numberslist_0) FROM customers)\n\n\t----- bird -----\tdebit_card_specializing",
    "1518": "\nSELECT T4.countrycode_2 FROM transactions_1k AS T1 JOIN yearmonth AS T2 ON T1.sequentialnumbers_0 = T2.ratingvalues_0 JOIN gasstations AS T4 ON T1.numberslist_6 = T4.valueslist_1 WHERE T1.datecolumn_1 = '2012-08-24' AND T1.timeslots_2 = '12:42:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT productids_5 FROM transactions_1k WHERE datecolumn_1 = '2012-08-23' AND timeslots_2 = '21:20:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nWITH CustomerTransactions AS (\n    SELECT userids_3, valueslist_8, datecolumn_1\n    FROM transactions_1k\n    WHERE datecolumn_1 = '2012-08-24' AND valueslist_8 = 124.05\n),\nJanuarySpending AS (\n    SELECT t.userids_3, t.valueslist_8, t.datecolumn_1\n    FROM transactions_1k t\n    JOIN CustomerTransactions ct ON ct.userids_3 = t.userids_3\n    WHERE EXTRACT(YEAR FROM t.datecolumn_1) = 2012 AND EXTRACT(MONTH FROM t.datecolumn_1) = 1\n)\nSELECT datecolumn_1, valueslist_8 AS expenses\nFROM JanuarySpending;\n\n\t----- bird -----\tdebit_card_specializing",
    "1521": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.numberslist_6 = g.valueslist_1\nWHERE t.datecolumn_1 = '2012-08-26' AND t.timeslots_2 = '8:00-9:00' AND g.countrycode_2 = 'CZE'\n\n\t----- bird -----\tdebit_card_specializing",
    "1522": "\nSELECT T2.currencycode_2 FROM yearmonth AS T1 JOIN customers AS T2 ON T1.ratingvalues_0 = T2.numberslist_0 WHERE T1.yearmonth_1 = '2013-06' AND T1.valueslist_2 = 214582.17\n\n\t----- bird -----\tdebit_card_specializing",
    "1523": "\nSELECT T2.countrycode_2 FROM yearmonth AS T1 JOIN transactions_1k AS T3 ON T1.ratingvalues_0 = T3.sequentialnumbers_0 JOIN gasstations AS T2 ON T3.numberslist_6 = T2.valueslist_1 WHERE T1.ratingvalues_0 = 667467\n\n\t----- bird -----\tdebit_card_specializing",
    "1524": "\nSELECT T1.currencycode_2 FROM customers AS T1 JOIN yearmonth AS T2 ON T1.numberslist_0 = T2.ratingvalues_0 JOIN transactions_1k AS T3 ON T2.ratingvalues_0 = T3.userids_3 WHERE T3.valueslist_8 = 548.4 AND T3.datecolumn_1 = '2012-08-24'\n\n\t----- bird -----\tdebit_card_specializing",
    "1525": "\nSELECT CAST(COUNT(CASE WHEN T2.currencycode_2 = 'EUR' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.userids_3 = T2.numberslist_0 WHERE T1.datecolumn_1 = '2012-8-25'\n\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nWITH CustomerTransaction AS (\n    SELECT t.userids_3 AS customer_id, t.valueslist_8 AS transaction_value, y.yearmonth_1 AS year_month\n    FROM transactions_1k t\n    JOIN yearmonth y ON t.sequentialnumbers_0 = y.ratingvalues_0\n    WHERE t.valueslist_8 = 634.8 AND y.yearmonth_1 LIKE '2012%'\n),\nYearlyConsumption AS (\n    SELECT customer_id, \n           CASE WHEN EXTRACT(YEAR FROM TO_DATE(year_month, 'YYYY/MM/DD')) = 2012 THEN transaction_value END AS consumption_2012,\n           CASE WHEN EXTRACT(YEAR FROM TO_DATE(year_month, 'YYYY/MM/DD')) = 2013 THEN transaction_value END AS consumption_2013\n    FROM CustomerTransaction\n)\nSELECT (consumption_2012 - consumption_2013) / consumption_2012::float * 100 AS decrease_rate\nFROM YearlyConsumption\nWHERE consumption_2012 IS NOT NULL AND consumption_2013 IS NOT NULL;\n\n\t----- bird -----\tdebit_card_specializing",
    "1527": "\nSELECT g.numberscolumn_0, SUM(t.valueslist_8) AS total_revenue\nFROM gasstations g\nJOIN transactions_1k t ON g.valueslist_1 = t.numberslist_6\nGROUP BY g.numberscolumn_0\nORDER BY total_revenue DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1528": "\nSELECT CAST(SUM(CASE WHEN T2.valuefor = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.numberscolumn_0) AS premium_percentage\nFROM gasstations AS T2\nJOIN yearmonth AS T3 ON T2.valueslist_1 = T3.ratingvalues_0\nWHERE T2.countrycode_2 = 'SVK'\n\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nSELECT SUM(t.transactions_1k.valueslist_8) AS total_spent, \n       CASE WHEN EXTRACT(MONTH FROM t.transactions_1k.datecolumn_1) = 1 AND EXTRACT(YEAR FROM t.transactions_1k.datecolumn_1) = 2012 THEN SUM(t.transactions_1k.valueslist_8) END AS january_2012_spent\nFROM transactions_1k t\nJOIN customers c ON t.userids_3 = c.numberslist_0\nWHERE c.sme_lam_kam_1 = '38508'\nGROUP BY EXTRACT(MONTH FROM t.transactions_1k.datecolumn_1), EXTRACT(YEAR FROM t.transactions_1k.datecolumn_1)\n\n\t----- bird -----\tdebit_card_specializing",
    "1530": "\nSELECT p.productcategories AS product_name, SUM(t.valueslist_8) AS total_sales\nFROM transactions_1k t\nJOIN products p ON t.productids_5 = p.sequentialnumbers_0\nGROUP BY p.productcategories\nORDER BY total_sales DESC\nLIMIT 5\n\n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nWITH TopSpendingCustomer AS (\n    SELECT t.userids_3, SUM(t.valueslist_8) AS total_spent\n    FROM transactions_1k t\n    GROUP BY t.userids_3\n    ORDER BY total_spent DESC\n    LIMIT 1\n),\nTopCustomerTransactions AS (\n    SELECT t.*\n    FROM transactions_1k t\n    JOIN TopSpendingCustomer c ON t.userids_3 = c.userids_3\n)\nSELECT \n    c.sme_lam_kam_1,\n    AVG(t.valueslist_8) AS average_price_per_item,\n    cu.currencycode_2 AS currency_used\nFROM \n    TopCustomerTransactions t\nJOIN \n    customers c ON t.numberslist_6 = c.numberslist_0\nJOIN \n    yearmonth ym ON c.numberslist_0 = ym.ratingvalues_0\nJOIN \n    customers cu ON c.numberslist_0 = cu.numberslist_0\nGROUP BY \n    c.sme_lam_kam_1, cu.currencycode_2;\n\n\t----- bird -----\tdebit_card_specializing",
    "1532": "\nSELECT T2.countrycode_2 FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.numberslist_6 = T2.valueslist_1 WHERE T1.productids_5 = 2 ORDER BY T1.valueslist_8 DESC LIMIT 1\n\n\t----- bird -----\tdebit_card_specializing",
    "1533": "\nSELECT t.userids_3, y.yearmonth_1, y.valueslist_2 AS consumption_status\nFROM transactions_1k t\nJOIN yearmonth y ON t.sequentialnumbers_0 = y.ratingvalues_0\nWHERE t.productids_5 = 5 AND t.valueslist_8 > 29.00 AND y.yearmonth_1 LIKE '2012-08%'\n\n\t----- bird -----\tdebit_card_specializing"
}