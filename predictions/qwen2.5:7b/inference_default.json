{
    "0": "\nSELECT MAX(\"Percent (%) Eligible Free (K-12)\") AS Highest_Eligible_Free_Rate_K-12\nFROM frpm\nWHERE \"County Name\" = 'Alameda';\n\n\n\t----- bird -----\tcalifornia_schools",
    "1": "\nSELECT TOP 3 Percent (%) Eligible Free (Ages 5-17) AS LowestThreeEligibleFreeRates\nFROM frpm\nWHERE School Type = 'Continuation'\nORDER BY [Percent (%) Eligible Free (Ages 5-17)] ASC;\n\n\n\t----- bird -----\tcalifornia_schools",
    "2": "\nSELECT DISTINCT s.Zip \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.County = 'Fresno' AND s.Charter = 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "3": "\nSELECT s.MailStreet, s.MailStrAbr, s.MailCity, s.MailZip, s.MailState \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE f.FRPM_Count_(K-12) = (SELECT MAX(FRPM_Count_(K-12)) FROM frpm)\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "4": "\nSELECT Phone FROM schools WHERE Charter = 1 AND FundingType LIKE '%Direct%' AND OpenDate > '2000-01-01';\n\n\n\t----- bird -----\tcalifornia_schools",
    "5": "\nSELECT COUNT(*) AS VirtualSchoolsCount \nFROM satscores \nWHERE AvgScrMath < 400 AND Virtual = 'Y';\n\n\n\t----- bird -----\tcalifornia_schools",
    "6": "\nSELECT s.*\nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE sc.NumTstTakr > 500 AND (s.Magnet = 1 OR s.GSoffered LIKE '%magnet%');\n\n\n\t----- bird -----\tcalifornia_schools",
    "7": "\nSELECT s.Phone \nFROM schools s\nJOIN (\n    SELECT cds, MAX(NumGE1500) as max_num_ge1500\n    FROM satscores\n    WHERE AvgScrRead > 1500 OR AvgScrMath > 1500 OR AvgScrWrite > 1500\n    GROUP BY cds\n) ss ON s.CDSCode = ss.cds\nWHERE ss.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores WHERE AvgScrRead > 1500 OR AvgScrMath > 1500 OR AvgScrWrite > 1500)\n\n\n\t----- bird -----\tcalifornia_schools",
    "8": "\nSELECT s.NumTstTakr \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE f.FRPM_Count_(K-12) = (SELECT MAX(FRPM_Count_(K-12)) FROM frpm)\n\n\n\t----- bird -----\tcalifornia_schools",
    "9": "\nSELECT COUNT(*) \nFROM satscores ss\nJOIN schools sch ON ss.cds = sch.CDSCode\nWHERE ss.AvgScrMath > 560 AND sch.FundingType = 'Direct Charter';\n\n\n\t----- bird -----\tcalifornia_schools",
    "10": "\nSELECT f.FRPM_Count_(Ages_5-17) AS FRPM_Count_Ages_5_17\nFROM frpm f\nJOIN (\n    SELECT cds, AVG(AvgScrRead) AS MaxAvgRead\n    FROM satscores\n    GROUP BY cds\n    ORDER BY MaxAvgRead DESC\n    LIMIT 1\n) ss ON f.CDSCode = ss.cds;\n\n\n\t----- bird -----\tcalifornia_schools",
    "11": "\nSELECT CDSCode FROM frpm WHERE Enrollment (K-12) > 500;\n\n\n\t----- bird -----\tcalifornia_schools",
    "12": "\nSELECT MAX(T2.Percent_%_Eligible_Free_(Ages_5-17)) \nFROM satscores AS T1 \nJOIN frpm AS T2 ON T1.cds = T2.CDSCode \nWHERE T1.NumTstTakr > 0 AND T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite >= 3 * T1.NumTstTakr AND T2.Percent_%_Eligible_Free_(Ages_5-17) > 0.3;\n\n\n\t----- bird -----\tcalifornia_schools",
    "13": "\nSELECT s.Phone\nFROM schools s\nJOIN (\n    SELECT cds, AVG(AvgScrRead + AvgScrMath + AvgScrWrite) / 3 AS avg_score\n    FROM satscores\n    GROUP BY cds\n    ORDER BY avg_score DESC\n    LIMIT 3\n) ss ON s.CDSCode = ss.cds\nWHERE s.Phone IS NOT NULL\n\n\t----- bird -----\tcalifornia_schools",
    "14": "\nSELECT S.CDSCode, S.NCESSchool\nFROM schools S\nJOIN (\n    SELECT CDSCode, SUM(Enrollment (Ages 5-17)) AS TotalEnrollment\n    FROM frpm\n    GROUP BY CDSCode\n) F ON S.CDSCode = F.CDSCode\nORDER BY F.TotalEnrollment DESC\nLIMIT 5;\n\n\n\t----- bird -----\tcalifornia_schools",
    "15": "\nSELECT District \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE ClosedDate IS NULL \nGROUP BY District \nORDER BY AVG(AvgScrRead) DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "16": "\nSELECT COUNT(*) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.County = 'Alameda' AND satscores.NumTstTakr < 100;\n\n\n\t----- bird -----\tcalifornia_schools",
    "17": "\nSELECT CharterNum \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE AvgScrWrite = 499;\n\n\n\t----- bird -----\tcalifornia_schools",
    "18": "\nSELECT COUNT(*) \nFROM satscores ss\nJOIN schools sch ON ss.cds = sch.CDSCode\nWHERE sch.County = 'Contra Costa' AND sch.FundingType = 'Directly Funded' AND ss.NumTstTakr <= 250;\n\n\n\t----- bird -----\tcalifornia_schools",
    "19": "\nSELECT T2.Phone \nFROM satscores AS T1 \nJOIN schools AS T2 ON T1.cds = T2.CDSCode \nORDER BY T1.AvgScrMath DESC \nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "20": "\nSELECT COUNT(*) \nFROM frpm \nWHERE County Name = 'Amador' AND Low Grade = 9 AND High Grade = 12;\n\n\n\t----- bird -----\tcalifornia_schools",
    "21": "\nSELECT COUNT(*) \nFROM frpm \nWHERE County Name = 'Los Angeles' AND Enrollment (K-12) > 500 AND FRPM Count (K-12) < 700;\n\n\n\t----- bird -----\tcalifornia_schools",
    "22": "\nSELECT sname, enroll12 \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE cname = 'Contra Costa' \nORDER BY NumTstTakr DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "23": "\nSELECT s.School, s.Street, s.StreetAbr, s.City, s.Zip, s.State \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE ABS(f.Enrollment_K_12 - f.Enrollment_Ages_5_17) > 30;\n\n\n\t----- bird -----\tcalifornia_schools",
    "24": "\nSELECT DISTINCT s.School \nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE f.Percent_%_Eligible_Free_(K-12) > 0.1 AND ss.NumGE1500 >= 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "25": "\nSELECT s.FundingType, s.School \nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE s.City = 'Riverside' AND AVG(sc.AvgScrMath) > 400;\n\n\n\t----- bird -----\tcalifornia_schools",
    "26": "\nSELECT s.School, s.Street, s.StreetAbr, s.City, s.State, s.Zip \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.District = 'Monterey' AND f.Enrollment ('Ages 5-17') > 800 AND s.School Type = 'High';\n\n\n\t----- bird -----\tcalifornia_schools",
    "27": "\n\nSELECT s.sname, sa.AvgScrWrite, s.CharterNum\nFROM schools s\nJOIN satscores sa ON s.CDSCode = sa.cds\nWHERE s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-12-31'\n\n\n\t----- bird -----\tcalifornia_schools",
    "28": "\n\nSELECT s.School, s.DOCType \nFROM schools s\nJOIN (\n    SELECT ABS(enrollment12 - \"Enrollment (Ages 5-17)\") AS diff, AVG(ABS(t.enrollment12 - t.\"Enrollment (Ages 5-17)\")) OVER () AS avg_diff \n    FROM frpm f\n    JOIN schools s ON f.CDSCode = s.CDSCode\n    WHERE s.FundingType = 'Locally Funded'\n) subq ON ABS(s.enrollment12 - \"Enrollment (Ages 5-17)\") > subq.avg_diff\nWHERE s.FundingType = 'Locally Funded'\n\n\n\t----- bird -----\tcalifornia_schools",
    "29": "\nSELECT OpenDate FROM frpm WHERE Enrollment_K_12 = (SELECT MAX(Enrollment_K_12) FROM frpm)\n\n\t----- bird -----\tcalifornia_schools",
    "30": "\n\nSELECT City\nFROM schools\nWHERE CDSCode IN (\n    SELECT CDSCode\n    FROM frpm\n    ORDER BY Enrollment (K-12) ASC\n    LIMIT 5\n)\nGROUP BY City\n\n\n\t----- bird -----\tcalifornia_schools",
    "31": "\nSELECT TOP 10 PERCENT FRPM.County Name, (FRPM.[Percent (%) Eligible Free (K-12)] / 100) AS EligibleFreeRate\nFROM FRPM\nORDER BY FRPM.[Enrollment (K-12)] DESC\nOFFSET 9 ROWS\nFETCH NEXT 2 ROWS ONLY;\n\n\n\t----- bird -----\tcalifornia_schools",
    "32": "\nSELECT TOP 5 T1.School Name, (T1.FRPM Count (K-12) / T1.Enrollment (K-12)) * 100 AS Eligible_FRPM_Rate\nFROM frpm T1\nJOIN schools T2 ON T1.CDSCode = T2.CDSCode\nWHERE T2.OwnerShipCode = '66'\nORDER BY T1.FRPM Count (K-12) DESC;\n\n\n\t----- bird -----\tcalifornia_schools",
    "33": "\nSELECT s.Website, s.School \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE f.FRPM_Count_(Ages_5-17) BETWEEN 1900 AND 2000;\n\n\n\t----- bird -----\tcalifornia_schools",
    "34": "\nSELECT (FRPM_Count_(Ages_5-17) / Enrollment_(Ages_5-17)) * 100 AS Free_Rate\nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE schools.AdmFName1 || ' ' || schools.AdmLName1 = 'Kacey Gibson';\n\n\n\t----- bird -----\tcalifornia_schools",
    "35": "\nSELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE CDSCode = (\n    SELECT CDSCode \n    FROM frpm \n    WHERE CharterSchool (Y/N) = 1 \n    ORDER BY Enrollment (K-12) ASC \n    LIMIT 1\n);\n\n\n\t----- bird -----\tcalifornia_schools",
    "36": "\n\nSELECT AdmFName1, AdmLName1, AdmEmail1 \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    WHERE NumGE1500 > 0 \n    ORDER BY NumTstTakr DESC \n    LIMIT 1\n)\n\n\n\t----- bird -----\tcalifornia_schools",
    "37": "\nSELECT Street, City, Zip, State \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    ORDER BY AvgScrRead + AvgScrMath + AvgScrWrite ASC \n    LIMIT 1\n);\n\n\n\t----- bird -----\tcalifornia_schools",
    "38": "\nSELECT Website \nFROM schools \nJOIN satscores ON schools.CDSCode = satscores.cds \nWHERE County = 'Los Angeles' AND NumTstTakr BETWEEN 2000 AND 3000;\n\n\n\t----- bird -----\tcalifornia_schools",
    "39": "\n\nSELECT AVG(s.NumTstTakr) AS AvgTestTakers\nFROM satscores s\nJOIN schools sch ON s.cds = sch.CDSCode\nWHERE sch.City = 'Fresno' AND sch.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\n\n\n\t----- bird -----\tcalifornia_schools",
    "40": "\nSELECT T2.Phone\nFROM satscores AS T1\nJOIN schools AS T2 ON T1.cds = T2.CDSCode\nWHERE T2.District = 'Fresno Unified'\nORDER BY T1.AvgScrRead ASC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "41": "\nSELECT sname, AVGScrRead\nFROM satscores ss\nJOIN schools sch ON ss.cds = sch.CDSCode\nWHERE virtual = 'Y'\nGROUP BY sname, AVGScrRead\nORDER BY AVGScrRead DESC\nLIMIT 5;\n\n\n\t----- bird -----\tcalifornia_schools",
    "42": "\nSELECT s.SOCType\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.AvgScrMath = (SELECT MAX(AvgScrMath) FROM satscores)\nSQL_END\n\t----- bird -----\tcalifornia_schools",
    "43": "\nSELECT AVG(satscores.AvgScrMath), schools.County \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nGROUP BY schools.County \nORDER BY SUM(satscores.AvgScrRead + satscores.AvgScrMath + satscores.AvgScrWrite) ASC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "44": "\n\nSELECT s.City, AVG(ss.AvgScrWrite) AS AvgWritingScore\nFROM schools s\nJOIN (\n    SELECT cds, SUM(NumTstTakr) AS TotalTestTakers\n    FROM satscores\n    WHERE NumGE1500 >= 1500\n    GROUP BY cds\n) ss ON s.CDSCode = ss.cds\nWHERE EXISTS (\n    SELECT 1 \n    FROM satscores sc\n    WHERE sc.cds = s.CDSCode AND sc.NumGE1500 >= 1500\n)\nGROUP BY s.City\nORDER BY COUNT(ss.cds) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "45": "\nSELECT s.School, AVG(ss.AvgScrWrite) AS AvgWritingScore\nFROM schools s\nJOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.AdmFName1 || ' ' || s.AdmLName1 = 'Ricci Ulrich'\nGROUP BY s.School;\n\n\n\t----- bird -----\tcalifornia_schools",
    "46": "\n\nSELECT State, School, SUM(Enrollment (K-12)) AS TotalEnrollment\nFROM frpm\nWHERE School Type = 'State Special'\nGROUP BY State, School\nORDER BY TotalEnrollment DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "47": "\nSELECT AVG(COUNT(*)) AS MonthlyAverage\nFROM (\n    SELECT EXTRACT(MONTH FROM OpenDate) AS Month\n    FROM schools\n    WHERE County = 'Alameda' AND StatusType = 'Elementary School District' AND YEAR(OpenDate) = 1980\n    GROUP BY Month\n) AS MonthlyCounts\n\n\t----- bird -----\tcalifornia_schools",
    "48": "\nSELECT \n(SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND District LIKE '%Unified%') / \n(SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND District LIKE '%Elementary%)\nAS Unified_Elem_Ratio;\n\n\n\t----- bird -----\tcalifornia_schools",
    "49": "\n\nSELECT s.County, s.School, s.ClosedDate \nFROM schools s \nWHERE s.ClosedDate IS NOT NULL AND s.StatusType = 'Closed' \nGROUP BY s.County, s.School, s.ClosedDate \nHAVING COUNT(s.CDSCode) = (\n    SELECT COUNT(CDSCode) \n    FROM schools \n    WHERE ClosedDate IS NOT NULL AND StatusType = 'Closed' \n    GROUP BY County \n    ORDER BY COUNT(CDSCode) DESC \n    LIMIT 1\n)\n\n\n\t----- bird -----\tcalifornia_schools",
    "50": "\nSELECT s.Street, s.School \nFROM schools s\nJOIN (\n    SELECT cds, AVG(AvgScrMath) AS avg_math\n    FROM satscores\n    GROUP BY cds\n    ORDER BY avg_math DESC\n    LIMIT 5, 1\n) ss ON s.CDSCode = ss.cds;\n\n\n\t----- bird -----\tcalifornia_schools",
    "51": "\nSELECT s.MailStreet, s.School \nFROM schools s\nJOIN satscores sc ON s.CDSCode = sc.cds\nWHERE s.MailStreet IS NOT NULL\nORDER BY sc.AvgScrRead ASC\nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "52": "\nSELECT COUNT(*) \nFROM satscores \nWHERE NumGE1500 >= 1 AND dname = 'Lakeport';\n\n\n\t----- bird -----\tcalifornia_schools",
    "53": "\nSELECT SUM(NumTstTakr) AS TotalTestTakers\nFROM satscores\nWHERE cds IN (SELECT CDSCode FROM schools WHERE MailCity = 'Fresno');\n\n\n\t----- bird -----\tcalifornia_schools",
    "54": "\nSELECT s.School, s.MailZip \nFROM schools s \nWHERE s.AdmFName1 = 'Avetik' AND s.AdmLName1 = 'Atoian';\n\n\n\t----- bird -----\tcalifornia_schools",
    "55": "\nSELECT CAST(SUM(CASE WHEN T1.MailingState = 'CA' AND T1.MailCounty = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.MailingState = 'CA' AND T1.MailCounty = 'Humboldt' THEN 1 ELSE 0 END) AS Ratio\nFROM schools T1\n\n\t----- bird -----\tcalifornia_schools",
    "56": "\nSELECT COUNT(*)\nFROM schools\nWHERE State = 'CA' AND ClosedDate IS NULL AND District = 'San Joaquin';\n\n\n\t----- bird -----\tcalifornia_schools",
    "57": "\nSELECT Phone, Ext \nFROM schools \nWHERE CDSCode = (\n    SELECT cds \n    FROM satscores \n    ORDER BY AvgScrWrite DESC \n    LIMIT 332, 1\n);\n\n\n\t----- bird -----\tcalifornia_schools",
    "58": "\nSELECT T2.Phone, T2.Ext, T1.School_Name \nFROM frpm AS T1 \nJOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.Zip = '95203-3704';\n\n\n\t----- bird -----\tcalifornia_schools",
    "59": "\nSELECT Website \nFROM schools \nWHERE (AdmFName1 = 'Mike' AND AdmLName1 = 'Larson') OR \n      (AdmFName2 = 'Mike' AND AdmLName2 = 'Larson') OR \n      (AdmFName3 = 'Mike' AND AdmLName3 = 'Larson') OR \n      (AdmFName1 = 'Dante' AND AdmLName1 = 'Alvarez') OR \n      (AdmFName2 = 'Dante' AND AdmLName2 = 'Alvarez') OR \n      (AdmFName3 = 'Dante' AND AdmLName3 = 'Alvarez');\n\n\n\t----- bird -----\tcalifornia_schools",
    "60": "\nSELECT Website \nFROM schools \nWHERE Virtual = 'Y' AND Charter = 1 AND County = 'San Joaquin';\n\n\n\t----- bird -----\tcalifornia_schools",
    "61": "\nSELECT COUNT(*)\nFROM schools\nWHERE Charter = 1 AND City = 'Hickman' AND NCESDist = 'Elementary School District';\n\n\n\t----- bird -----\tcalifornia_schools",
    "62": "\nSELECT COUNT(*) AS TotalNonCharteredSchools\nFROM frpm\nWHERE County Name = 'Los Angeles'\nAND Charter School (Y/N) = 0\nAND Percent (%) Eligible Free (K-12) < 0.18;\n\n\n\t----- bird -----\tcalifornia_schools",
    "63": "\nSELECT s.School, s.City, a.AdmFName1, a.AdmLName1, a.AdmFName2, a.AdmLName2, a.AdmFName3, a.AdmLName3 \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nJOIN satscores ss ON s.CDSCode = ss.cds\nLEFT JOIN administrators a ON s.CDSCode = a.CDSCode\nWHERE f.CharterSchool (Y/N) = 'Y' AND f.CharterSchool Number = '00D2';\n\n\n\t----- bird -----\tcalifornia_schools",
    "64": "\nSELECT COUNT(*) \nFROM schools \nWHERE CharterNum = '00D4' AND MailCity = 'Hickman';\n\n\n\t----- bird -----\tcalifornia_schools",
    "65": "\n\nSELECT \n    (SUM(CASE WHEN FundingType = 'Local' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS Local_Funding_Ratio\nFROM \n    schools\nWHERE \n    County = 'Santa Clara';\n\n\n\t----- bird -----\tcalifornia_schools",
    "66": "\nSELECT COUNT(*)\nFROM schools\nWHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\nAND FundingType = 'Directly Funded'\nAND County = 'Stanislaus';\n\n\t----- bird -----\tcalifornia_schools",
    "67": "\nSELECT COUNT(*)\nFROM schools\nWHERE ClosedDate = '1989-01-01' AND City = 'San Francisco';\n\n\t----- bird -----\tcalifornia_schools",
    "68": "\nSELECT County, COUNT(CDSCode) AS ClosureCount\nFROM schools\nWHERE ClosedDate BETWEEN '1980-01-01' AND '1989-12-31' AND SOCType = 'Youth Authority Facilities (CEA)'\nGROUP BY County\nORDER BY ClosureCount DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "69": "\nSELECT NCESDist\nFROM schools\nWHERE SOCType = 'State Special Schools'\nAND SOCCode IS NOT NULL;\n\n\t----- bird -----\tcalifornia_schools",
    "70": "\n\nSELECT COUNT(*) AS ActiveSchools, SUM(ClosedDate IS NOT NULL) AS ClosedSchools \nFROM schools \nWHERE County = 'Alpine' AND Charter = 0 AND (ClosedDate IS NULL OR ClosedDate < CURRENT_DATE);\n\n\n\t----- bird -----\tcalifornia_schools",
    "71": "\nSELECT DistrictCode \nFROM schools \nWHERE GSserved != 'Magnet' AND City = 'Fresno';\n\n\n\t----- bird -----\tcalifornia_schools",
    "72": "\nSELECT Enrollment_Ages_5_17 FROM frpm WHERE School_Name = 'State Special School' AND District_Name = 'Fremont' AND Academic_Year = '2014-2015';\n\n\n\t----- bird -----\tcalifornia_schools",
    "73": "\nSELECT FRPM.CountyName, FRPM[\"FRPM Count (Ages 5-17)\"] \nFROM frpm AS FRPM \nJOIN schools AS S ON FRPM.CDSCode = S.CDSCode \nWHERE S.MailStreet = 'PO Box 1040' AND S.School = 'Youth Authority';\n\n\n\t----- bird -----\tcalifornia_schools",
    "74": "\nSELECT MIN(Low Grade) AS LowestGrade \nFROM frpm \nWHERE CDSCode = 613360 AND School Type = 'District Special Education Consortia';\n\n\n\t----- bird -----\tcalifornia_schools",
    "75": "\nSELECT s.EducationOpsName \nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE f.NSLP_Provision_Status = 'Breakfast Provision 2' AND s.County = '37';\n\n\n\t----- bird -----\tcalifornia_schools",
    "76": "\nSELECT s.City\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE f.School Type = 'High School' \nAND f.NSLP Provision Status = 'Lunch Provision 2'\nAND f.Low Grade = '9'\nAND f.High Grade = '12'\nAND s.County = 'Merced';\n\n\n\t----- bird -----\tcalifornia_schools",
    "77": "\nSELECT s.School, f.\"Percent (%) Eligible FRPM (Ages 5-17)\"\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.City = 'Los Angeles' AND f.Low Grade = 'K' AND f.High Grade = '9'\n\n\n\t----- bird -----\tcalifornia_schools",
    "78": "\nSELECT GSserved AS Grade_Span_Type\nFROM schools\nWHERE City = 'Adelanto'\nGROUP BY GSserved\nORDER BY COUNT(GSserved) DESC\nLIMIT 1;\n\n\t----- bird -----\tcalifornia_schools",
    "79": "\n\nSELECT COUNT(*) AS SchoolCount, County \nFROM schools \nWHERE Virtual = 'Yes' AND (County = 'San Diego' OR County = 'Santa Barbara') \nGROUP BY County \nHAVING COUNT(*) = (\n    SELECT MAX(SchoolCount) \n    FROM (\n        SELECT COUNT(*) AS SchoolCount \n        FROM schools \n        WHERE Virtual = 'Yes' AND (County = 'San Diego' OR County = 'Santa Barbara') \n        GROUP BY County\n    ) AS SubQuery\n)\n\n\n\t----- bird -----\tcalifornia_schools",
    "80": "\nSELECT School Type, Latitude \nFROM frpm \nORDER BY Latitude DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "81": "\nSELECT s.City, MIN(s.Latitude) AS MinLatitude, f.LowGrade \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.State = 'CA' \nGROUP BY s.City, f.LowGrade \nORDER BY MinLatitude ASC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "82": "\nSELECT GSoffered \nFROM schools \nORDER BY Longitude DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcalifornia_schools",
    "83": "\n\nSELECT COUNT(DISTINCT s.CDSCode) AS Multiple_Provision_Types, c.City, COUNT(s.CDSCode) AS Schools_Per_City\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nLEFT JOIN satscores ss ON s.CDSCode = ss.cds\nWHERE s.GSserved LIKE '%K-8%' AND f.School Type = 'Magnet' AND f.Educational Option Type IN ('Multiple Provision Types', 'Single Provision Type')\nGROUP BY c.City\n\n\n\t----- bird -----\tcalifornia_schools",
    "84": "\n\nSELECT AdmFName1, District \nFROM schools \nGROUP BY AdmFName1, District \nORDER BY COUNT(AdmFName1) DESC \nLIMIT 2;\n\n\n\t----- bird -----\tcalifornia_schools",
    "85": "\nSELECT DISTINCT f.District Code\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE s.AdmFName1 = 'Alusine'\nAND f.Percent (%) Eligible Free (K-12) IS NOT NULL;\n\n\n\t----- bird -----\tcalifornia_schools",
    "86": "\nSELECT T3.AdmLName1, T3.City, T3.County, T3.School \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nJOIN satscores AS T3 ON T1.CDSCode = T3.cds \nWHERE T2.Charter School Number = '40';\n\n\n\t----- bird -----\tcalifornia_schools",
    "87": "\nSELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND School Type IN ('Intermediate/Middle Schools', 'Unified Scools');\n\n\t----- bird -----\tcalifornia_schools",
    "88": "\nSELECT s.AdmEmail1, s.School \nFROM schools s \nJOIN (\n    SELECT cds, SUM(NumTstTakr) as TotalTakers \n    FROM satscores \n    WHERE AvgScrRead >= 1500 OR AvgScrMath >= 1500 OR AvgScrWrite >= 1500 \n    GROUP BY cds\n) ss ON s.CDSCode = ss.cds \nWHERE ss.TotalTakers = (\n    SELECT MAX(TotalTakers) \n    FROM (\n        SELECT SUM(NumTstTakr) as TotalTakers \n        FROM satscores \n        WHERE AvgScrRead >= 1500 OR AvgScrMath >= 1500 OR AvgScrWrite >= 1500 \n        GROUP BY cds\n    ) t\n)\n\n\n\t----- bird -----\tcalifornia_schools",
    "89": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE dist.A2 = 'East Bohemia'\nAND EXISTS (\n    SELECT 1 \n    FROM trans t\n    WHERE t.account_id = a.account_id\n    AND t.date < (SELECT issued FROM card WHERE disp_id = d.disp_id)\n);\n\n\n\t----- bird -----\tfinancial",
    "90": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 LIKE '%Prague%' AND EXISTS (\n    SELECT 1 FROM loan l WHERE l.account_id = a.account_id\n);\n\n\n\t----- bird -----\tfinancial",
    "91": "\nSELECT A10 FROM district WHERE A10 > 0 AND (EXTRACT(YEAR FROM date) = 1995 OR EXTRACT(YEAR FROM date) = 1996)\nGROUP BY A10\nHAVING COUNT(*) > 0\nORDER BY AVG(A10) DESC LIMIT 1;\n\n\t----- bird -----\tfinancial",
    "92": "\nSELECT COUNT(DISTINCT d.district_id)\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE AVG(c.A10) > 6000 AND AVG(c.A10) < 10000\n\n\t----- bird -----\tfinancial",
    "93": "\nSELECT COUNT(client_id) FROM client WHERE gender = 'male' AND A8 > 8000 AND A12 > 8000 AND A13 > 8000 AND district_id IN (SELECT district_id FROM district WHERE A4 = 'North Bohemia')\n\n\t----- bird -----\tfinancial",
    "94": "\nSELECT AVG(salary) AS lowest_avg_salary, MAX(t2.avg_salary) - AVG(salary) AS salary_gap\nFROM client t1\nJOIN (\n    SELECT district_id, AVG(income) AS avg_salary\n    FROM (\n        SELECT district_id, income / 100.0 AS income\n        FROM account t3\n        JOIN trans t4 ON t3.account_id = t4.account_id\n        WHERE gender = 'F'\n    ) t5\n    GROUP BY district_id\n) t2 ON t1.district_id = t2.district_id\nWHERE gender = 'F'\nGROUP BY t1.district_id\nORDER BY lowest_avg_salary ASC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "95": "\nSELECT DISTINCT d.account_id\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN (\n    SELECT client_id, AVG(A10) AS avg_salary\n    FROM district\n    GROUP BY client_id\n) dist ON c.client_id = dist.client_id\nWHERE c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n)\nAND dist.avg_salary = (\n    SELECT MAX(avg_salary)\n    FROM (\n        SELECT AVG(A10) AS avg_salary\n        FROM district\n        GROUP BY client_id\n    ) subq\n)\nSQL_END\n\n\t----- bird -----\tfinancial",
    "96": "\nSELECT COUNT(DISTINCT d.client_id)\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'Owner' AND d.type = 'statement of weekly issuance';\n\n\n\t----- bird -----\tfinancial",
    "97": "\nSELECT DISTINCT c.client_id, c.gender, c.birth_date\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.type = 'Disponent' AND t.operation = 'statement of issuance';\n\n\n\t----- bird -----\tfinancial",
    "98": "\nSELECT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31'\nAND l.status = 'approved'\nAND a.frequency = 'weekly'\nORDER BY l.amount ASC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "99": "\nSELECT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE julianday(l.date + interval '12 months') < julianday('now')\n  AND a.date >= '1993-01-01' AND a.date <= '1993-12-31'\nGROUP BY a.account_id\nHAVING l.amount = (\n    SELECT MAX(l2.amount)\n    FROM loan l2\n    WHERE l2.account_id = a.account_id\n      AND julianday(l2.date + interval '12 months') < julianday('now')\n      AND l2.amount > 0\n);\n\n\n\t----- bird -----\tfinancial",
    "100": "\nSELECT COUNT(DISTINCT d.client_id)\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE c.gender = 'F' AND YEAR(c.birth_date) < 1950 AND dist.A2 = 'Slokolov';\n\n\n\t----- bird -----\tfinancial",
    "101": "\nSELECT account_id \nFROM trans \nWHERE date = (SELECT MIN(date) FROM trans WHERE date >= '1995-01-01' AND date <= '1995-12-31');\n\n\n\t----- bird -----\tfinancial",
    "102": "\nSELECT DISTINCT a.account_id \nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nWHERE a.date < '1997-01-01' AND t.amount > 3000;\n\n\n\t----- bird -----\tfinancial",
    "103": "\nSELECT client_id \nFROM card \nWHERE issued = '1994-03-03';\n\n\n\t----- bird -----\tfinancial",
    "104": "\nSELECT t.date \nFROM trans t \nWHERE t.amount = 840 AND t.date = '1998-10-14' \nJOIN account a ON t.account_id = a.account_id \nORDER BY t.date \nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "105": "\nSELECT DISTINCT d.district_id \nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.date = '1994-08-25';\n\n\n\t----- bird -----\tfinancial",
    "106": "\nSELECT MAX(t.amount) AS biggest_transaction_amount\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN card c ON d.client_id = c.disp_id\nWHERE c.issued = '1996-10-21';\n\n\n\t----- bird -----\tfinancial",
    "107": "\nSELECT c.gender\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN (\n    SELECT district_id, AVG(A10) as avg_salary\n    FROM district\n    GROUP BY district_id\n) dist ON a.district_id = dist.district_id\nWHERE NOT EXISTS (\n    SELECT 1 \n    FROM client c2\n    JOIN disp d2 ON c2.client_id = d2.client_id\n    JOIN account a2 ON d2.account_id = a2.account_id\n    JOIN district dist2 ON a2.district_id = dist2.district_id\n    WHERE c2.birth_date > c.birth_date AND dist2.avg_salary > dist.avg_salary\n)\nORDER BY c.birth_date ASC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "108": "\nSELECT t.amount \nFROM trans t\nJOIN (\n    SELECT d.account_id \n    FROM disp d\n    JOIN loan l ON d.account_id = l.account_id\n    WHERE (SELECT MAX(amount) FROM loan)\n    LIMIT 1\n) a ON t.account_id = a.account_id\nWHERE t.date = (\n    SELECT MIN(date) \n    FROM trans tr \n    WHERE tr.account_id = a.account_id\n)\n\n\n\t----- bird -----\tfinancial",
    "109": "\nSELECT COUNT(*)\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE c.gender = 'female' AND dist.A2 = 'Jesenik';\n\n\n\t----- bird -----\tfinancial",
    "110": "\nSELECT d.disp_id\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.amount = 5100 AND t.date = '1998-09-02'\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "111": "\nSELECT COUNT(*)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Litomerice' AND YEAR(a.date) = 1996;\n\n\n\t----- bird -----\tfinancial",
    "112": "\nSELECT d.A2 AS district_name\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\n\n\n\t----- bird -----\tfinancial",
    "113": "\nSELECT c.birth_date \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.amount = 98832 AND l.date = '1996-01-03';\n\n\n\t----- bird -----\tfinancial",
    "114": "\nSELECT d.account_id\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE dist.A2 = 'Prague'\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "115": "\n\nSELECT \n    100 * COUNT(CASE WHEN gender = 'M' THEN client_id END) / COUNT(client_id) AS male_percentage\nFROM \n    client\nJOIN \n    district ON client.district_id = district.district_id\nWHERE \n    A2 = 'Jihomoravsk\u00fd kraj' AND A3 LIKE '%jihoz\u00e1padn\u00ed \u010d\u00e1st%'\n\n\n\t----- bird -----\tfinancial",
    "116": "\nSELECT \n    ((MAX(t2.balance) - (SELECT balance FROM trans t1 WHERE t1.account_id = d.account_id AND t1.`date` = '1993-03-22') / MAX(t2.balance)) * 100) AS increase_rate\nFROM \n    trans t2\nJOIN \n    disp d ON t2.account_id = d.account_id\nWHERE \n    d.client_id IN (\n        SELECT client_id FROM loan WHERE date = '1993-07-05'\n    )\nAND \n    t2.`date` <= '1998-12-27';\n\n\n\t----- bird -----\tfinancial",
    "117": "\n\nSELECT \n    (SUM(CASE WHEN payments = duration THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_paid\nFROM loan\nWHERE status = 'Fully Paid'\n\n\n\t----- bird -----\tfinancial",
    "118": "\n\nSELECT \n    COUNT(*) * 100 / (SELECT COUNT(DISTINCT account_id) FROM loan WHERE amount < 100000) AS percentage\nFROM \n    loan \nWHERE \n    amount < 100000 AND status = 'running'\n\n\n\t----- bird -----\tfinancial",
    "119": "\nSELECT a.account_id, d.A2 AS district_name, d.A3 AS district_region \nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN district dist ON d.district_id = dist.district_id\nWHERE YEAR(a.date) = 1993 AND a.date < t.date;\n\n\n\t----- bird -----\tfinancial",
    "120": "\nSELECT a.account_id, a.frequency\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'east Bohemia' AND a.date BETWEEN '1995-01-01' AND '2000-12-31';\n\n\n\t----- bird -----\tfinancial",
    "121": "\nSELECT a.account_id, MIN(a.date) AS account_opening_date\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Prachatice'\nGROUP BY a.account_id;\n\n\n\t----- bird -----\tfinancial",
    "122": "\nSELECT d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN district dist ON a.district_id = dist.district_id\nWHERE l.loan_id = '4990';\n\n\n\t----- bird -----\tfinancial",
    "123": "\nSELECT a.account_id, d.district_id, di.A2 AS region\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN disp d ON a.account_id = d.account_id\nJOIN district di ON d.district_id = di.district_id\nWHERE l.amount > 300000;\n\n\n\t----- bird -----\tfinancial",
    "124": "\nSELECT l.loan_id, d.A10 AS average_salary\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE l.duration = 60;\n\n\n\t----- bird -----\tfinancial",
    "125": "\n\nSELECT d.A2, \n       ((d.A10 - (SELECT A10 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM loan WHERE status != 'closed' AND amount > payments)) AND year(date) = 1996)) * 100 / (SELECT A10 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM loan WHERE status != 'closed' AND amount > payments)) AND year(date) = 1995)) AS unemployment_rate_increment\nFROM district d\nWHERE d.district_id IN (\n    SELECT DISTINCT district_id \n    FROM client c \n    JOIN loan l ON c.client_id = l.client_id \n    WHERE l.status != 'closed' AND l.amount > l.payments\n)\nGROUP BY d.A2, d.A10\n\n\n\t----- bird -----\tfinancial",
    "126": "\nSELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM account WHERE DATE_PART('year', date::timestamp) = 1993) * 100 AS percentage\nFROM account\nWHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Decin') AND DATE_PART('year', date::timestamp) = 1993\n\n\t----- bird -----\tfinancial",
    "127": "\nSELECT DISTINCT account_id\nFROM trans\nWHERE type = 'statement'\nGROUP BY account_id, DATE_TRUNC('month', date)\nSQL_END\n\n\t----- bird -----\tfinancial",
    "128": "\nSELECT d.A2, COUNT(c.client_id) AS female_count\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE c.gender = 'F'\nGROUP BY d.A2\nORDER BY female_count DESC\nLIMIT 10;\n\n\n\t----- bird -----\tfinancial",
    "129": "\nSELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawal\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN disp d ON a.client_id = d.client_id\nJOIN client c ON d.client_id = c.client_id\nWHERE t.type = 'withdrawal' AND t.k_symbol != 'card' AND EXTRACT(MONTH FROM t.date) = 1 AND EXTRACT(YEAR FROM t.date) = 1996\nGROUP BY d.A2\nORDER BY total_withdrawal DESC\nLIMIT 10;\n\n\n\t----- bird -----\tfinancial",
    "130": "\nSELECT COUNT(*) \nFROM account a\nLEFT JOIN card c ON a.account_id = c.disp_id\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'South Bohemia' AND c.card_id IS NULL;\n\n\n\t----- bird -----\tfinancial",
    "131": "\nSELECT d.A2 AS district_name\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nJOIN disp dp ON a.account_id = dp.account_id\nJOIN client cl ON dp.client_id = cl.client_id\nJOIN district d ON cl.district_id = d.district_id\nGROUP BY d.A2\nORDER BY COUNT(l.loan_id) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "132": "\nSELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'male';\n\n\n\t----- bird -----\tfinancial",
    "133": "\nSELECT d.A2, d.A3, d.A4, d.A5, d.A6\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nWHERE YEAR(c.birth_date) - 1996 >= 0 AND (YEAR(CURRENT_DATE) - YEAR(c.birth_date) - IF(MONTH(c.birth_date) > MONTH(CURRENT_DATE) OR (MONTH(c.birth_date) = MONTH(CURRENT_DATE) AND DAYOFMONTH(c.birth_date) > DAYOFMONTH(CURRENT_DATE)), 1, 0)) >= 25\nGROUP BY d.A2, d.A3, d.A4, d.A5, d.A6\nORDER BY MAX(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) - MAX(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) DESC;\n\n\t----- bird -----\tfinancial",
    "134": "\nSELECT COUNT(account_id) AS account_count\nFROM account\nWHERE district_id IN (\n    SELECT district_id\n    FROM crime\n    WHERE YEAR(date) = 1996\n    GROUP BY district_id\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\n\n\t----- bird -----\tfinancial",
    "135": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN card c ON a.account_id = c.disp_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE c.type = 'credit_card'\nAND t.operation = 'withdrawal'\nAND t.amount < 0;\n\n\n\t----- bird -----\tfinancial",
    "136": "\nSELECT COUNT(DISTINCT l.account_id)\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31'\nAND l.amount >= 250000\nAND a.frequency = 'monthly';\n\n\n\t----- bird -----\tfinancial",
    "137": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nWHERE d.type = 'Branch' AND d.client_id IN (\n    SELECT c.client_id\n    FROM client c\n    JOIN district dist ON c.district_id = dist.district_id\n    WHERE dist.A12 = 1\n)\nAND a.frequency IS NOT NULL;\n\n\n\t----- bird -----\tfinancial",
    "138": "\nSELECT COUNT(*)\nFROM client\nWHERE district_id IN (\n    SELECT district_id\n    FROM (\n        SELECT district_id, RANK() OVER (ORDER BY COUNT(*) DESC) as rank\n        FROM trans\n        WHERE date BETWEEN '1995-01-01' AND '1995-12-31'\n        GROUP BY district_id\n    ) t\n    WHERE rank = 2\n)\nAND gender = 'M';\n\n\n\t----- bird -----\tfinancial",
    "139": "\nSELECT COUNT(*) AS high_level_credit_cards_count\nFROM card c\nJOIN disp d ON c.disp_id = d.disp_id\nWHERE c.type = 'high-level credit' AND d.type = 'disponent';\n\n\n\t----- bird -----\tfinancial",
    "140": "\nSELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Pisek')\n\n\t----- bird -----\tfinancial",
    "141": "\nSELECT DISTINCT d.A2, d.A3, d.A4, d.A5, d.A6, d.A7, d.A8, d.A9, d.A10, d.A11, d.A12, d.A13, d.A14, d.A15, d.A16\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.amount > 10000 AND YEAR(t.date) = 1997;\n\n\n\t----- bird -----\tfinancial",
    "142": "\nSELECT DISTINCT a.account_id\nFROM account a\nJOIN order o ON a.account_id = o.account_id\nWHERE o.k_symbol = 'household_payment' AND o.bank_to = 'Pisek';\n\n\n\t----- bird -----\tfinancial",
    "143": "\nSELECT DISTINCT a.account_id \nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN card c ON d.disp_id = c.disp_id\nWHERE (c.type = 'gold' OR c.type = 'junior');\n\n\n\t----- bird -----\tfinancial",
    "144": "\nSELECT AVG(amount) AS average_amount\nFROM trans\nWHERE date BETWEEN '2021-01-01' AND '2021-12-31' AND type = 'credit';\n\n\n\t----- bird -----\tfinancial",
    "145": "\nSELECT DISTINCT d.client_id\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.date BETWEEN '1998-01-01' AND '1998-12-31'\nGROUP BY d.client_id\nHAVING SUM(CASE WHEN t.operation = 'debit' THEN t.amount ELSE 0 END) < (\n    SELECT AVG(SUM(CASE WHEN t1.operation = 'debit' THEN t1.amount ELSE 0 END))\n    FROM trans t1\n    JOIN account a1 ON t1.account_id = a1.account_id\n    WHERE t1.date BETWEEN '1998-01-01' AND '1998-12-31'\n    GROUP BY a1.client_id\n)\n\n\n\t----- bird -----\tfinancial",
    "146": "\nSELECT c.client_id, c.gender, a.account_id\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN card ca ON d.disp_id = ca.disp_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE c.gender = 'F';\n\n\n\t----- bird -----\tfinancial",
    "147": "\nSELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN district d ON c.district_id = d.district_id\nWHERE c.gender = 'female' AND d.A2 = 'South Bohemia';\n\n\n\t----- bird -----\tfinancial",
    "148": "\nSELECT a.account_id\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Tabor' AND EXISTS (SELECT 1 FROM loan l WHERE l.account_id = a.account_id);\n\n\n\t----- bird -----\tfinancial",
    "149": "\nSELECT DISTINCT d.type, AVG(c.A10) AS average_income\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN client cl ON a.district_id = cl.district_id\nJOIN district dis ON cl.district_id = dis.district_id\nLEFT JOIN loan l ON a.account_id = l.account_id\nWHERE l.account_id IS NULL AND dis.A10 BETWEEN 8000 AND 9000\nGROUP BY d.type\n\n\t----- bird -----\tfinancial",
    "150": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN trans t ON a.account_id = t.account_id\nWHERE t.bank = 'AB';\n\n\n\t----- bird -----\tfinancial",
    "151": "\nSELECT DISTINCT d.A2 AS district_name \nFROM district d \nJOIN disp dp ON d.district_id = dp.district_id \nJOIN account a ON dp.account_id = a.account_id \nJOIN trans t ON a.account_id = t.account_id \nWHERE t.type = 'withdrawal';\n\n\n\t----- bird -----\tfinancial",
    "152": "\nSELECT AVG(crimes.A13)\nFROM district crimes\nJOIN account acc ON crimes.district_id = acc.district_id\nWHERE crimes.A13 > 4000 AND YEAR(acc.date) >= 1997\nGROUP BY crimes.district_id;\n\n\t----- bird -----\tfinancial",
    "153": "\nSELECT COUNT(*)\nFROM card c\nJOIN disp d ON c.disp_id = d.disp_id\nWHERE c.type = 'classic'\nAND EXISTS (\n    SELECT 1\n    FROM account a\n    WHERE a.account_id = d.account_id\n    AND NOT EXISTS (\n        SELECT 1\n        FROM loan l\n        WHERE l.account_id = a.account_id\n    )\n)\n\n\t----- bird -----\tfinancial",
    "154": "\nSELECT COUNT(*) FROM client WHERE gender = 'male' AND district_id IN (SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha')\n\n\t----- bird -----\tfinancial",
    "155": "\nSELECT CAST(SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS DECIMAL(5,2)) AS percent\nFROM card\nWHERE type = 'Gold'\n\n\t----- bird -----\tfinancial",
    "156": "\nSELECT d.client_id, c.gender, c.birth_date\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE l.amount = (SELECT MAX(amount) FROM loan)\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "157": "\nSELECT COUNT(*) AS committed_crimes\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nWHERE t.`type` = 'commit' AND t.date BETWEEN '1995-01-01' AND '1995-12-31' AND a.account_id = 532;\n\n\t----- bird -----\tfinancial",
    "158": "\nSELECT DISTINCT t.account_id, d.district_id \nFROM trans t \nJOIN account a ON t.account_id = a.account_id \nJOIN order o ON a.account_id = o.account_id \nWHERE o.order_id = 33333;\n\n\n\t----- bird -----\tfinancial",
    "159": "\nSELECT t.*\nFROM trans t\nWHERE t.client_id = 3356 AND t.operation = 'withdrawal' AND t.type = 'cash'\n\n\n\t----- bird -----\tfinancial",
    "160": "\nSELECT COUNT(DISTINCT a.account_id)\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE a.frequency = 'weekly' AND l.amount < 200000;\n\n\n\t----- bird -----\tfinancial",
    "161": "\nSELECT c.type \nFROM card c \nJOIN disp d ON c.disp_id = d.disp_id \nJOIN client cl ON d.client_id = cl.client_id \nWHERE cl.client_id = 13539;\n\n\n\t----- bird -----\tfinancial",
    "162": "\nSELECT A2, A3, A4, A5, A6 FROM district WHERE district_id = (SELECT district_id FROM client WHERE client_id = 3541)\n\n\t----- bird -----\tfinancial",
    "163": "\nSELECT d.A2 AS district_name\nFROM account a\nJOIN disp d ON a.account_id = d.account_id\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.status = 'no problems'\nGROUP BY d.A2\nORDER BY COUNT(a.account_id) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tfinancial",
    "164": "\nSELECT client_id \nFROM order \nWHERE order_id = 32423;\n\n\n\t----- bird -----\tfinancial",
    "165": "\nSELECT t.*\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nWHERE a.district_id = 5;\n\n\n\t----- bird -----\tfinancial",
    "166": "\nSELECT COUNT(*) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Jesenik')\n\n\t----- bird -----\tfinancial",
    "167": "\nSELECT DISTINCT c.client_id \nFROM client c \nJOIN disp d ON c.client_id = d.client_id \nJOIN card cr ON d.disp_id = cr.disp_id \nWHERE cr.type = 'junior' AND cr.issued > '1996-01-01';\n\n\n\t----- bird -----\tfinancial",
    "168": "\n\nSELECT \n    CAST(SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN district dist ON c.district_id = dist.district_id\nWHERE AVG(dist.A12) > 10000\n\n\n\t----- bird -----\tfinancial",
    "169": "\n\nSELECT \n    (SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1997 THEN l.amount ELSE 0 END) - SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END)) / SUM(CASE WHEN EXTRACT(YEAR FROM l.date) = 1996 THEN l.amount ELSE 0 END) AS growth_rate\nFROM \n    loan l\nJOIN \n    disp d ON l.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'male' AND EXTRACT(YEAR FROM l.date) IN (1996, 1997)\n\n\n\t----- bird -----\tfinancial",
    "170": "\nSELECT COUNT(*) AS credit_card_withdrawals\nFROM trans\nWHERE date > '1995-12-31' AND type = 'withdrawal' AND k_symbol = 'credit card';\n\n\n\t----- bird -----\tfinancial",
    "171": "\nSELECT (SELECT COUNT(*) FROM district WHERE A2 = 'East Bohemia' AND A8 BETWEEN 1996 AND 1996) - \n(SELECT COUNT(*) FROM district WHERE A2 = 'North Bohemia' AND A8 BETWEEN 1996 AND 1996) AS crime_difference\n\n\t----- bird -----\tfinancial",
    "172": "\nSELECT COUNT(*) \nFROM disp \nWHERE account_id BETWEEN 1 AND 10;\n\n\n\t----- bird -----\tfinancial",
    "173": "\nSELECT COUNT(*) AS request_count, SUM(amount) AS total_debit\nFROM trans\nWHERE account_id = 3 AND type = 'statement' OR operation LIKE '%debit%' AND amount = 3539;\n\n\n\t----- bird -----\tfinancial",
    "174": "\nSELECT YEAR(birth_date) AS birth_year\nFROM client\nWHERE client_id = 130;\n\n\t----- bird -----\tfinancial",
    "175": "\nSELECT COUNT(DISTINCT d.account_id) \nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nWHERE d.type = 'owner disposition' AND a.frequency IN ('statement upon transaction', 'statement on transaction');\n\n\n\t----- bird -----\tfinancial",
    "176": "\nSELECT SUM(l.amount) AS total_debt, COUNT(*) AS payment_count\nFROM loan l\nJOIN disp d ON l.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.client_id = 992;\n\n\n\t----- bird -----\tfinancial",
    "177": "\nSELECT \n    SUM(t.amount) AS total_sum,\n    c.gender AS account_owner_gender\nFROM \n    trans t\nJOIN \n    account a ON t.account_id = a.account_id\nJOIN \n    client c ON a.client_id = c.client_id\nWHERE \n    t.trans_id > 851 AND c.client_id = 4\nGROUP BY \n    c.gender;\n\n\n\t----- bird -----\tfinancial",
    "178": "\nSELECT c.type \nFROM card c \nJOIN disp d ON c.disp_id = d.disp_id \nJOIN client cl ON d.client_id = cl.client_id \nWHERE cl.client_id = 9;\n\n\n\t----- bird -----\tfinancial",
    "179": "\nSELECT SUM(t.amount) AS total_payment\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nWHERE a.client_id = 617 AND YEAR(t.date) = 1998;\n\n\n\t----- bird -----\tfinancial",
    "180": "\nSELECT c.client_id, d.A2 AS branch\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE c.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\nAND d.A2 = 'East Bohemia';\n\n\n\t----- bird -----\tfinancial",
    "181": "\nSELECT DISTINCT d.client_id\nFROM disp d\nJOIN account a ON d.account_id = a.account_id\nJOIN loan l ON a.account_id = l.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE c.gender = 'female'\nORDER BY l.amount DESC\nLIMIT 3;\n\n\n\t----- bird -----\tfinancial",
    "182": "\nSELECT COUNT(DISTINCT c.client_id)\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nJOIN trans t ON a.account_id = t.account_id\nWHERE c.gender = 'M' AND c.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND t.amount > 4000 AND t.type = 'payment';\n\n\n\t----- bird -----\tfinancial",
    "183": "\nSELECT COUNT(*)\nFROM account a\nJOIN district d ON a.district_id = d.district_id\nWHERE d.A2 = 'Beroun' AND a.date > '1996-12-31';\n\n\n\t----- bird -----\tfinancial",
    "184": "\nSELECT COUNT(client_id) AS female_clients_with_junior_card\nFROM client\nJOIN card ON client.client_id = card.disp_id\nWHERE gender = 'female' AND type = 'junior';\n\n\n\t----- bird -----\tfinancial",
    "185": "\n\nSELECT COUNT(*) AS female_count, COUNT(DISTINCT client_id) AS total_client_count\nFROM client\nJOIN disp ON client.client_id = disp.client_id\nJOIN account ON disp.account_id = account.account_id\nJOIN district ON client.district_id = district.district_id\nWHERE A2 = 'Prague'\nAND gender = 'female';\nWITH female_clients AS (\n    SELECT COUNT(*) AS total_female_count\n    FROM client\n    JOIN disp ON client.client_id = disp.client_id\n    JOIN account ON disp.account_id = account.account_id\n    JOIN district ON client.district_id = district.district_id\n    WHERE A2 = 'Prague'\n    AND gender = 'female'\n)\nSELECT female_count / NULLIF(total_female_count, 0) AS proportion_female\nFROM female_clients;\n\n\n\t----- bird -----\tfinancial",
    "186": "\n\nSELECT \n    CAST(SUM(CASE WHEN frequency = 'weekly' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)\nFROM \n    account a\nJOIN \n    client c ON a.district_id = c.district_id\nWHERE \n    c.gender = 'male'\n\n\n\t----- bird -----\tfinancial",
    "187": "\nSELECT COUNT(DISTINCT c.client_id) \nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE a.frequency = 'weekly';\n\n\n\t----- bird -----\tfinancial",
    "188": "\nSELECT a.account_id\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE julianday(l.date + interval '24 months') - julianday(a.date) > 0\nGROUP BY a.account_id\nHAVING l.amount = (\n    SELECT MIN(loan.amount)\n    FROM account\n    JOIN loan ON account.account_id = loan.account_id\n    WHERE julianday(loan.date + interval '24 months') - julianday(account.date) > 0\n)\nAND a.date < '1997-01-01'\nSQL_END\n\t----- bird -----\tfinancial",
    "189": "\nSELECT DISTINCT d.account_id\nFROM disp d\nJOIN client c ON d.client_id = c.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE c.gender = 'female'\nAND (c.birth_date, a.frequency) IN (\n    SELECT c.birth_date, AVG(a.A10) as avg_salary\n    FROM disp d\n    JOIN client c ON d.client_id = c.client_id\n    JOIN account a ON d.account_id = a.account_id\n    WHERE c.gender = 'female'\n    GROUP BY c.birth_date\n    ORDER BY c.birth_date ASC, avg_salary ASC\n    LIMIT 1\n)\n\n\n\t----- bird -----\tfinancial",
    "190": "\n\nSELECT COUNT(client_id)\nFROM client\nWHERE birth_date = '1920-01-01' AND A6 LIKE '%East Bohemia%';\n\n\n\t----- bird -----\tfinancial",
    "191": "\nSELECT COUNT(DISTINCT l.account_id)\nFROM loan l\nWHERE l.duration = 24 AND l.status = 'pre-payment' AND l.payments = 52;\n\n\n\t----- bird -----\tfinancial",
    "192": "\n\nSELECT AVG(loan.amount) AS average_loan_amount, trans_id\nFROM trans\nJOIN account ON trans.account_id = account.account_id\nJOIN loan ON account.account_id = loan.account_id\nWHERE loan.status = 'running' AND trans.date > loan.date\nGROUP BY trans_id;\n\n\n\t----- bird -----\tfinancial",
    "193": "\nSELECT DISTINCT c.client_id, d.A2 AS district\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN account a ON d.account_id = a.account_id\nWHERE (SELECT COUNT(*) FROM order o WHERE o.account_id = a.account_id AND k_symbol != 'permanent') = 0\nAND (SELECT COUNT(*) FROM loan l WHERE l.account_id = a.account_id) = 0;\n\n\n\t----- bird -----\tfinancial",
    "194": "\nSELECT c.client_id, (DATE('now') - c.birth_date) / 365 AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card cr ON d.disp_id = cr.disp_id\nWHERE cr.type = 'high level credit card' AND EXISTS (\n    SELECT 1 FROM account a WHERE a.account_id = d.account_id AND EXISTS (\n        SELECT 1 FROM loan l WHERE l.account_id = a.account_id\n    )\n);\n\n\n\t----- bird -----\tfinancial",
    "195": "\nSELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1 \n\t----- bird -----\ttoxicology",
    "196": "\nSELECT COUNT(DISTINCT a.molecule_id)\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label != 'carcinogenic' AND a.element = 'Cl';\n\n\n\t----- bird -----\ttoxicology",
    "197": "\nSELECT AVG(COUNT(a.atom_id)) AS avg_oxygen_atoms\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'O' AND b.bond_type = 'single'\nGROUP BY m.molecule_id;\n\n\t----- bird -----\ttoxicology",
    "198": "\nSELECT AVG(T2.quantity)\nFROM bond AS T1\nJOIN (\n    SELECT molecule_id, COUNT(*) AS quantity\n    FROM connected\n    WHERE bond_id IS NOT NULL\n    GROUP BY molecule_id\n) AS T2 ON T1.molecule_id = T2.molecule_id\nJOIN atom AS T3 ON T1.molecule_id = T3.molecule_id\nJOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id\nWHERE T1.bond_type = 'single' AND T4.label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "199": "\nSELECT COUNT(DISTINCT a1.atom_id)\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON a1.molecule_id = m.molecule_id\nWHERE a1.element = 'Na' AND b.bond_type NOT LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "200": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'triple' AND m.label IN (SELECT label FROM carcinogenic_molecules)\n\n\t----- bird -----\ttoxicology",
    "201": "\nSELECT CAST(SUM(CASE WHEN b.bond_type = 'double' THEN 1 ELSE 0 END) * 12 AS FLOAT) / SUM(12) * 100 AS percentage_carbon_double_bonds\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'carbon'\n\n\t----- bird -----\ttoxicology",
    "202": "\nSELECT COUNT(*) FROM bond WHERE bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "203": "\nSELECT COUNT(*) FROM atom WHERE element != 'Br'\n\n\t----- bird -----\ttoxicology",
    "204": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN connected c ON m.molecule_id = c.atom_id OR m.molecule_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = 'carcinogenic'\nLIMIT 100\n\n\t----- bird -----\ttoxicology",
    "205": "\nSELECT DISTINCT m.molecule_id\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'Si'\n\n\t----- bird -----\ttoxicology",
    "206": "\nSELECT DISTINCT a.element, a2.element \nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR004_8_9');\n\n\n\t----- bird -----\ttoxicology",
    "207": "\nSELECT DISTINCT a1.element\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'double';\n\n\t----- bird -----\ttoxicology",
    "208": "\nSELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'H'\nGROUP BY m.label\nORDER BY COUNT(a.atom_id) DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "209": "\nSELECT b.bond_type\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Te'\n\n\t----- bird -----\ttoxicology",
    "210": "\nSELECT DISTINCT a1.element, a2.element\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE b.bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "211": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN connected c2 ON c.bond_id = c2.bond_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c2.atom_id = a2.atom_id \nJOIN molecule m ON a1.molecule_id = m.molecule_id \nWHERE m.label != 'carcinogenic';\n\n\n\t----- bird -----\ttoxicology",
    "212": "\nSELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label != 'carcinogenic'\nGROUP BY element\nORDER BY COUNT(*) ASC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "213": "\nSELECT b.bond_type\nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a1 ON c.atom_id = a1.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id\nWHERE a1.atom_id = 'TR004_8' AND a2.atom_id = 'TR004_20'\n\n\t----- bird -----\ttoxicology",
    "214": "\nSELECT DISTINCT m.label \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE a.element = 'tin' \nEXCEPT \nSELECT label \nFROM molecule;\nSQL_END\n\n\t----- bird -----\ttoxicology",
    "215": "\nSELECT COUNT(DISTINCT a1.atom_id)\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE a1.element = 'iodine' OR a1.element = 'sulfur'\nAND b.bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "216": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "217": "\nSELECT DISTINCT a.element, a.atom_id \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label = 'TR181';\n\n\n\t----- bird -----\ttoxicology",
    "218": "\nSELECT \nCAST(COUNT(DISTINCT m.molecule_id) - COUNT(DISTINCT a.atom_id) AS FLOAT) * 100 / COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nLEFT JOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label = 'carcinogenic' AND a.element != 'F'\n\n\t----- bird -----\ttoxicology",
    "219": "\nSELECT \n    CAST(COUNT(CASE WHEN b.bond_type = 'triple' AND c.bond_id IS NOT NULL THEN m.molecule_id END) AS FLOAT) * 100 / COUNT(m.molecule_id) \nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nJOIN \n    connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    b.bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "220": "\nSELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = 'TR000'\nGROUP BY element\nORDER BY COUNT(*) DESC, element ASC\nLIMIT 3\n\n\t----- bird -----\ttoxicology",
    "221": "\nSELECT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id \nWHERE m.label = 'TR001' AND b.bond_id = 'TR001_2_6';\n\n\n\t----- bird -----\ttoxicology",
    "222": "\nSELECT COUNT(*) - (SELECT COUNT(*) FROM molecule WHERE label = 'non-carcinogenic')\nFROM molecule WHERE label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "223": "\nSELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR_000_2_5';\n\n\t----- bird -----\ttoxicology",
    "224": "\nSELECT bond_id FROM connected WHERE atom_id2 = 'TR000_2';\n\n\n\t----- bird -----\ttoxicology",
    "225": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'double'\nGROUP BY m.label\nORDER BY m.label ASC\nLIMIT 5;\n\n\n\t----- bird -----\ttoxicology",
    "226": "\nSELECT \n    CAST(SUM(CASE WHEN b.bond_type = 'double' THEN 1 ELSE 0 END) * 100.0 / COUNT(b.bond_id) AS DECIMAL(5,2)) AS double_bond_percentage\nFROM \n    bond b\nJOIN \n    connected c ON b.bond_id = c.bond_id\nJOIN \n    atom a ON c.atom_id = a.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nJOIN \n    molecule m ON a.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id\nWHERE \n    m.label = 'TR008';\n\n\n\t----- bird -----\ttoxicology",
    "227": "\nSELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM molecule) AS carcinogenic_percentage\nFROM molecule\nWHERE label = 'carcinogenic';\n\n\t----- bird -----\ttoxicology",
    "228": "\nSELECT CAST(SUM(CASE WHEN a.element = 'H' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id) AS DECIMAL(5,2)) AS hydrogen_percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR206'\n\n\t----- bird -----\ttoxicology",
    "229": "\nSELECT b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR000';\n\n\n\t----- bird -----\ttoxicology",
    "230": "\nSELECT atom.element, molecule.label \nFROM atom \nJOIN connected ON atom.atom_id = connected.atom_id \nJOIN bond ON connected.bond_id = bond.bond_id \nJOIN connected c2 ON connected.atom_id2 = c2.atom_id \nJOIN atom a2 ON c2.atom_id2 = a2.atom_id \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id IN (\n    SELECT molecule_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR060')\n) AND a2.element IS NOT NULL;\n\n\n\t----- bird -----\ttoxicology",
    "231": "\nSELECT b.bond_type, COUNT(*) AS bond_count, m.label, CASE WHEN COUNT(*) = (SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR018')) THEN 'Yes' ELSE 'No' END AS is_carcinogenic\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.label = 'TR018'\nGROUP BY b.bond_type, m.label\nORDER BY bond_count DESC LIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "232": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'single'\nAND m.label NOT LIKE '%carcinogenic%'\nGROUP BY m.label\nORDER BY m.label ASC\nLIMIT 3;\n\n\n\t----- bird -----\ttoxicology",
    "233": "\nSELECT bond.bond_type, bond.bond_id \nFROM bond \nJOIN connected ON bond.bond_id = connected.bond_id \nJOIN atom a1 ON connected.atom_id = a1.atom_id \nJOIN atom a2 ON connected.atom_id2 = a2.atom_id \nJOIN molecule ON bond.molecule_id = molecule.molecule_id \nWHERE molecule.label = 'TR006' \nGROUP BY bond.bond_type, bond.bond_id \nORDER BY bond.bond_type ASC, COUNT(*) DESC \nLIMIT 2;\n\n\n\t----- bird -----\ttoxicology",
    "234": "\nSELECT COUNT(*) \nFROM bond AS b \nJOIN connected AS c ON b.bond_id = c.bond_id \nJOIN atom AS a1 ON c.atom_id = a1.atom_id \nJOIN atom AS a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule AS m ON b.molecule_id = m.molecule_id \nWHERE a1.atom_id = '12' AND m.label = 'TR009';\n\n\n\t----- bird -----\ttoxicology",
    "235": "\nSELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'bromine'\nAND m.label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "236": "\nSELECT b.bond_type, a.element AS atom1_element, a2.element AS atom2_element \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR001_6_9';\n\n\t----- bird -----\ttoxicology",
    "237": "\nSELECT m.label, b.label AS carcinogenic\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.atom_id = 'TR001_10'\n\n\t----- bird -----\ttoxicology",
    "238": "\nSELECT COUNT(DISTINCT molecule_id) \nFROM bond \nWHERE bond_type = 'triple'\n\n\t----- bird -----\ttoxicology",
    "239": "\nSELECT COUNT(*) AS connections_count\nFROM connected\nWHERE atom_id = '19';\n\n\t----- bird -----\ttoxicology",
    "240": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON a1.molecule_id = m.molecule_id \nWHERE m.label = 'TR004';\n\n\n\t----- bird -----\ttoxicology",
    "241": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m \nLEFT JOIN connected c ON m.molecule_id = ANY(STRING_TO_ARRAY(c.atom_id, ',') || STRING_TO_ARRAY(c.atom_id2, ','))\nWHERE m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "242": "\nSELECT DISTINCT m.label\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element BETWEEN '21' AND '25'\nAND m.label IN (SELECT label FROM molecule WHERE carcinogenic = TRUE)\n\n\t----- bird -----\ttoxicology",
    "243": "\nSELECT b.bond_id, b.bond_type \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a1 ON c.atom_id = a1.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE a1.element = 'phosphorus' AND a2.element = 'nitrogen';\n\n\n\t----- bird -----\ttoxicology",
    "244": "\nSELECT m.label, COUNT(b.bond_id) AS double_bonds_count\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = 'double'\nGROUP BY m.molecule_id, m.label\nORDER BY double_bonds_count DESC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "245": "\nSELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT atom_id, COUNT(*) AS bond_count\n    FROM connected\n    WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine')\n    GROUP BY atom_id\n) AS atom_bonds\n\n\t----- bird -----\ttoxicology",
    "246": "\nSELECT b.bond_type, b.bond_id \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE c.atom_id = '45';\n\n\n\t----- bird -----\ttoxicology",
    "247": "\nSELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\nSQL_END\n\t----- bird -----\ttoxicology",
    "248": "\nSELECT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON a1.molecule_id = m.molecule_id \nWHERE b.bond_type = 'triple' AND m.label = 'TR447';\n\n\n\t----- bird -----\ttoxicology",
    "249": "\nSELECT DISTINCT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label = 'TR144_8_19';\n\n\n\t----- bird -----\ttoxicology",
    "250": "\nSELECT m.label, COUNT(*) AS double_bonds_count \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE m.label IN (\n    SELECT mol.label \n    FROM molecule mol\n    JOIN atom a ON mol.molecule_id = a.molecule_id\n    JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\n    WHERE c.bond_id IN (\n        SELECT bond_id \n        FROM bond \n        WHERE bond_type = 'double'\n    )\n)\nAND b.bond_type = 'double'\nGROUP BY m.label\nORDER BY double_bonds_count DESC\nLIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "251": "\nSELECT element\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE molecule.label = 'carcinogenic'\nGROUP BY element\nORDER BY COUNT(*) ASC\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "252": "\nSELECT DISTINCT a1.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE a1.element = 'lead';\n\n\n\t----- bird -----\ttoxicology",
    "253": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "254": "\nWITH atom_combinations AS (\n    SELECT \n        a1.element || '-' || a2.element AS element_combination,\n        COUNT(*) AS bond_count\n    FROM \n        connected c\n    JOIN \n        atom a1 ON c.atom_id = a1.atom_id\n    JOIN \n        atom a2 ON c.atom_id2 = a2.atom_id\n    GROUP BY \n        a1.element || '-' || a2.element\n),\nmost_common_combination AS (\n    SELECT \n        element_combination,\n        bond_count\n    FROM \n        atom_combinations\n    ORDER BY \n        bond_count DESC\n    LIMIT 1\n)\nSELECT \n    (bond_count * 100.0 / (SELECT COUNT(*) FROM bond)) AS percentage\nFROM \n    most_common_combination;\n\n\t----- bird -----\ttoxicology",
    "255": "\nSELECT COUNT(*) AS single_bonds, COUNT(*) * (SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic') / COUNT(bond_id) AS proportion\nFROM bond\nWHERE bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "256": "\nSELECT COUNT(*)\nFROM atom\nWHERE element IN ('carbon', 'hydrogen');\n\n\t----- bird -----\ttoxicology",
    "257": "\nSELECT atom_id2 FROM atom WHERE element = 'sulfur';\n\n\n\t----- bird -----\ttoxicology",
    "258": "\nSELECT b.bond_type \nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE a.element = 'Tin';\n\n\n\t----- bird -----\ttoxicology",
    "259": "\nSELECT COUNT(DISTINCT element) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single')\n\n\t----- bird -----\ttoxicology",
    "260": "\nSELECT COUNT(DISTINCT a1.atom_id)\nFROM atom a1\nJOIN connected c ON a1.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple' AND (a1.element = 'phosphorus' OR a1.element = 'bromine')\n\n\t----- bird -----\ttoxicology",
    "261": "\nSELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%')\n\n\t----- bird -----\ttoxicology",
    "262": "\nSELECT m.molecule_id\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'single'\nAND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "263": "\nSELECT 100 * COUNT(*) FILTER (WHERE b.bond_type = 'single') OVER () / COUNT(*)::float AS chlorine_percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'chlorine'\n\n\t----- bird -----\ttoxicology",
    "264": "\nSELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\n\n\t----- bird -----\ttoxicology",
    "265": "\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nWHERE m.label = 'non carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "266": "\nSELECT COUNT(DISTINCT m.molecule_id) AS total_carcinogenic_molecules\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.molecule_id BETWEEN 'TR000' AND 'TR030'\n\n\t----- bird -----\ttoxicology",
    "267": "\nSELECT b.bond_type \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id BETWEEN 'TR000' AND 'TR050';\n\n\n\t----- bird -----\ttoxicology",
    "268": "\nSELECT a.element, a2.element \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR001_10_11';\n\n\n\t----- bird -----\ttoxicology",
    "269": "\nSELECT COUNT(DISTINCT b.bond_id)\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE a.element = 'iodine'\n\n\t----- bird -----\ttoxicology",
    "270": "\nSELECT b.bond_type AS bond_type, COUNT(*) AS count\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'Calcium'\nGROUP BY b.bond_type\n\n\t----- bird -----\ttoxicology",
    "271": "\nSELECT EXISTS (\n    SELECT 1 \n    FROM bond AS b \n    JOIN connected AS c ON b.bond_id = c.bond_id \n    JOIN atom AS a ON c.atom_id = a.atom_id \n    JOIN atom AS a2 ON c.atom_id2 = a2.atom_id \n    WHERE b.bond_id = 'TR001_1_8' AND (a.element = 'chlorine' OR a2.element = 'carbon')\n);\n\n\n\t----- bird -----\ttoxicology",
    "272": "\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN bond b ON a.atom_id = ANY (SELECT atom_id FROM connected WHERE bond_id = b.bond_id)\nJOIN connected c ON a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND c.atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C')\nWHERE b.bond_type = 'triple' AND m.label = 'non carcinogenic' AND a.element = 'C'\nGROUP BY m.molecule_id\nHAVING COUNT(DISTINCT c.atom_id2) > 1;\n\n\n\t----- bird -----\ttoxicology",
    "273": "\nSELECT (SUM(CASE WHEN element = 'Cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS chlorine_percentage\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id\nJOIN bond ON connected.bond_id = bond.bond_id\nJOIN molecule ON atom.molecule_id = molecule.molecule_id\nWHERE label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "274": "\nSELECT DISTINCT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label = 'TR001';\n\n\n\t----- bird -----\ttoxicology",
    "275": "\nSELECT DISTINCT T2.molecule_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = 'double'\n\n\t----- bird -----\ttoxicology",
    "276": "\nSELECT atom_id, atom_id2\nFROM connected \nJOIN bond ON connected.bond_id = bond.bond_id\nWHERE bond_type = 'triple'\nLIMIT 2;\n\n\n\t----- bird -----\ttoxicology",
    "277": "\nSELECT a.element AS toxicology_element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR005_16_26';\n\n\n\t----- bird -----\ttoxicology",
    "278": "\nSELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'single'\nAND m.label != 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "279": "\nSELECT m.label \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_id = 'TR001_10_11';\n\n\n\t----- bird -----\ttoxicology",
    "280": "\nSELECT b.bond_id, m.label AS carcinogenic\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = 'triple'\nGROUP BY b.bond_id, m.label;\n\n\n\t----- bird -----\ttoxicology",
    "281": "\nSELECT m.label, a.element, COUNT(*) AS tally\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label IN (\n    SELECT label \n    FROM molecule \n    WHERE label IN (\n        SELECT label \n        FROM atom \n        WHERE atom_id = (\n            SELECT atom_id \n            FROM connected \n            GROUP BY atom_id \n            HAVING COUNT(*) > 3\n            LIMIT 1\n        )\n    ) AND m.label IN (\n        SELECT label \n        FROM molecule \n        WHERE carcinogenic = TRUE\n    )\n)\nGROUP BY m.label, a.element\n\n\t----- bird -----\ttoxicology",
    "282": "\nSELECT m.label, COUNT(a.element) AS hydrogen_count, (COUNT(a.element) * 1.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006')) AS ratio\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'H' AND a.molecule_id = 'TR006'\nGROUP BY m.label;\n\n\n\t----- bird -----\ttoxicology",
    "283": "\nSELECT m.label AS Is_Carcinogenic\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Ca'\nAND EXISTS (\n    SELECT 1 \n    FROM molecule_properties mp\n    WHERE m.molecule_id = mp.molecule_id\n    AND mp.carcinogenic = 'Yes'\n)\n\n\t----- bird -----\ttoxicology",
    "284": "\nSELECT b.bond_type\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'Tellurium';\n\n\n\t----- bird -----\ttoxicology",
    "285": "\nSELECT DISTINCT a.element\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE b.bond_id = 'TR001_10_11';\n\n\n\t----- bird -----\ttoxicology",
    "286": "\nSELECT \n(SELECT COUNT(DISTINCT m.molecule_id) FROM bond WHERE bond_type = 'triple') * 100 / (SELECT COUNT(DISTINCT m.molecule_id) FROM bond) AS triple_bond_percentage\n\n\t----- bird -----\ttoxicology",
    "287": "\nSELECT \n    COUNT(CASE WHEN b.bond_type = 'double' THEN c.bond_id END) * 100.0 / COUNT(c.bond_id) AS percent_double_bonds\nFROM \n    molecule m\nJOIN \n    connected c ON m.molecule_id = c.bond_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nWHERE \n    m.molecule_id = 'TR047';\n\n\n\t----- bird -----\ttoxicology",
    "288": "\nSELECT m.label AS carcinogenic\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON (a.atom_id = c.atom_id OR a.atom_id = c.atom_id2)\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'TR001_1'\nLIMIT 1;\n\n\t----- bird -----\ttoxicology",
    "289": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE m.molecule_id = 'TR151'\nGROUP BY m.label\nHAVING COUNT(DISTINCT a.element) > 1 -- Assuming molecules with more than one element are carcinogenic\n\n\t----- bird -----\ttoxicology",
    "290": "\nSELECT DISTINCT a.element \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label = 'TR151' AND a.element IN ('As', 'Sb', 'Te', 'Se', 'Pb', 'Hg');\n\n\n\t----- bird -----\ttoxicology",
    "291": "\nSELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_compounds\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.label LIKE '%carcinogenic%';\n\n\t----- bird -----\ttoxicology",
    "292": "\nSELECT DISTINCT a1.element, a1.atom_id \nFROM atom a1 \nJOIN molecule m ON a1.molecule_id = m.molecule_id \nWHERE m.molecule_id BETWEEN 'TR010' AND 'TR050' AND a1.element = 'carbon';\n\n\n\t----- bird -----\ttoxicology",
    "293": "\nSELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label LIKE '%carcinogenic%';\n\n\t----- bird -----\ttoxicology",
    "294": "\nSELECT DISTINCT b.bond_id\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE b.bond_type = 'double' AND m.label = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "295": "\nSELECT COUNT(DISTINCT a.atom_id)\nFROM atom a\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'hydrogen' AND m.label = 'carcinogenic compound'\n\n\t----- bird -----\ttoxicology",
    "296": "\nSELECT m.molecule_id \nFROM connected c \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN molecule m ON c.molecule_id = m.molecule_id \nWHERE a.element = 'TR00_1' AND b.bond_type = 'TR00_1_2';\n\n\n\t----- bird -----\ttoxicology",
    "297": "\nSELECT a1.element, a1.atom_id \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE a1.element = 'carbon' AND a2.element != 'carbon'\nSQL_END\n\n\t----- bird -----\ttoxicology",
    "298": "\nSELECT \n    CAST(SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS DECIMAL(5,2))\nFROM (\n    SELECT DISTINCT m.molecule_id\n    FROM atom a\n    JOIN connected c ON a.atom_id = c.atom_id\n    JOIN bond b ON c.bond_id = b.bond_id\n    JOIN molecule m ON a.molecule_id = m.molecule_id\n) AS carcinogenic_molecules\nJOIN atom a ON a.molecule_id IN (SELECT molecule_id FROM carcinogenic_molecules)\nWHERE a.element = 'H'\n\n\t----- bird -----\ttoxicology",
    "299": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nWHERE m.label = 'TR124'\n\n\t----- bird -----\ttoxicology",
    "300": "\nSELECT DISTINCT a.element \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.label = 'TR186';\n\n\n\t----- bird -----\ttoxicology",
    "301": "\nSELECT b.bond_type \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE a.molecule_id = (SELECT molecule_id FROM atom WHERE atom_id = 'TR007_4_19');\n\n\n\t----- bird -----\ttoxicology",
    "302": "\nSELECT DISTINCT a1.element, a2.element \nFROM connected c \nJOIN atom a1 ON c.atom_id = a1.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR001_2_4';\n\n\n\t----- bird -----\ttoxicology",
    "303": "\nSELECT COUNT(*) AS double_bonds, m.label \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.bond_type = 'double' AND m.molecule_id = (SELECT molecule_id FROM atom WHERE element = 'TR006') \nGROUP BY m.label;\n\n\n\t----- bird -----\ttoxicology",
    "304": "\nSELECT m.label, a.element\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label IN ('Carcinogenic');\n\n\t----- bird -----\ttoxicology",
    "305": "\nSELECT b.bond_id, a.element AS atom1, a2.element AS atom2, m.label AS molecule_label \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "306": "\nSELECT DISTINCT m.label, a.element\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.bond_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id)\nWHERE b.bond_type = 'triple';\n\n\n\t----- bird -----\ttoxicology",
    "307": "\nSELECT DISTINCT a1.element, a2.element \nFROM connected c \nJOIN atom a1 ON c.atom_id = a1.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE b.bond_id = 'TR000_2_3';\n\n\n\t----- bird -----\ttoxicology",
    "308": "\nSELECT COUNT(DISTINCT b.bond_id) \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE a.element = 'chlorine'\n\n\t----- bird -----\ttoxicology",
    "309": "\nSELECT a.atom_id, COUNT(DISTINCT b.bond_type) AS bond_types_count \nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id AND m.label = 'TR346'\nGROUP BY a.atom_id;\n\n\n\t----- bird -----\ttoxicology",
    "310": "\nSELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules, \n       SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_molecules\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = 'double';\n\n\t----- bird -----\ttoxicology",
    "311": "\nSELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nLEFT JOIN atom a ON m.molecule_id = a.molecule_id\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nLEFT JOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element != 'S' AND b.bond_type != 'double'\n\n\t----- bird -----\ttoxicology",
    "312": "\nSELECT m.label\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nWHERE b.bond_id = 'TR001_2_4'\n\n\t----- bird -----\ttoxicology",
    "313": "\nSELECT COUNT(DISTINCT atom_id) \nFROM atom \nWHERE molecule_id = 'TR005';\n\n\t----- bird -----\ttoxicology",
    "314": "\nSELECT COUNT(*) FROM bond WHERE bond_type = 'single'\n\n\t----- bird -----\ttoxicology",
    "315": "\nSELECT DISTINCT m.label \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'cl'\nAND EXISTS (\n    SELECT 1 \n    FROM molecule carcinogenic_mol\n    JOIN property p ON carcinogenic_mol.molecule_id = p.molecule_id\n    WHERE p.property_name = 'carcinogenic' AND p.property_value = 'true'\n    AND m.molecule_id = carcinogenic_mol.molecule_id\n)\n\n\n\t----- bird -----\ttoxicology",
    "316": "\nSELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nLEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'c'\nAND m.label NOT LIKE '%carcinogenic%';\n\n\n\t----- bird -----\ttoxicology",
    "317": "\nSELECT \n(SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'Cl' AND m.label = 'carcinogenic') * 100.0 / \n(SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a ON c.atom_id = a.atom_id WHERE a.element = 'Cl') AS percentage\n\n\t----- bird -----\ttoxicology",
    "318": "\nSELECT T4.molecule_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T1.atom_id = T3.atom_id JOIN molecule AS T4 ON T2.molecule_id = T4.molecule_id WHERE T2.bond_id = 'TR001_1_7';\n\n\n\t----- bird -----\ttoxicology",
    "319": "\nSELECT COUNT(DISTINCT element)\nFROM atom\nJOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2\nWHERE connected.bond_id = 'TR001_3_4';\n\n\n\t----- bird -----\ttoxicology",
    "320": "\nSELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE c.atom_id = 'TR000_1' AND c.atom_id2 = 'TR000_2';\n\n\n\t----- bird -----\ttoxicology",
    "321": "\nSELECT m.label \nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id AND 'TR000_4' = (SELECT atom_id FROM atom WHERE atom_id = c.atom_id2)\nJOIN bond b ON c.bond_id = b.bond_id;\n\n\n\t----- bird -----\ttoxicology",
    "322": "\nSELECT element\nFROM atom\nWHERE atom_id = 'TR000_1';\n\n\t----- bird -----\ttoxicology",
    "323": "\nSELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS Is_Carcinogenic\nFROM bond b\nJOIN connected c ON b.bond_id = c.bond_id\nJOIN atom a ON c.atom_id = a.atom_id\nJOIN atom a2 ON c.atom_id2 = a2.atom_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE m.label = 'TR000'\n\n\t----- bird -----\ttoxicology",
    "324": "\nSELECT \n    CAST(SUM(CASE WHEN b.bond_type = 'single' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id) AS DECIMAL(5,2))\nFROM \n    atom a\nJOIN \n    connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN \n    bond b ON c.bond_id = b.bond_id\n\n\t----- bird -----\ttoxicology",
    "325": "\nSELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE a.element = 'Nitrogen'\nAND m.label LIKE '%carcinogenic%'\n\n\t----- bird -----\ttoxicology",
    "326": "\nSELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE a.element = 'Sulphur' AND b.bond_type = 'double'\n\n\t----- bird -----\ttoxicology",
    "327": "\nSELECT m.label\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nGROUP BY m.molecule_id, m.label\nHAVING COUNT(a.atom_id) > 5 AND m.label NOT LIKE '%carcinogenic%'\nSQL_END\n\n\t----- bird -----\ttoxicology",
    "328": "\nSELECT DISTINCT a1.element, a2.element \nFROM atom a1 \nJOIN connected c ON a1.atom_id = c.atom_id \nJOIN bond b ON c.bond_id = b.bond_id \nJOIN atom a2 ON c.atom_id2 = a2.atom_id \nJOIN molecule m ON a1.molecule_id = m.molecule_id \nWHERE m.label = 'TR024' AND b.bond_type = 'double';\n\n\n\t----- bird -----\ttoxicology",
    "329": "\nSELECT m.label, COUNT(a.atom_id) AS atom_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nGROUP BY m.molecule_id, m.label\nORDER BY atom_count DESC\nLIMIT 1;\n\n\n\t----- bird -----\ttoxicology",
    "330": "\nSELECT \n    COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT m2.molecule_id) FROM molecule m2) AS carcinogenic_percentage\nFROM \n    molecule m\nJOIN \n    connected c ON m.molecule_id = c.bond_id\nJOIN \n    bond b ON c.bond_id = b.bond_id\nJOIN \n    atom a ON c.atom_id = a.atom_id\nJOIN \n    atom a2 ON c.atom_id2 = a2.atom_id\nWHERE \n    m.label = 'carcinogenic' AND b.bond_type = 'triple' AND (a.element = 'H' OR a2.element = 'H')\n\n\t----- bird -----\ttoxicology",
    "331": "\nSELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = 'carcinogenic'\n\n\t----- bird -----\ttoxicology",
    "332": "\nSELECT COUNT(DISTINCT m.molecule_id)\nFROM molecule m\nJOIN connected c ON m.molecule_id = c.molecule_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE m.molecule_id BETWEEN 'TR004' AND 'TR010'\nAND b.bond_type = 'single';\n\n\n\t----- bird -----\ttoxicology",
    "333": "\nSELECT COUNT(*)\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR008' AND a.element = 'C';\n\n\t----- bird -----\ttoxicology",
    "334": "\nSELECT element\nFROM atom\nWHERE atom_id = 'TR004_7'\nAND molecule_id IN (\n    SELECT molecule_id\n    FROM molecule\n    WHERE label != 'carcinogenic'\n)\n\n\t----- bird -----\ttoxicology",
    "335": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'double' AND (c.atom_id LIKE '%O%' AND c.atom_id2 LIKE '%O%')\n\n\t----- bird -----\ttoxicology",
    "336": "\nSELECT COUNT(DISTINCT m.molecule_id) \nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nJOIN connected c ON b.bond_id = c.bond_id\nWHERE b.bond_type = 'triple'\nAND NOT EXISTS (\n    SELECT 1 FROM molecule WHERE label IN ('carcinogenic')\n)\n\n\n\t----- bird -----\ttoxicology",
    "337": "\nSELECT a.element, b.bond_type \nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.molecule_id = 'TR016';\n\n\n\t----- bird -----\ttoxicology",
    "338": "\nSELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE m.label = 'TR012' AND b.bond_type = 'double' AND a.element = 'C';\n\n\n\t----- bird -----\ttoxicology",
    "339": "\nSELECT a.atom_id\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON a.molecule_id = m.molecule_id\nWHERE a.element = 'O' AND m.label LIKE '%carcinogenic%';\n\n\n\t----- bird -----\ttoxicology",
    "340": "\nSELECT c.name, c.manaCost, c.power, c.toughness, c.text\nFROM cards c\nWHERE c.hasFoil = 1 AND (c.rarity = 'Mythic' OR c.edhrecRank <= 50)\n\n\t----- bird -----\tcard_games",
    "341": "\nSELECT * FROM cards WHERE borderColor = 'borderless' AND hasFoil = 0\n\n\t----- bird -----\tcard_games",
    "342": "\nSELECT c.name \nFROM cards c \nWHERE c.faceConvertedManaCost > c.convertedManaCost;\n\n\n\t----- bird -----\tcard_games",
    "343": "\nSELECT c.name \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.frameVersion = '2015' AND c.edhrecRank < 100;\n\n\n\t----- bird -----\tcard_games",
    "344": "\nSELECT c.name\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'Mythic' AND l.format = 'Gladiator' AND l.status = 'Banned';\n\n\n\t----- bird -----\tcard_games",
    "345": "\nSELECT l.format, l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.types LIKE '%Artifact%' AND c.otherFaceIds = '' AND l.format = 'vintage';\n\n\n\t----- bird -----\tcard_games",
    "346": "\nSELECT c.id, c.artist\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.power IS NULL AND l.format = 'commander'\n\n\t----- bird -----\tcard_games",
    "347": "\nSELECT c.name, r.text AS ruling_text, c.flavorText, c.missing_properties, c.degraded_values\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN rulings r ON c.uuid = r.uuid\nWHERE fd.flavorText LIKE '%Stephen Daniel%'\nUNION ALL\nSELECT c.name, NULL AS ruling_text, c.flavorText, c.missing_properties, c.degraded_values\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nLEFT JOIN rulings r ON c.uuid = r.uuid\nWHERE fd.flavorText LIKE '%Stephen Daniel%' AND r.id IS NULL;\n\n\n\t----- bird -----\tcard_games",
    "348": "\nSELECT r.date, r.text\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Sublime Epiphany' AND c.number = '74s';\n\n\t----- bird -----\tcard_games",
    "349": "\nSELECT c.name, c.artist, COUNT(r.uuid) AS ruling_count, MAX(CASE WHEN c.mcmId = '' THEN 0 ELSE 1 END) AS is_promo_printing\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nGROUP BY c.id\nORDER BY ruling_count DESC, is_promo_printing DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "350": "\nSELECT st.translation \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nJOIN cards c ON s.mcmName = c.name AND c.number = '29'\nWHERE c.name = 'Annul';\n\n\n\t----- bird -----\tcard_games",
    "351": "\nSELECT c.name \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'Japanese' AND c.isAlternative = 1;\n\n\n\t----- bird -----\tcard_games",
    "352": "\nSELECT \nCAST(SUM(CASE WHEN availability = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM cards\n\n\t----- bird -----\tcard_games",
    "353": "\nSELECT s.name, COUNT(c.uuid) AS total_cards\nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE st.language = 'Italian'\nGROUP BY s.name\n\n\t----- bird -----\tcard_games",
    "354": "\nSELECT COUNT(DISTINCT T1.type) FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Aaron Boyd'\n\n\t----- bird -----\tcard_games",
    "355": "\nSELECT keywords FROM cards WHERE name = 'Angel of Mercy';\n\n\n\t----- bird -----\tcard_games",
    "356": "\nSELECT COUNT(*) FROM cards WHERE power = 'infinity'\n\n\t----- bird -----\tcard_games",
    "357": "\nSELECT c.promoTypes\nFROM cards c\nWHERE c.name = 'Duress';\n\n\n\t----- bird -----\tcard_games",
    "358": "\nSELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\n\n\t----- bird -----\tcard_games",
    "359": "\nSELECT c.type \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.name = 'Ancestor''s Chosen' AND c.originalType = fd.text;\n\n\n\t----- bird -----\tcard_games",
    "360": "\nSELECT DISTINCT t2.language \nFROM cards AS c \nJOIN sets AS s ON c.setCode = s.code \nJOIN set_translations AS t2 ON s.setCode = t2.setCode;\nWHERE c.name = 'Angel of Mercy';\n\n\n\t----- bird -----\tcard_games",
    "361": "\nSELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'restricted' AND c.text IS NOT NULL AND c.text != ''\n\n\t----- bird -----\tcard_games",
    "362": "\nSELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Condemn')\n\n\t----- bird -----\tcard_games",
    "363": "\nSELECT COUNT(c.id)\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE l.status = 'restricted'\nAND c.isStarter = 1\n\n\t----- bird -----\tcard_games",
    "364": "\nSELECT l.status \nFROM legalities l \nJOIN cards c ON l.uuid = c.uuid \nWHERE c.name = 'Cloudchaser Eagle';\n\n\n\t----- bird -----\tcard_games",
    "365": "\nSELECT c.type \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.name = 'Benalish Knight';\n\n\n\t----- bird -----\tcard_games",
    "366": "\nSELECT r.text AS rule\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.name = 'Benalish Knight'\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "367": "\nSELECT DISTINCT c.artist\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Phyrexian'\n\n\t----- bird -----\tcard_games",
    "368": "\nSELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards \n\t----- bird -----\tcard_games",
    "369": "\nSELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\n\n\t----- bird -----\tcard_games",
    "370": "\nSELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian'\n\n\t----- bird -----\tcard_games",
    "371": "\nSELECT CAST(SUM(CASE WHEN f.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM cards c \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.isStorySpotlight = 1\n\n\t----- bird -----\tcard_games",
    "372": "\nSELECT COUNT(*) FROM cards WHERE toughness = '99'\n\n\t----- bird -----\tcard_games",
    "373": "\nSELECT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.flavorText LIKE '%Aaron Boyd%';\n\n\n\t----- bird -----\tcard_games",
    "374": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND mtgoId IS NOT NULL AND mtgoFoilId IS NULL \n\t----- bird -----\tcard_games",
    "375": "\nSELECT id FROM cards WHERE convertedManaCost = 0;\n\n\t----- bird -----\tcard_games",
    "376": "\nSELECT c.layout \nFROM cards c \nWHERE c.keywords LIKE '%flying%';\n\n\n\t----- bird -----\tcard_games",
    "377": "\nSELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%'\n\n\t----- bird -----\tcard_games",
    "378": "\nSELECT c.id\nFROM cards c\nWHERE c.hasFoil = 1\nAND EXISTS (\n    SELECT 1 \n    FROM cards c2 \n    WHERE c2.uuid = c.uuid \n    AND c2.hasFoil = 0\n)\nSQL_END\n\n\t----- bird -----\tcard_games",
    "379": "\nSELECT id FROM cards WHERE duelDeck = 'a';\n\n\n\t----- bird -----\tcard_games",
    "380": "\nSELECT c.edhrecRank \nFROM cards c \nWHERE c.frameVersion = '2015';\n\n\n\t----- bird -----\tcard_games",
    "381": "\nSELECT DISTINCT artist FROM cards WHERE flavorText IS NOT NULL AND EXISTS (SELECT 1 FROM foreign_data fd WHERE fd.uuid = cards.uuid AND fd.language = 'zh_CN')\n\n\t----- bird -----\tcard_games",
    "382": "\nSELECT c.name \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.availability = 'paper' AND fd.language = 'Japanese';\n\n\n\t----- bird -----\tcard_games",
    "383": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'White' AND uuid IN (SELECT uuid FROM legalities WHERE status = 'banned')\n\n\t----- bird -----\tcard_games",
    "384": "\nSELECT c.uuid, f.language\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE l.format = 'legacy';\n\n\n\t----- bird -----\tcard_games",
    "385": "\nSELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Beacon of Immortality') \n\t----- bird -----\tcard_games",
    "386": "\nSELECT COUNT(c.uuid) AS card_count, l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.frameVersion = 'future' \nGROUP BY l.status;\n\n\n\t----- bird -----\tcard_games",
    "387": "\nSELECT c.colors, c.colorIdentity\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'OGW';\n\n\n\t----- bird -----\tcard_games",
    "388": "\nSELECT DISTINCT f.language, s.translation \nFROM cards c \nJOIN set_translations s ON c.setCode = s.setCode \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.setCode = '10E' AND c.convertedManaCost = 5;\nSQL_END\n\n\t----- bird -----\tcard_games",
    "389": "\nSELECT c.name, r.text AS ruling_date \nFROM cards c \nJOIN rulings r ON c.uuid = r.uuid \nWHERE c.originalType = 'Creature - Elf';\n\n\n\t----- bird -----\tcard_games",
    "390": "\nSELECT c.colors, l.format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.id BETWEEN 1 AND 20;\n\n\n\t----- bird -----\tcard_games",
    "391": "\nSELECT c.name, f.language, s.name AS set_name\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE c.types LIKE '%Artifact%' AND c.colors LIKE '%Black%' AND f.language IS NOT NULL;\nSQL_END\n\n\t----- bird -----\tcard_games",
    "392": "\nSELECT c.name\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.rarity = 'Uncommon'\nORDER BY r.date ASC, c.name ASC\nLIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "393": "\nSELECT COUNT(*) \nFROM cards \nWHERE artist = 'John Avon' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NULL;\n\n\n\t----- bird -----\tcard_games",
    "394": "\nSELECT COUNT(*) \nFROM cards \nWHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "395": "\nSELECT COUNT(*) \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.artist = 'UDON' AND c.hand = '-1' AND c.printings LIKE '%mtgo%';\n\n\n\t----- bird -----\tcard_games",
    "396": "\nSELECT COUNT(*) \nFROM cards \nWHERE frameVersion = '1993' AND hasContentWarning = 1 AND hasFoil = 0 AND hasNonFoil = 1;\n\n\n\t----- bird -----\tcard_games",
    "397": "\nSELECT manaCost \nFROM cards \nWHERE layout = 'normal' \nAND frameVersion = '2003' \nAND borderColor = 'black' \nAND availability IN ('paper', 'mtgo');\n\n\n\t----- bird -----\tcard_games",
    "398": "\nSELECT SUM(CAST(REPLACE(manaCost, '{', '') AS REAL)) - convertedManaCost AS TotalUnconvertedManaCost\nFROM cards\nWHERE artist = 'Rob Alexander';\n\n\n\t----- bird -----\tcard_games",
    "399": "\nSELECT DISTINCT type FROM cards\n\n\t----- bird -----\tcard_games",
    "400": "\nSELECT DISTINCT s.setCode\nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE st.language = 'Spanish';\n\n\n\t----- bird -----\tcard_games",
    "401": "\nSELECT CAST(SUM(CASE WHEN c.frameEffects LIKE '%legendary%' AND r.text LIKE '%+3 maximum hand size%' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(c.id) * 100 AS percentage\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.frameEffects LIKE '%legendary%'\n\n\t----- bird -----\tcard_games",
    "402": "\n\nSELECT \n    c.id,\n    COUNT(*) * 100 / SUM(CASE WHEN c.isStoryspotlight = 1 THEN 1 ELSE 0 END) AS percentage\nFROM \n    cards c\nWHERE \n    c.isstoryspotlight = 1 AND c.text IS NOT NULL\nGROUP BY \n    c.id\n\n\n\t----- bird -----\tcard_games",
    "403": "\nSELECT c.name, COUNT(*) * 100 / (SELECT COUNT(*) FROM foreign_data WHERE language = 'Spanish') AS percentage\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.language = 'Spanish'\nGROUP BY c.name\nORDER BY percentage DESC;\n\n\t----- bird -----\tcard_games",
    "404": "\nSELECT DISTINCT T2.language \nFROM sets AS T1 \nJOIN set_translations AS T2 ON T1.setCode = T2.setCode \nWHERE T1.baseSetSize = 309;\n\n\n\t----- bird -----\tcard_games",
    "405": "\nSELECT COUNT(*) \nFROM set_translations ST\nJOIN sets S ON ST.setCode = S.code\nWHERE S.block = 'Commander' AND ST.language = 'Portuguese (Brasil)';\n\n\n\t----- bird -----\tcard_games",
    "406": "\nSELECT c.id, c.type, l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.types LIKE '%Creature%' AND l.format IN ('commander', 'legacy', 'modern', 'standard', 'pennydreadful', 'historic', 'vintage', 'pauper', 'brawl', 'duel', ' penny', 'commander', 'limited');\n\n\n\t----- bird -----\tcard_games",
    "407": "\nSELECT ST.translation FROM set_translations AS ST JOIN sets AS S ON ST.setCode = S.code WHERE ST.language = 'de' AND S.types IS NOT NULL GROUP BY ST.translation\n\n\t----- bird -----\tcard_games",
    "408": "\nSELECT COUNT(*) FROM cards WHERE power IS NULL AND text LIKE '%triggered ability%'\n\n\t----- bird -----\tcard_games",
    "409": "\nSELECT COUNT(*) \nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.layout = 'normal' AND r.text = 'This is a triggered mana ability' AND fd.uuid IS NULL\nAND c.otherFaceIds IS NULL\nAND EXISTS (\n    SELECT 1 \n    FROM legalities l \n    WHERE l.uuid = c.uuid AND l.format = 'pre-modern'\n)\n\n\n\t----- bird -----\tcard_games",
    "410": "\nSELECT c.id\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.artist = 'Erica Yang' AND l.format = 'pauper' AND c.layout = 'normal'\n\n\n\t----- bird -----\tcard_games",
    "411": "\nSELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation';\n\n\n\t----- bird -----\tcard_games",
    "412": "\nSELECT f.name AS foreign_name\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.artist = 'Matthew D. Wilson' AND c.types LIKE '%Creature%' AND c.layout = 'normal' AND c.borderColor = 'black' AND f.language = 'fr';\n\n\n\t----- bird -----\tcard_games",
    "413": "\nSELECT COUNT(DISTINCT c.uuid)\nFROM cards c\nJOIN rulings r ON c.uuid = r.uuid\nWHERE c.rarity = 'Rare' AND r.date = '2009-10-01';\n\n\n\t----- bird -----\tcard_games",
    "414": "\nSELECT T2.translation FROM sets AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.block = 'Ravnica' AND T2.language IS NOT NULL GROUP BY T2.translation HAVING COUNT(T2.id) = 180\n\n\t----- bird -----\tcard_games",
    "415": "\nSELECT CAST(SUM(CASE WHEN c.hasContentWarning = 0 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(c.id) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.layout = 'normal' AND l.format = 'commander' AND l.status = 'legal'\n\n\t----- bird -----\tcard_games",
    "416": "\n\nSELECT \n    COUNT(CASE WHEN c.power IS NULL OR c.power = '*' THEN f.language ELSE NULL END) * 100 / COUNT(c.power IS NULL OR c.power = '*') AS percentage\nFROM \n    cards c\nLEFT JOIN \n    foreign_data f ON c.uuid = f.uuid\nWHERE \n    f.language = 'French'\n\n\n\t----- bird -----\tcard_games",
    "417": "\nSELECT CAST(SUM(CASE WHEN s.type = 'Expansion' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE st.language = 'Japanese'\nGROUP BY s.type\nHAVING s.type = 'Expansion'\n\n\t----- bird -----\tcard_games",
    "418": "\nSELECT p.printings\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nJOIN rulings r ON c.uuid = r.uuid\nLEFT JOIN printings p ON c.uuid = p.uuid\nWHERE f.name = 'Daren Bader'\n\n\t----- bird -----\tcard_games",
    "419": "\nSELECT COUNT(*) \nFROM cards \nWHERE colorIdentity != '' AND borderColor = 'none' AND edhrecRank > 12000;\n\n\n\t----- bird -----\tcard_games",
    "420": "\nSELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND promoTypes IS NOT NULL AND promoTypes != ''\n\n\t----- bird -----\tcard_games",
    "421": "\nSELECT c.name, c.power, c.promoTypes \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.power IS NOT NULL AND c.power != '' AND c.promoTypes LIKE '%arena league%' AND l.status = 'legal' \nORDER BY c.name ASC, c.power DESC \nLIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "422": "\nSELECT f.language \nFROM foreign_data f \nJOIN cards c ON f.uuid = c.uuid \nWHERE c.multiverseId = 149934;\n\n\n\t----- bird -----\tcard_games",
    "423": "\nSELECT TOP 3 c.id AS kingdom_foil_id, f.id AS kingdom_card_id\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nWHERE c.hasFoil = 1 AND f.type = 'Card'\nORDER BY c.cardKingdomFoilId ASC\n\nSQL_END\n\t----- bird -----\tcard_games",
    "424": "\nSELECT CAST(SUM(CASE WHEN c.text IS NULL AND s.type = 'normal' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) FROM cards c LEFT JOIN sets s ON c.setCode = s.code\n\n\t----- bird -----\tcard_games",
    "425": "\nSELECT number \nFROM cards \nWHERE subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%' AND otherFaceIds = '';\n\n\n\t----- bird -----\tcard_games",
    "426": "\n\nSELECT s.name, st.translation \nFROM sets s \nJOIN set_translations st ON s.setCode = st.setCode \nWHERE s.isOnlineOnly = 0 \nGROUP BY s.name, st.translation \nORDER BY st.translation ASC \nLIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "427": "\nSELECT DISTINCT t2.language \nFROM sets AS t1 \nJOIN set_translations AS t2 ON t1.setCode = t2.setCode \nWHERE t1.name = 'Archenemy' AND t1.setCode = 'ARC';\n\n\n\t----- bird -----\tcard_games",
    "428": "\nSELECT s.name, st.translation FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE s.id = 5\n\n\t----- bird -----\tcard_games",
    "429": "\nSELECT language, type FROM sets WHERE id = 206;\n\n\t----- bird -----\tcard_games",
    "430": "\nSELECT s.id, s.name\nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode AND st.language = 'Italian'\nWHERE s.block = 'Shadowmoor'\nGROUP BY s.id, s.name\nORDER BY s.name ASC\nLIMIT 2;\n\n\n\t----- bird -----\tcard_games",
    "431": "\nSELECT s.id\nFROM sets s\nJOIN foreign_data fd ON s.code = fd.setCode\nWHERE s.isForeignOnly = 1 AND fd.language = 'Japanese' AND s.isFoilOnly = 0\n\n\t----- bird -----\tcard_games",
    "432": "\nSELECT s.name AS russian_set_name, COUNT(*) AS card_count\nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE st.language = 'Russian'\nGROUP BY s.name\nORDER BY card_count DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "433": "\nSELECT CAST(SUM(CASE WHEN f.language = 'Chinese Simplified' AND c.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards c JOIN foreign_data f ON c.uuid = f.uuid \n\t----- bird -----\tcard_games",
    "434": "\nSELECT COUNT(DISTINCT s.code) \nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE st.language = 'Japanese' AND NOT EXISTS (SELECT 1 FROM sets WHERE code = s.code AND mtgoCode IS NULL)\n\n\t----- bird -----\tcard_games",
    "435": "\nSELECT id FROM cards WHERE borderColor = 'black'\n\n\t----- bird -----\tcard_games",
    "436": "\nSELECT id FROM cards WHERE frameEffects = 'extendedart'\n\n\t----- bird -----\tcard_games",
    "437": "\nSELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1;\n\n\t----- bird -----\tcard_games",
    "438": "\nSELECT s.language \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.id = 174;\n\n\t----- bird -----\tcard_games",
    "439": "\nSELECT name FROM sets WHERE code = 'ALL';\n\n\t----- bird -----\tcard_games",
    "440": "\nSELECT t2.translation \nFROM cards AS t1 \nJOIN set_translations AS t2 ON t1.setCode = t2.setCode \nJOIN foreign_data AS t3 ON t1.uuid = t3.uuid \nWHERE t1.name = 'A Pedra Fellwar';\n\n\n\t----- bird -----\tcard_games",
    "441": "\nSELECT code FROM sets WHERE releaseDate = '2007-07-13'\n\n\t----- bird -----\tcard_games",
    "442": "\nSELECT baseSetSize, code FROM sets WHERE block IN ('Masques', 'Mirage')\n\n\t----- bird -----\tcard_games",
    "443": "\nSELECT code FROM sets WHERE type = 'expansion'\n\n\t----- bird -----\tcard_games",
    "444": "\nSELECT f.name, c.type \nFROM cards c \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.watermark = 'Boros';\n\n\n\t----- bird -----\tcard_games",
    "445": "\nSELECT fd.language, fd.flavorText, c.type \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE c.watermark = 'colorpie';\n\n\n\t----- bird -----\tcard_games",
    "446": "\nSELECT CAST(SUM(CASE WHEN c.convertedManaCost = 10 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Abyssal Horror';\n\n\n\t----- bird -----\tcard_games",
    "447": "\nSELECT DISTINCT s.code\nFROM sets s\nWHERE s.type = 'expansion' AND s.block = 'commander'\n\n\t----- bird -----\tcard_games",
    "448": "\nSELECT f.name, c.type \nFROM cards c \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.watermark = 'abzan';\n\n\n\t----- bird -----\tcard_games",
    "449": "\nSELECT f.language, c.type \nFROM cards c \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE c.watermark = 'azorius';\n\n\n\t----- bird -----\tcard_games",
    "450": "\nSELECT COUNT(*) AS incredibly_powerful_cards\nFROM cards\nWHERE designer = 'Aaron Miller'\nAND rarity IN ('Mythic', 'Rare')\nGROUP BY CASE WHEN EXISTS (SELECT 1 FROM rulings WHERE uuid = cards.uuid AND LOWER(text) LIKE '%incredibly powerful%') THEN 1 ELSE 0 END;\n\n\t----- bird -----\tcard_games",
    "451": "\nSELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand != 'any' AND hand::integer > 0\n\n\t----- bird -----\tcard_games",
    "452": "\nSELECT name FROM cards WHERE text IS NOT NULL AND text != ''\n\n\t----- bird -----\tcard_games",
    "453": "\nSELECT manaCost AS unconvertedManaCost \nFROM cards \nWHERE name = 'Ancestor''s Chosen';\n\n\n\t----- bird -----\tcard_games",
    "454": "\nSELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NULL\n\n\t----- bird -----\tcard_games",
    "455": "\nSELECT c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.isPromo = 1 AND c.otherFaceIds IS NOT NULL;\nSQL_END\n\n\t----- bird -----\tcard_games",
    "456": "\nSELECT c.type FROM cards c WHERE c.name = 'Molimo, Maro-Sorcerer';\n\n\n\t----- bird -----\tcard_games",
    "457": "\nSELECT DISTINCT SUBSTR(T2.purchaseUrls, INSTR(T2.purchaseUrls, '://') + 3)\nFROM cards AS T1\nJOIN foreign_data AS T2 ON T1.uuid = T2.uuid\nJOIN legalities AS T3 ON T1.uuid = T3.uuid\nWHERE T3.format = 'bundle' AND T2.purchaseUrls IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "458": "\nSELECT COUNT(DISTINCT artist)\nFROM cards\nWHERE borderColor = 'black'\nAND cardKingdomId IS NOT NULL\nAND (printings LIKE '%arena%' AND printings LIKE '%mtgo%')\n\n\t----- bird -----\tcard_games",
    "459": "\nSELECT \n    c1.name, \n    c1.convertedManaCost AS serra_angel_cost\nFROM \n    cards c1\nJOIN \n    cards c2 ON c2.name = 'Shrine Keeper'\nWHERE \n    c1.name = 'Serra Angel' OR c2.name = 'Shrine Keeper'\nORDER BY \n    CASE WHEN c1.name = 'Serra Angel' THEN 1 ELSE 2 END, \n    c1.convertedManaCost DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "460": "\nSELECT artist\nFROM cards\nWHERE name = 'Battra, Dark Destroyer';\n\n\n\t----- bird -----\tcard_games",
    "461": "\nSELECT c.name\nFROM cards c\nWHERE c.frameVersion = '2003'\nORDER BY c.convertedManaCost DESC\nLIMIT 3;\n\n\n\t----- bird -----\tcard_games",
    "462": "\nSELECT s.translation \nFROM cards c\nJOIN sets s ON s.setCode = (SELECT f.setCode FROM foreign_data f WHERE f.name = 'Ancestor''s Chosen')\nJOIN set_translations st ON st.setCode = s.setCode AND st.language = 'it'\nWHERE c.name = 'Ancestor''s Chosen';\n\n\n\t----- bird -----\tcard_games",
    "463": "\nSELECT COUNT(*) \nFROM set_translations ST\nJOIN sets S ON ST.setCode = S.code\nJOIN cards C ON S.mcmName = C.name\nWHERE C.name LIKE '%Angel of Mercy%';\n\n\n\t----- bird -----\tcard_games",
    "464": "\nSELECT c.name \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hauptset Zehnte Edition';\n\n\n\t----- bird -----\tcard_games",
    "465": "\nSELECT st.translation \nFROM set_translations st\nJOIN cards c ON st.setCode = c.setCode\nWHERE c.name LIKE '%Ancestor\\'s Chosen%' AND st.language = 'Korean';\n\n\n\t----- bird -----\tcard_games",
    "466": "\nSELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hauptset Zehnte Edition' AND c.artist = 'Adam Rex';\n\n\n\t----- bird -----\tcard_games",
    "467": "\nSELECT COUNT(*) AS card_count\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hauptset Zehnte Edition' AND s.type = 'base set'\n\n\t----- bird -----\tcard_games",
    "468": "\nSELECT s.translation \nFROM sets AS s\nJOIN set_translations AS t ON s.setCode = t.setCode\nWHERE s.name = 'Eighth Edition' AND t.language = 'zh_CN';\n\n\n\t----- bird -----\tcard_games",
    "469": "\nSELECT s.name AS set_name\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Angel of Mercy' AND s.mtgoCode IS NOT NULL;\n\n\n\t----- bird -----\tcard_games",
    "470": "\nSELECT s.releaseDate FROM cards c JOIN sets s ON c.setCode = s.code WHERE c.name = 'Ancestor''s Chosen'\n\n\t----- bird -----\tcard_games",
    "471": "\nSELECT type FROM sets WHERE name = 'Hauptset Zehnte Edition'\n\n\t----- bird -----\tcard_games",
    "472": "\nSELECT COUNT(*) FROM sets AS s JOIN set_translations AS t ON s.setCode = t.setCode WHERE s.block = 'Ice Age' AND t.language = 'Italian'\n\n\t----- bird -----\tcard_games",
    "473": "\nSELECT s.name AS setName, f.language AS foreignLanguage\nFROM cards c\nJOIN foreign_data f ON c.uuid = f.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE c.name = 'Adarkar Valkyrie' AND f.language != 'en';\n\n\n\t----- bird -----\tcard_games",
    "474": "\nSELECT COUNT(*) FROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE st.language = 'Italian' AND s.baseSetSize < 10\n\n\t----- bird -----\tcard_games",
    "475": "\nSELECT COUNT(*) \nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Coldsnap' AND c.borderColor = 'Black';\n\n\n\t----- bird -----\tcard_games",
    "476": "\nSELECT c.name \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nWHERE s.name = 'Coldsnap' \nORDER BY c.convertedManaCost DESC \nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "477": "\nSELECT DISTINCT c.artist \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON l.uuid = s.uuid\nWHERE s.name = 'Coldsnap' AND (c.artist = 'Jeremy Jarvis' OR c.artist = 'Aaron Miller' OR c.artist = 'Chippy');\n\n\n\t----- bird -----\tcard_games",
    "478": "\nSELECT c.*\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.number = 4 AND s.name = 'Coldsnap';\n\n\n\t----- bird -----\tcard_games",
    "479": "\nSELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE cconvertedManaCost > 5 AND s.name = 'Coldsnap' AND c.power IS NULL;\n\n\n\t----- bird -----\tcard_games",
    "480": "\nSELECT f.flavorText \nFROM foreign_data f \nJOIN cards c ON f.uuid = c.uuid \nWHERE c.name = 'Ancestor''s Chosen' AND f.language = 'Italian';\n\n\n\t----- bird -----\tcard_games",
    "481": "\nSELECT DISTINCT t2.language \nFROM cards AS c \nJOIN foreign_data AS t2 ON c.uuid = t2.uuid \nWHERE c.name = 'Ancestor''s Chosen';\n\n\n\t----- bird -----\tcard_games",
    "482": "\nSELECT st.translation \nFROM cards c \nJOIN set_translations st ON c.setCode = st.setCode \nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'de';\n\n\n\t----- bird -----\tcard_games",
    "483": "\nSELECT r.text\nFROM rulings r\nJOIN foreign_data fd ON r.uuid = fd.uuid\nJOIN set_translations st ON fd.uuid = st.translation\nJOIN sets s ON fd.uuid = s.mcmMetaId\nWHERE st.language = 'it' AND s.name = 'Coldsnap';\n\n\n\t----- bird -----\tcard_games",
    "484": "\nSELECT st.translation \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nJOIN cards c ON st.uuid = c.uuid\nWHERE s.name = 'Coldsnap' AND c.convertedManaCost = (\n    SELECT MAX(convertedManaCost) \n    FROM cards \n    WHERE setCode = (SELECT code FROM sets WHERE name = 'Coldsnap')\n)\nAND st.language = 'it';\n\n\n\t----- bird -----\tcard_games",
    "485": "\nSELECT r.date\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.name = 'Reminisce'\n\n\t----- bird -----\tcard_games",
    "486": "\nSELECT \n    COUNT(*) AS total_cards,\n    SUM(CASE WHEN c.convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.name = 'Coldsnap';\n\n\n\t----- bird -----\tcard_games",
    "487": "\n\nSELECT \n    100 * COUNT(CASE WHEN c.cardKingdomFoilId = c.cardKingdomId AND c.cardKingdomId IS NOT NULL THEN 1 END) / COUNT(c.uuid) AS percentage\nFROM \n    cards c\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    s.name = 'Coldsnap'\n\n\n\t----- bird -----\tcard_games",
    "488": "\nSELECT code FROM sets WHERE releaseDate = '2017-07-14'\n\n\t----- bird -----\tcard_games",
    "489": "\nSELECT keyruneCode FROM sets WHERE code = 'PKHC';\n\n\t----- bird -----\tcard_games",
    "490": "\nSELECT mcmId FROM sets WHERE code = 'SS2';\n\n\t----- bird -----\tcard_games",
    "491": "\nSELECT s.set_translations\nFROM sets s\nJOIN set_translations t ON s.setCode = t.setCode\nWHERE s.releaseDate = '2017-06-09';\n\n\n\t----- bird -----\tcard_games",
    "492": "\nSELECT type FROM sets WHERE name = 'From the Vault: Lore';\n\n\n\t----- bird -----\tcard_games",
    "493": "\nSELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\n\n\t----- bird -----\tcard_games",
    "494": "\nSELECT c.name, r.text AS ruling_text, c.flavorText, c.missing_properties, c.degraded_values\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN rulings r ON c.uuid = r.uuid\nWHERE fd.artist = 'Jim Pavelec';\n\n\n\t----- bird -----\tcard_games",
    "495": "\nSELECT s.releaseDate \nFROM cards c \nJOIN sets s ON s.setCode = (SELECT f.setCode FROM foreign_data f WHERE f.name = 'Evacuation')\nWHERE c.name = 'Evacuation';\n\n\n\t----- bird -----\tcard_games",
    "496": "\nSELECT COUNT(*) FROM cards WHERE setCode = (SELECT code FROM sets WHERE name = 'Rinascita di Alara')\n\n\t----- bird -----\tcard_games",
    "497": "\nSELECT s.type FROM sets s JOIN set_translations st ON s.setCode = st.setCode WHERE st.translation = 'Huiti\u00e8me \u00e9dition'\n\n\t----- bird -----\tcard_games",
    "498": "\nSELECT st.translation \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nJOIN set_translations st ON c.setCode = st.setCode\nWHERE fd.name = 'Tendo Ice Bridge'\nAND st.language = 'fr';\n\n\n\t----- bird -----\tcard_games",
    "499": "\nSELECT COUNT(*) \nFROM set_translations ST\nJOIN sets S ON ST.setCode = S.code\nWHERE S.name = 'Salvat 2011';\n\n\n\t----- bird -----\tcard_games",
    "500": "\nSELECT st.translation \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nJOIN sets s ON c.setCode = s.code \nJOIN set_translations st ON s.setCode = st.setCode \nWHERE c.name = 'Fellwar Stone' AND fd.language = 'ja';\n\n\n\t----- bird -----\tcard_games",
    "501": "\nSELECT c.name\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Journey into Nyx Hero''s Path'\nORDER BY c.convertedManaCost DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "502": "\nSELECT releaseDate FROM sets AS s JOIN set_translations AS st ON s.setCode = st.setCode WHERE s.name = 'Ola de fr\u00edo' AND st.translation = 'Ola de fr\u00edo'\n\n\t----- bird -----\tcard_games",
    "503": "\nSELECT s.type \nFROM cards c \nJOIN sets s ON s.setCode = (SELECT f.setCode FROM foreign_data f WHERE f.name = 'Samite Pilgrim')\nWHERE c.name = 'Samite Pilgrim';\n\n\n\t----- bird -----\tcard_games",
    "504": "\nSELECT COUNT(*) \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nWHERE s.name = 'World Championship Decks 2004' AND c.convertedManaCost = 3;\n\n\n\t----- bird -----\tcard_games",
    "505": "\nSELECT s.translation \nFROM set_translations st\nJOIN sets s ON st.setCode = s.code\nWHERE s.name = 'Mirrodin' AND st.language = 'zh_CN';\n\n\n\t----- bird -----\tcard_games",
    "506": "\n\nSELECT \n    COUNT(*) AS total_sets,\n    SUM(CASE WHEN c.hasNonFoil = 1 AND f.language = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage_non_foil\nFROM \n    cards c\nJOIN \n    foreign_data f ON c.uuid = f.uuid\nJOIN \n    sets s ON c.setCode = s.code\nWHERE \n    f.language = 'Japanese'\nGROUP BY \n    s.name;\n\n\n\t----- bird -----\tcard_games",
    "507": "\n\nSELECT \n    COUNT(*) AS total_sets,\n    SUM(CASE WHEN s.isOnlineOnly = 1 THEN 1 ELSE 0 END) AS online_only_sets\nFROM \n    sets s\nJOIN \n    set_translations st ON s.setCode = st.setCode\nWHERE \n    st.translation LIKE '%Brazil Portuguese%'\nGROUP BY \n    s.setCode\nHAVING \n    COUNT(*) > 0\nUNION ALL\nSELECT \n    0, 0\nFROM \n    dual\nLIMIT 1\n\n\n\t----- bird -----\tcard_games",
    "508": "\nSELECT DISTINCT c.printings \nFROM cards c \nLEFT JOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE fd.name IS NULL;\nSQL_END\n\n\t----- bird -----\tcard_games",
    "509": "\nSELECT DISTINCT s.id, s.totalSetSize FROM sets s JOIN (SELECT code, COUNT(*) AS card_count FROM cards GROUP BY code ORDER BY card_count DESC LIMIT 1) c ON s.code = c.code \n\t----- bird -----\tcard_games",
    "510": "\nSELECT c.flavorName, f.name AS illustrator\nFROM cards c\nLEFT JOIN foreign_data f ON c.flavorName = f.name\nWHERE c.otherFaceIds IS NULL\nORDER BY c.convertedManaCost DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "511": "\nSELECT frameEffects AS most_common_frame_effects\nFROM cards\nWHERE hasFoil = 1 AND rarity IN ('Mythic', 'Rare')\nGROUP BY frameEffects\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "512": "\nSELECT COUNT(*) \nFROM cards c\nLEFT JOIN hasFoil hf ON c.uuid = hf.uuid\nWHERE c.power IS NULL AND hf.hasFoil = 0 AND c.duelDeck LIKE '%A%';\n\n\n\t----- bird -----\tcard_games",
    "513": "\nSELECT s.id\nFROM sets s\nJOIN set_translations st ON s.setCode = st.setCode\nWHERE s.type = 'expansion' AND st.translation = 'Commander'\nGROUP BY s.id\nORDER BY COUNT(s.setCode) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "514": "\nSELECT name, convertedManaCost FROM cards WHERE duelDeck = 'TRUE' ORDER BY convertedManaCost DESC LIMIT 10;\n\n\t----- bird -----\tcard_games",
    "515": "\nSELECT c.originalReleaseDate, l.format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.rarity = 'Mythic' \nORDER BY c.originalReleaseDate ASC \nLIMIT 1;\n\n\n\t----- bird -----\tcard_games",
    "516": "\nSELECT COUNT(*) \nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.artist = 'Volkan Ba\u00c7\u00b5a' AND fd.language = 'French';\n\n\n\t----- bird -----\tcard_games",
    "517": "\nSELECT COUNT(*) \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nWHERE c.rarity = 'Rare' AND c.types LIKE '%Enchantment%Abundance%' AND l.status = 'Legal';\n\n\n\t----- bird -----\tcard_games",
    "518": "\nSELECT l.format, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'banned'\nGROUP BY l.format, c.name\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\t----- bird -----\tcard_games",
    "519": "\nSELECT language FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Battlebond')\n\n\t----- bird -----\tcard_games",
    "520": "\n\nSELECT f.flavorText, l.format \nFROM foreign_data f\nJOIN legalities l ON f.uuid = l.uuid\nGROUP BY f.flavorText, l.format\nHAVING COUNT(f.id) = (\n    SELECT MIN(counted_cards) \n    FROM (\n        SELECT COUNT(*) AS counted_cards \n        FROM foreign_data \n        GROUP BY flavorText\n    ) subquery\n)\n\n\n\t----- bird -----\tcard_games",
    "521": "\nSELECT l.status \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.frameVersion = '1997' \nAND fd.flavorText LIKE '%D. Alexander Gregory%' \nAND (l.status IN ('Sensitive', 'Wizards of the Coast') OR l.status IS NULL) \nAND EXISTS (\n    SELECT 1 \n    FROM rulings r \n    WHERE r.uuid = c.uuid AND r.text LIKE '%legacy%'\n);\n\n\n\t----- bird -----\tcard_games",
    "522": "\nSELECT c.name, l.status AS banned_play_format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.edhrecRank = 1;\n\n\n\t----- bird -----\tcard_games",
    "523": "\nSELECT AVG(totalSetSize) AS avg_sets_per_year, language\nFROM sets\nWHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\nGROUP BY language\n\n\t----- bird -----\tcard_games",
    "524": "\nSELECT DISTINCT artist FROM cards WHERE borderColor = 'black' AND availability = 'arena only'\n\n\t----- bird -----\tcard_games",
    "525": "\nSELECT DISTINCT l.uuid \nFROM legalities l \nJOIN cards c ON l.uuid = c.uuid \nWHERE l.format = 'Old School' AND (l.status = 'restricted' OR l.status = 'banned');\n\n\n\t----- bird -----\tcard_games",
    "526": "\nSELECT COUNT(*) AS paper_only_cards\nFROM cards c\nJOIN sets s ON c.setCode = s.code\nWHERE c.artist = 'Matthew D. Wilson' AND s.isFoilOnly = 0 AND s.isNonFoilOnly = 1;\n\n\n\t----- bird -----\tcard_games",
    "527": "\nSELECT r.text, r.date\nFROM rulings r\nJOIN cards c ON r.uuid = c.uuid\nWHERE c.flavorText LIKE '%Kev Walker%'\nORDER BY r.date DESC;\n\n\n\t----- bird -----\tcard_games",
    "528": "\nSELECT DISTINCT c.name, l.format \nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON c.setCode = s.code\nWHERE s.name = 'Hour of Devastation';\n\n\n\t----- bird -----\tcard_games",
    "529": "\nSELECT DISTINCT s.name\nFROM sets s\nJOIN set_translations st1 ON s.setCode = st1.setCode AND st1.language = 'Korean'\nLEFT JOIN set_translations st2 ON s.setCode = st2.setCode AND st2.language = 'Japanese'\nWHERE st2.translation IS NULL\n\n\t----- bird -----\tcard_games",
    "530": "\nSELECT DISTINCT c.frameVersion, c.name\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE fd.flavorText LIKE '%Allen Williams%'\nUNION ALL\nSELECT l.status, c.name\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned';\n\n\n\t----- bird -----\tcard_games",
    "531": "\nSELECT DisplayName, Reputation\nFROM users\nWHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon'\nORDER BY Reputation DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "532": "\nSELECT DisplayName FROM users WHERE YEAR(CreationDate) = 2014;\n\n\n\t----- bird -----\tcodebase_community",
    "533": "\nSELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\n\n\t----- bird -----\tcodebase_community",
    "534": "\nSELECT u.DisplayName FROM users u WHERE u.Views = (SELECT MAX(Views) FROM users);\n\n\n\t----- bird -----\tcodebase_community",
    "535": "\nSELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\n\n\t----- bird -----\tcodebase_community",
    "536": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nWHERE u.Views > 10 AND u.CreationDate > '2013-12-31'\n\n\t----- bird -----\tcodebase_community",
    "537": "\nSELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\n\t----- bird -----\tcodebase_community",
    "538": "\nSELECT p.Title \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie';\n\n\n\t----- bird -----\tcodebase_community",
    "539": "\nSELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts';\n\n\n\t----- bird -----\tcodebase_community",
    "540": "\nSELECT Title\nFROM posts\nWHERE OwnerDisplayName = 'csgillespie'\nORDER BY Score DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "541": "\nSELECT u.DisplayName\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE p.Score = (SELECT MAX(Score) FROM posts)\n\n\t----- bird -----\tcodebase_community",
    "542": "\nSELECT SUM(T2.Score) AS TotalComments\nFROM posts AS T1\nJOIN comments AS T2 ON T1.Id = T2.PostId\nWHERE T1.OwnerDisplayName = 'csgillespie'\n\n\n\t----- bird -----\tcodebase_community",
    "543": "\nSELECT COUNT(*) AS AnswerCount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE p.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie') AND p.PostTypeId = 1\nORDER BY p.AnswerCount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "544": "\nSELECT LastEditorDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation';\n\n\n\t----- bird -----\tcodebase_community",
    "545": "\nSELECT COUNT(*) AS RootPostsCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'csgillespie' AND p.ParentId IS NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "546": "\nSELECT DISTINCT u.DisplayName \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nWHERE p.CreationDate = p.LastEditDate AND p.CommunityOwnedDate IS NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "547": "\nSELECT COUNT(*) \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age > 10 AND p.Score > 19;\n\n\n\t----- bird -----\tcodebase_community",
    "548": "\nSELECT u.Location \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Eliciting priors from experts';\n\n\n\t----- bird -----\tcodebase_community",
    "549": "\nSELECT p.Body \nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'bayesian';\n\n\n\t----- bird -----\tcodebase_community",
    "550": "\nSELECT p.Body \nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.Count = (\n    SELECT MAX(Count) \n    FROM tags\n)\nSQL_END\n\t----- bird -----\tcodebase_community",
    "551": "\nSELECT COUNT(*) AS BadgeCount\nFROM badges\nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\t----- bird -----\tcodebase_community",
    "552": "\nSELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\n\n\n\t----- bird -----\tcodebase_community",
    "553": "\nSELECT COUNT(*) AS BadgeCount\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'csgillespie' AND YEAR(b.Date) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "554": "\nSELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Id IN (\n    SELECT UserId\n    FROM badges\n    GROUP BY UserId\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n)\n\n\t----- bird -----\tcodebase_community",
    "555": "\nSELECT AVG(posts.Score) AS AverageScore\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'csgillespie';\n\n\n\t----- bird -----\tcodebase_community",
    "556": "\nSELECT AVG(COUNT(b.Id)) AS AverageBadges\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Views > 200\nGROUP BY u.Id\n\n\t----- bird -----\tcodebase_community",
    "557": "\nSELECT \n    COUNT(*) * 100 / (SELECT COUNT(*) FROM posts WHERE Score > 20) AS Elder_Owner_Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 20 AND u.Age > 50;\n\n\n\t----- bird -----\tcodebase_community",
    "558": "\nSELECT COUNT(*) AS VoteCount\nFROM votes\nWHERE UserId = 58 AND CreationDate = '2010-07-19';\n\n\n\t----- bird -----\tcodebase_community",
    "559": "\nSELECT CreationDate FROM votes WHERE VoteTypeId = (SELECT VoteTypeId FROM voteTypes WHERE Name = 'Up') AND CreationDate = (\n    SELECT CreationDate FROM (\n        SELECT CreationDate, COUNT(*) AS vote_count FROM votes WHERE VoteTypeId = (SELECT VoteTypeId FROM voteTypes WHERE Name = 'Up') GROUP BY CreationDate\n    ) AS max_votes GROUP BY CreationDate ORDER BY vote_count DESC LIMIT 1\n)\n\n\t----- bird -----\tcodebase_community",
    "560": "\nSELECT COUNT(*) AS Revival_Badges FROM badges WHERE Name = 'Revival'\n\n\t----- bird -----\tcodebase_community",
    "561": "\nSELECT p.Title\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.Score = (SELECT MAX(Score) FROM comments)\nSQL_END\n\n\t----- bird -----\tcodebase_community",
    "562": "\nSELECT COUNT(*) \nFROM comments \nWHERE PostId = (SELECT Id FROM posts WHERE ViewCount = 1910);\n\n\n\t----- bird -----\tcodebase_community",
    "563": "\nSELECT p.FavoriteCount \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE c.UserId = 3025 AND DATE(c.CreationDate) = '2014-04-23' AND TIME(c.CreationDate) >= '20:29:39';\n\n\n\t----- bird -----\tcodebase_community",
    "564": "\nSELECT Text FROM postHistory WHERE PostId = 107829 AND Comment IS NOT NULL LIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "565": "\nSELECT p.FavoriteCount > 0 AS IsWellFinished \nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18';\n\n\n\t----- bird -----\tcodebase_community",
    "566": "\nSELECT Reputation FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Id = 65041)\n\n\t----- bird -----\tcodebase_community",
    "567": "\nSELECT COUNT(*) AS PostCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Tiago Pasqualini';\n\n\n\t----- bird -----\tcodebase_community",
    "568": "\nSELECT u.DisplayName \nFROM votes v \nJOIN users u ON v.UserId = u.Id \nWHERE v.Id = 6347;\n\n\n\t----- bird -----\tcodebase_community",
    "569": "\nSELECT COUNT(*) AS VoteCount\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nWHERE p.Title LIKE '%data visualization%';\n\n\n\t----- bird -----\tcodebase_community",
    "570": "\nSELECT b.Name\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.DisplayName = 'DatEpicCoderGuyWhoPrograms';\n\n\n\t----- bird -----\tcodebase_community",
    "571": "\n\nSELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / NULLIF((SELECT COUNT(*) FROM votes WHERE UserId = 24), 0) AS Post_Vote_Ratio\n\n\n\t----- bird -----\tcodebase_community",
    "572": "\nSELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\n\n\t----- bird -----\tcodebase_community",
    "573": "\nSELECT Text FROM comments WHERE Score = 17;\n\n\n\t----- bird -----\tcodebase_community",
    "574": "\nSELECT Id, DisplayName, WebsiteUrl FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\n\n\t----- bird -----\tcodebase_community",
    "575": "\nSELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'SilentGhost')\n\n\t----- bird -----\tcodebase_community",
    "576": "\nSELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\n\n\n\t----- bird -----\tcodebase_community",
    "577": "\nSELECT Text FROM comments WHERE UserDisplayName = 'A Lion';\n\n\n\t----- bird -----\tcodebase_community",
    "578": "\nSELECT u.DisplayName, u.Reputation \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\n\n\n\t----- bird -----\tcodebase_community",
    "579": "\nSELECT c.Text, c.CreationDate, u.DisplayName \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nJOIN users u ON c.UserId = u.Id \nWHERE p.Title = 'How does gentle boosting differ from AdaBoost?';\n\n\n\t----- bird -----\tcodebase_community",
    "580": "\nSELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Necromancer'\nLIMIT 10;\n\n\n\t----- bird -----\tcodebase_community",
    "581": "\nSELECT LastEditorDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data';\n\n\n\t----- bird -----\tcodebase_community",
    "582": "\nSELECT p.Title \nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nWHERE ph.UserId = (SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa');\n\n\n\t----- bird -----\tcodebase_community",
    "583": "\nSELECT SUM(p.Score) AS TotalScore, u.WebsiteUrl \nFROM posts p \nJOIN postHistory ph ON p.Id = ph.PostId \nJOIN users u ON ph.UserId = u.Id \nWHERE u.DisplayName = 'Yevgeny' \nGROUP BY u.WebsiteUrl;\n\n\n\t----- bird -----\tcodebase_community",
    "584": "\nSELECT c.Text, c.UserDisplayName, c.CreationDate \nFROM comments c \nJOIN postHistory ph ON c.UserId = ph.UserId \nJOIN posts p ON ph.PostId = p.Id \nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\n\n\n\t----- bird -----\tcodebase_community",
    "585": "\nSELECT SUM(v.BountyAmount) AS TotalBountyAmount\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE p.Title LIKE '%data%';\n\n\n\t----- bird -----\tcodebase_community",
    "586": "\nSELECT u.DisplayName\nFROM votes v\nJOIN posts p ON v.PostId = p.Id\nJOIN users u ON v.UserId = u.Id\nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%';\n\n\n\t----- bird -----\tcodebase_community",
    "587": "\nSELECT p.Title, c.Text, AVG(p.ViewCount) AS AvgViewCount\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE t.TagName = 'humor'\nGROUP BY p.Title, c.Text\nSQL_END\n\t----- bird -----\tcodebase_community",
    "588": "\nSELECT COUNT(*) AS TotalComments FROM comments WHERE UserId = 13;\n\n\n\t----- bird -----\tcodebase_community",
    "589": "\nSELECT UserId FROM users ORDER BY Reputation DESC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "590": "\nSELECT UserId FROM users ORDER BY Views ASC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "591": "\nSELECT COUNT(DISTINCT UserId) AS UserCount\nFROM badges\nWHERE Name = 'Supporter' AND Date BETWEEN '2011-01-01' AND '2011-12-31'\n\n\t----- bird -----\tcodebase_community",
    "592": "\nSELECT COUNT(DISTINCT UserId) AS UserCount\nFROM badges\nWHERE Id > 5;\n\n\t----- bird -----\tcodebase_community",
    "593": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN badges b1 ON u.Id = b1.UserId AND b1.Name = 'teacher'\nJOIN badges b2 ON u.Id = b2.UserId AND b2.Name = 'supporter'\nWHERE u.Location = 'New York';\n\n\n\t----- bird -----\tcodebase_community",
    "594": "\nSELECT u.DisplayName, u.Reputation \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Id = 1;\n\n\n\t----- bird -----\tcodebase_community",
    "595": "\nSELECT p.OwnerUserId\nFROM posts p\nJOIN (\n    SELECT PostId, COUNT(*) AS cnt\n    FROM postHistory\n    GROUP BY PostId\n    HAVING COUNT(*) = 1\n) ph ON p.Id = ph.PostId\nWHERE p.ViewCount >= 1000\nGROUP BY p.OwnerUserId;\n\n\n\t----- bird -----\tcodebase_community",
    "596": "\nSELECT u.Id, u.DisplayName, b.Name\nFROM users u\nJOIN (\n    SELECT UserId, COUNT(*) as CommentCount\n    FROM comments\n    GROUP BY UserId\n    ORDER BY CommentCount DESC\n    LIMIT 1\n) c ON u.Id = c.UserId\nJOIN badges b ON u.Id = b.UserId;\n\n\n\t----- bird -----\tcodebase_community",
    "597": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Location = 'India' AND b.Name LIKE '%Teacher%';\n\n\n\t----- bird -----\tcodebase_community",
    "598": "\nSELECT \n    ((SUM(CASE WHEN DATEPART(YEAR, Date) = 2011 THEN 1 ELSE 0 END) - SUM(CASE WHEN DATEPART(YEAR, Date) = 2010 THEN 1 ELSE 0 END)) * 100.0 / SUM(CASE WHEN DATEPART(YEAR, Date) IN (2010, 2011) THEN 1 ELSE 0 END)) AS PercentageDifference\nFROM badges\nWHERE Name LIKE 'Student%';\n\n\t----- bird -----\tcodebase_community",
    "599": "\nSELECT ph.PostHistoryTypeId, COUNT(DISTINCT c.UserId) AS UniqueCommenters\nFROM postHistory ph\nJOIN comments c ON ph.PostId = c.PostId\nWHERE ph.PostId = 3720\nGROUP BY ph.PostHistoryTypeId;\n\n\n\t----- bird -----\tcodebase_community",
    "600": "\nSELECT pl.PostId, p.Title, COUNT(*) AS Popularity\nFROM postLinks pl\nJOIN posts p ON pl.PostId = p.Id OR pl.RelatedPostId = p.Id\nWHERE pl.PostId = 61217\nGROUP BY pl.PostId, p.Title;\n\n\n\t----- bird -----\tcodebase_community",
    "601": "\nSELECT v.Score, pl.LinkTypeId \nFROM postLinks pl \nJOIN votes v ON pl.PostId = v.PostId \nWHERE pl.PostId = 395;\n\n\n\t----- bird -----\tcodebase_community",
    "602": "\nSELECT p.Id AS PostId, p.OwnerUserId AS UserId \nFROM posts p \nWHERE p.Score > 60;\n\n\n\t----- bird -----\tcodebase_community",
    "603": "\nSELECT SUM(FavoriteCount) AS TotalFavoriteCount\nFROM posts\nWHERE OwnerUserId = 686 AND YEAR(CreationDate) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "604": "\nSELECT AVG(u.UpVotes) AS AvgUpVotes, AVG(u.Age) AS AvgUserAge \nFROM users u \nJOIN (\n    SELECT OwnerUserId \n    FROM posts \n    GROUP BY OwnerUserId \n    HAVING COUNT(Id) > 10\n) p ON u.Id = p.OwnerUserId;\n\n\n\t----- bird -----\tcodebase_community",
    "605": "\nSELECT COUNT(DISTINCT UserId) AS Announcer_Badge_Holders\nFROM badges\nWHERE Name = 'Announcer';\n\n\t----- bird -----\tcodebase_community",
    "606": "\nSELECT DISTINCT b.Name \nFROM badges b \nWHERE b.Date = '2010-07-19 19:39:08';\n\n\n\t----- bird -----\tcodebase_community",
    "607": "\nSELECT COUNT(*) AS PositiveCommentsCount\nFROM comments\nWHERE Score > 0;\n\n\t----- bird -----\tcodebase_community",
    "608": "\nSELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:25:47' \n\n\t----- bird -----\tcodebase_community",
    "609": "\nSELECT COUNT(*) FROM posts WHERE Score = 10;\n\n\t----- bird -----\tcodebase_community",
    "610": "\nSELECT DISTINCT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "611": "\nSELECT u.Reputation \nFROM users u \nJOIN badges b ON u.Id = b.UserId \nWHERE b.Date = '2010-07-19 19:39:08';\n\n\n\t----- bird -----\tcodebase_community",
    "612": "\nSELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Pierre'\n\n\t----- bird -----\tcodebase_community",
    "613": "\nSELECT b.Date, u.LastAccessDate\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'Rochester, NY';\n\n\n\t----- bird -----\tcodebase_community",
    "614": "\nSELECT \n    COUNT(DISTINCT u.Id) * 100.0 / (SELECT COUNT(DISTINCT u2.Id) FROM users u2) AS PercentageOfUsers\nFROM \n    badges b\nJOIN \n    users u ON b.UserId = u.Id\nWHERE \n    b.Name = 'Teacher';\n\n\n\t----- bird -----\tcodebase_community",
    "615": "\nSELECT \nCAST(SUM(CASE WHEN u.Age BETWEEN 13 AND 19 THEN 1 ELSE 0 END) * 100.0 / COUNT(b.UserId) AS DECIMAL(5,2))\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Organizer'\n\n\t----- bird -----\tcodebase_community",
    "616": "\nSELECT c.Score\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.CreationDate = '2010-07-19 19:19:56'\n\n\t----- bird -----\tcodebase_community",
    "617": "\nSELECT c.Text AS CommentContent\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.CreationDate = '2010-07-19 19:37:33'\n\n\t----- bird -----\tcodebase_community",
    "618": "\nSELECT u.Age \nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE u.Location = 'Vienna, Austria';\n\n\n\t----- bird -----\tcodebase_community",
    "619": "\nSELECT COUNT(*)\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Supporter' AND u.Age >= 18;\n\n\n\t----- bird -----\tcodebase_community",
    "620": "\nSELECT COUNT(u.Views) \nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Date = '2010-07-19 19:39:08';\n\n\n\t----- bird -----\tcodebase_community",
    "621": "\nSELECT DISTINCT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Reputation = (SELECT MIN(Reputation) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "622": "\nSELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Sharpie'\n\n\t----- bird -----\tcodebase_community",
    "623": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Supporter'\nAND u.Reputation >= 2000\n\n\t----- bird -----\tcodebase_community",
    "624": "\nSELECT DisplayName FROM users WHERE Id = 30;\n\n\t----- bird -----\tcodebase_community",
    "625": "\nSELECT COUNT(*) AS NumberOfUsers FROM users WHERE Location = 'New York'\n\n\t----- bird -----\tcodebase_community",
    "626": "\nSELECT COUNT(*) AS VotesIn2010 FROM votes WHERE YEAR(CreationDate) = 2010;\n\n\t----- bird -----\tcodebase_community",
    "627": "\nSELECT COUNT(*) AS AdultUsersCount\nFROM users\nWHERE Age >= 18;\n\n\t----- bird -----\tcodebase_community",
    "628": "\nSELECT u.DisplayName, u.Views\nFROM users u\nWHERE u.Views = (SELECT MAX(Views) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "629": "\nSELECT \n    (SUM(CASE WHEN YEAR(V.CreationDate) = 2010 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Ratio_2010,\n    (SUM(CASE WHEN YEAR(V.CreationDate) = 2011 THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Ratio_2011\nFROM votes V\n\n\t----- bird -----\tcodebase_community",
    "630": "\nSELECT t.TagName \nFROM tags t\nJOIN posts p ON t.Id = p-tagsId\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'John Stauffer';\n\n\n\t----- bird -----\tcodebase_community",
    "631": "\nSELECT COUNT(*) FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId WHERE u.DisplayName = 'Daniel Vassallo'\n\n\t----- bird -----\tcodebase_community",
    "632": "\nSELECT COUNT(*) AS VoteCount\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'Harlan';\n\n\n\t----- bird -----\tcodebase_community",
    "633": "\nSELECT p.Id\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'slashnick'\nORDER BY p.AnswerCount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "634": "\nSELECT p1.Title, SUM(v1.VoteTypeId = 2) AS UpVotes, COUNT(*) AS TotalInteractions\nFROM posts p1\nLEFT JOIN votes v1 ON p1.Id = v1.PostId\nWHERE (p1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder')))\nGROUP BY p1.Title\nORDER BY (UpVotes + COUNT(*)) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "635": "\nSELECT COUNT(*)\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nJOIN votes v ON p.Id = v.PostId\nWHERE u.DisplayName = 'Matt Parker' AND v.VoteTypeId IN (1) -- Assuming 1 is the vote type for upvotes\nGROUP BY p.Id\nHAVING COUNT(v.Id) > 4;\n\n\n\t----- bird -----\tcodebase_community",
    "636": "\nSELECT COUNT(*) AS NegativeCommentsCount\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = (SELECT Id FROM users WHERE DisplayName = 'Neil McGuigan') AND c.Score < 0;\n\n\n\t----- bird -----\tcodebase_community",
    "637": "\nSELECT DISTINCT t.TagName \nFROM tags t\nJOIN posts p ON t.Id = p-tagsId\nJOIN users u ON p.OwnerUserId = u.Id\nLEFT JOIN comments c ON p.Id = c.PostId\nWHERE u.DisplayName = 'Mark Meckes' AND c.Id IS NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "638": "\nSELECT DISTINCT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Name = 'Organizer'\n\n\t----- bird -----\tcodebase_community",
    "639": "\n\nSELECT \n    COUNT(*) AS TotalPosts,\n    SUM(CASE WHEN tags.TagName = 'R' THEN 1 ELSE 0 END) AS RLanguagePosts,\n    (SUM(CASE WHEN tags.TagName = 'R' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS PercentageRLanguage\nFROM \n    posts p\nLEFT JOIN \n    tags t ON p.Id = t.ExcerptPostId OR p.Id = t.WikiPostId\nWHERE \n    p.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName LIKE 'Community%')\n\n\n\t----- bird -----\tcodebase_community",
    "640": "\nSELECT (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'mornington') - (SELECT SUM(ViewCount) FROM posts WHERE OwnerDisplayName = 'Amos') AS ViewCountDifference\n\n\t----- bird -----\tcodebase_community",
    "641": "\nSELECT COUNT(DISTINCT UserId) \nFROM badges \nWHERE Name = 'Commentator' AND Date BETWEEN '2014-01-01' AND '2014-12-31';\n\n\n\t----- bird -----\tcodebase_community",
    "642": "\nSELECT COUNT(*) FROM posts WHERE CreationDate = '2010-07-21'\n\n\t----- bird -----\tcodebase_community",
    "643": "\nSELECT u.DisplayName, u.Age \nFROM users u \nWHERE u.Id = (SELECT TOP 1 v.UserId FROM votes v JOIN posts p ON v.PostId = p.Id ORDER BY p.ViewCount DESC);\n\n\n\t----- bird -----\tcodebase_community",
    "644": "\nSELECT LastEditDate, LastEditorUserId \nFROM posts \nWHERE Title = 'Detecting a given face in a database of facial images';\n\n\n\t----- bird -----\tcodebase_community",
    "645": "\nSELECT COUNT(*) AS NegativeCommentsCount\nFROM comments\nWHERE UserId = 13 AND Score < 0;\n\n\n\t----- bird -----\tcodebase_community",
    "646": "\nSELECT p.Title, c.UserDisplayName\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE c.Score > 0;\n\n\n\t----- bird -----\tcodebase_community",
    "647": "\nSELECT b.Name\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.Location = 'North Pole' AND YEAR(b.Date) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "648": "\nSELECT u.DisplayName, u.WebsiteUrl \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.FavoriteCount > 150;\n\n\n\t----- bird -----\tcodebase_community",
    "649": "\nSELECT \n    COUNT(*) AS PostHistoryCount,\n    MAX(RevisionGUID) AS LastEditDate\nFROM \n    postHistory\nJOIN \n    posts ON postHistory.PostId = posts.Id\nWHERE \n    posts.Title = 'What is the best introductory Bayesian statistics textbook?';\n\n\n\t----- bird -----\tcodebase_community",
    "650": "\nSELECT u.LastAccessDate, u.Location \nFROM users u \nJOIN badges b ON u.Id = b.UserId \nWHERE b.Name = 'Outliers';\n\n\n\t----- bird -----\tcodebase_community",
    "651": "\nSELECT pl.RelatedPostId, p.Title \nFROM postLinks pl \nJOIN posts p ON pl.PostId = p.Id \nWHERE p.Title = 'How to tell if something happened in a data set which monitors a value over time';\n\n\n\t----- bird -----\tcodebase_community",
    "652": "\nSELECT p.Id, b.Name\nFROM posts p\nJOIN badges b ON p.OwnerUserId = b.UserId\nWHERE b.UserDisplayName = 'Samuel' AND YEAR(b.Date) = 2013;\n\n\n\t----- bird -----\tcodebase_community",
    "653": "\nSELECT OwnerDisplayName FROM posts ORDER BY Score DESC LIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "654": "\nSELECT u.DisplayName, u.Location \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nJOIN tags t ON p.Tags LIKE '%hypothesis-testing%' \nWHERE p.ExcerptPostId IS NOT NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "655": "\nSELECT pl.RelatedPostId, p.Title, pl.LinkTypeId \nFROM postLinks pl\nJOIN posts p ON pl.RelatedPostId = p.Id\nWHERE p.Title = 'What are principal component scores?';\n\n\n\t----- bird -----\tcodebase_community",
    "656": "\nSELECT p.ParentId, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Id = (\n    SELECT Id \n    FROM posts \n    ORDER BY Score DESC \n    LIMIT 1\n);\n\n\n\t----- bird -----\tcodebase_community",
    "657": "\nSELECT u.DisplayName, u.WebsiteUrl\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE v.VoteTypeId = 8\nORDER BY v.BountyAmount DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "658": "\nSELECT TOP 5 Title\nFROM posts\nORDER BY Score DESC;\n\n\n\t----- bird -----\tcodebase_community",
    "659": "\nSELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\n\n\t----- bird -----\tcodebase_community",
    "660": "\nSELECT OwnerUserId FROM posts ORDER BY Score DESC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "661": "\nSELECT FLOOR((julianday(CURRENT_DATE) - julianday(CreationDate)) / 365) AS Age\nFROM users\nORDER BY Reputation DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "662": "\nSELECT COUNT(DISTINCT p.Id)\nFROM posts p\nJOIN votes v ON p.Id = v.PostId\nWHERE YEAR(v.CreationDate) = 2011 AND v.BountyAmount = 50;\n\n\n\t----- bird -----\tcodebase_community",
    "663": "\nSELECT Id FROM users ORDER BY CreationDate DESC LIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "664": "\nSELECT p.Score\nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.Count = (\n    SELECT MAX(Count) \n    FROM tags\n)\nSQL_END\n\n\t----- bird -----\tcodebase_community",
    "665": "\nSELECT DATEPART(YEAR, CreationDate) AS Year, DATEPART(MONTH, CreationDate) AS Month, COUNT(*) AS MonthlyLinks\nFROM postLinks\nWHERE YEAR(CreationDate) = 2010 AND AnswerCount <= 2\nGROUP BY DATEPART(YEAR, CreationDate), DATEPART(MONTH, CreationDate)\n\n\n\t----- bird -----\tcodebase_community",
    "666": "\nSELECT PostId\nFROM votes\nWHERE UserId = 1465\nORDER BY BountyAmount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "667": "\nSELECT p.Title\nFROM posts p\nJOIN postLinks pl ON p.Id = pl.PostId\nWHERE pl.Id = (\n    SELECT Id\n    FROM postLinks\n    ORDER BY CreationDate ASC\n    LIMIT 1\n);\n\n\n\t----- bird -----\tcodebase_community",
    "668": "\nSELECT u.DisplayName\nFROM users u\nJOIN badges b ON u.Id = b.UserId\nWHERE b.Id = (\n    SELECT Id \n    FROM badges \n    ORDER BY COUNT(*) DESC \n    LIMIT 1\n);\n\n\n\t----- bird -----\tcodebase_community",
    "669": "\nSELECT MIN(v.CreationDate) AS FirstVoteDate\nFROM votes v\nJOIN users u ON v.UserId = u.Id\nWHERE u.DisplayName = 'chl';\n\n\n\t----- bird -----\tcodebase_community",
    "670": "\nSELECT MIN(p.CreationDate) AS FirstPostDate\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.Age = (SELECT MIN(Age) FROM users);\n\n\n\t----- bird -----\tcodebase_community",
    "671": "\nSELECT u.DisplayName\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE b.Name = 'Autobiographer'\nORDER BY b.Date ASC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "672": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN posts p ON u.Id = p.OwnerUserId\nWHERE u.Location LIKE '%United Kingdom%' AND p.FavoriteCount >= 4;\n\n\n\t----- bird -----\tcodebase_community",
    "673": "\nSELECT AVG(t.posts_count) AS average_posts_voted\nFROM\n    (SELECT v.UserId, COUNT(v.PostId) AS posts_count\n     FROM votes v\n     JOIN users u ON v.UserId = u.Id\n     GROUP BY v.UserId) t\nJOIN\n    (SELECT MIN(Id) AS oldest_user_id\n     FROM users) u ON t.UserId = u.oldest_user_id\n\n\t----- bird -----\tcodebase_community",
    "674": "\nSELECT DisplayName FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users)\n\n\t----- bird -----\tcodebase_community",
    "675": "\nSELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000;\n\n\t----- bird -----\tcodebase_community",
    "676": "\nSELECT u.DisplayName \nFROM users u \nWHERE u.Age >= 18;\n\n\n\t----- bird -----\tcodebase_community",
    "677": "\nSELECT COUNT(*) AS PostCount\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Jay Stevens' AND YEAR(p.CreationDate) = 2010;\n\n\n\t----- bird -----\tcodebase_community",
    "678": "\nSELECT p.Id, p.Title\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky'\nORDER BY p.ViewCount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "679": "\nSELECT Id, Title\nFROM posts\nWHERE Score = (SELECT MAX(Score) FROM posts);\n\n\n\t----- bird -----\tcodebase_community",
    "680": "\nSELECT AVG(posts.Score) AS AverageScore\nFROM posts\nJOIN users ON posts.OwnerUserId = users.Id\nWHERE users.DisplayName = 'Stephen Turner';\n\n\n\t----- bird -----\tcodebase_community",
    "681": "\nSELECT u.DisplayName \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nWHERE p.ViewCount > 20000 AND YEAR(p.CreationDate) = 2011;\n\n\n\t----- bird -----\tcodebase_community",
    "682": "\nSELECT p.Id, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2010\nORDER BY (p.Score * 10 + COALESCE(v.BountyAmount, 0)) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "683": "\nSELECT CAST(SUM(CASE WHEN u.Reputation > 1000 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE YEAR(p.CreationDate) = 2011\n\n\t----- bird -----\tcodebase_community",
    "684": "\nSELECT CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM users) AS PercentageOfTeenageUsers\nFROM users\nWHERE Age BETWEEN 13 AND 19;\n\n\t----- bird -----\tcodebase_community",
    "685": "\nSELECT p.ViewCount, u.DisplayName\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE p.Title = 'Computer Game Datasets'\nSQL_END\n\n\t----- bird -----\tcodebase_community",
    "686": "\nSELECT COUNT(*) AS TotalPostsAboveAverageViews\nFROM posts\nWHERE ViewCount > (SELECT AVG(ViewCount) FROM posts)\n\n\t----- bird -----\tcodebase_community",
    "687": "\nSELECT COUNT(*) AS CommentCount\nFROM comments\nWHERE PostId = (\n    SELECT Id \n    FROM posts \n    ORDER BY Score DESC \n    LIMIT 1\n);\n\n\n\t----- bird -----\tcodebase_community",
    "688": "\nSELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND Id NOT IN (SELECT PostId FROM comments)\n\n\t----- bird -----\tcodebase_community",
    "689": "\nSELECT u.DisplayName, u.Location \nFROM users u \nJOIN posts p ON u.Id = p.LastEditorUserId \nWHERE p.Id = 183;\n\n\n\t----- bird -----\tcodebase_community",
    "690": "\nSELECT Name, Date\nFROM badges\nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Emmett')\nORDER BY Date DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "691": "\nSELECT COUNT(DISTINCT u.Id)\nFROM users u\nJOIN votes v ON u.Id = v.UserId\nWHERE u.Age >= 18 AND v.VoteTypeId = 2 AND v.CreationDate IS NOT NULL AND v.BountyAmount = 0 AND v.VoteTypeId = 3 AND COUNT(v.Id) > 5000\n\n\t----- bird -----\tcodebase_community",
    "692": "\nSELECT TIMESTAMPDIFF(SECOND, u.CreationDate, b.Date) AS TimeToBadge\nFROM badges b\nJOIN users u ON b.UserId = u.Id\nWHERE u.DisplayName = 'Zolomon'\nORDER BY b.Date ASC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "693": "\nSELECT COUNT(p.Id) AS PostCount, COUNT(c.Id) AS CommentCount \nFROM users u\nLEFT JOIN posts p ON u.Id = p.OwnerUserId\nLEFT JOIN comments c ON u.Id = c.UserId\nWHERE u.CreationDate = (SELECT MAX(CreationDate) FROM users);\n\n\n\t----- bird -----\tcodebase_community",
    "694": "\nSELECT c.Text, u.DisplayName\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.PostId = (\n    SELECT p.Id \n    FROM posts p\n    WHERE p.Title = 'Analysing wind data with R'\n)\nORDER BY c.CreationDate DESC\nLIMIT 1;\n\n\t----- bird -----\tcodebase_community",
    "695": "\nSELECT COUNT(DISTINCT UserId) AS UserCount\nFROM badges\nWHERE Name = 'Citizen Patrol';\n\n\t----- bird -----\tcodebase_community",
    "696": "\nSELECT COUNT(*) \nFROM posts p\nJOIN tags t ON p.Id = t.ExcerptPostId\nWHERE t.TagName = 'careers';\n\n\n\t----- bird -----\tcodebase_community",
    "697": "\nSELECT u.Reputation, u.ViewCount \nFROM users u \nWHERE u.DisplayName = 'Jarrod Dixon'\n\n\t----- bird -----\tcodebase_community",
    "698": "\nSELECT \n    (SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS CommentCount,\n    (SELECT COUNT(*) FROM votes WHERE VoteTypeId = 2 AND PostId = (SELECT Id FROM posts WHERE Title = 'Clustering 1D data')) AS AnswerCount\n\n\n\t----- bird -----\tcodebase_community",
    "699": "\nSELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\n\t----- bird -----\tcodebase_community",
    "700": "\nSELECT COUNT(*) FROM votes WHERE BountyAmount > 30\n\n\t----- bird -----\tcodebase_community",
    "701": "\n\nSELECT COUNT(*) * 100 / COUNT(*)\nFROM posts p\nWHERE p.OwnerUserId = (\n    SELECT TOP 1 u.Id \n    FROM users u\n    ORDER BY u.Reputation DESC\n) AND p.Score > 50;\n\n\n\t----- bird -----\tcodebase_community",
    "702": "\nSELECT COUNT(*) FROM posts WHERE Score < 20;\n\n\t----- bird -----\tcodebase_community",
    "703": "\nSELECT COUNT(*) FROM tags WHERE Id < 15 AND Count <= 20\n\n\t----- bird -----\tcodebase_community",
    "704": "\nSELECT ExcerptPostId, WikiPostId \nFROM tags \nWHERE TagName = 'sample';\n\n\t----- bird -----\tcodebase_community",
    "705": "\nSELECT u.Reputation, u.UpVotes \nFROM users u \nJOIN comments c ON u.Id = c.UserId \nWHERE c.Text = 'fine, you win :)';\n\n\n\t----- bird -----\tcodebase_community",
    "706": "\nSELECT Text \nFROM postHistory \nJOIN posts ON postHistory.PostId = posts.Id \nWHERE posts.Title LIKE '%linear regression%';\n\n\n\t----- bird -----\tcodebase_community",
    "707": "\nSELECT c.Text, c.Score\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.ViewCount BETWEEN 100 AND 150\nORDER BY c.Score DESC\nLIMIT 1;\n\n\n\t----- bird -----\tcodebase_community",
    "708": "\nSELECT c.CreationDate, u.Age \nFROM comments c \nJOIN users u ON c.UserId = u.Id \nWHERE c.Website IS NOT NULL;\n\n\n\t----- bird -----\tcodebase_community",
    "709": "\nSELECT COUNT(DISTINCT c.PostId) \nFROM comments c\nWHERE c.Score = 0 AND p.ViewCount < 5;\n\n\n\t----- bird -----\tcodebase_community",
    "710": "\nSELECT COUNT(*) \nFROM comments \nWHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0;\n\n\n\t----- bird -----\tcodebase_community",
    "711": "\nSELECT COUNT(DISTINCT c.UserId)\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE c.Score = 0 AND DATE_PART('year', AGE(u.CreationDate)) = 40;\n\n\n\t----- bird -----\tcodebase_community",
    "712": "\nSELECT p.Id AS PostId, c.Id AS CommentId\nFROM posts p\nJOIN comments c ON p.Id = c.PostId\nWHERE p.Title = 'Group differences on a five point Likert item';\n\n\n\t----- bird -----\tcodebase_community",
    "713": "\nSELECT u.UpVotes \nFROM users u\nJOIN comments c ON u.Id = c.UserId\nWHERE c.Text = 'R is also lazy evaluated.';\n\n\n\t----- bird -----\tcodebase_community",
    "714": "\nSELECT c.*\nFROM comments c\nJOIN users u ON c.UserId = u.Id\nWHERE u.DisplayName = 'Harvey Motulsky';\n\n\n\t----- bird -----\tcodebase_community",
    "715": "\nSELECT c.UserDisplayName \nFROM comments c \nWHERE c.Score BETWEEN 1 AND 5 \nAND c.UserId NOT IN (SELECT v.UserId FROM votes v WHERE v.VoteTypeId = 3);\n\n\n\t----- bird -----\tcodebase_community",
    "716": "\nSELECT \n    COUNT(*) AS total_comments,\n    SUM(CASE WHEN u.UpVotes = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage_zero_upvotes\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10;\n\n\n\t----- bird -----\tcodebase_community",
    "717": "\nSELECT sp.power_name \nFROM superpower sp \nJOIN hero_power hp ON sp.id = hp.power_id \nJOIN superhero s ON hp.hero_id = s.id \nWHERE s.superhero_name = '3-D Man';\n\n\n\t----- bird -----\tsuperhero",
    "718": "\nSELECT COUNT(DISTINCT h.id) \nFROM superhero h\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\n\n\t----- bird -----\tsuperhero",
    "719": "\nSELECT COUNT(h.id)\nFROM superhero h\nJOIN hero_power hp ON h.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength'\nAND h.height_cm > 200;\n\n\n\t----- bird -----\tsuperhero",
    "720": "\nSELECT s.full_name \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nGROUP BY s.id, s.full_name\nHAVING COUNT(hp.power_id) > 15;\n\n\n\t----- bird -----\tsuperhero",
    "721": "\nSELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')\n\n\t----- bird -----\tsuperhero",
    "722": "\nSELECT c.colour AS skin_colour \nFROM superhero s \nJOIN colour c ON s.skin_colour_id = c.id \nWHERE s.superhero_name = 'Apocalypse';\n\n\t----- bird -----\tsuperhero",
    "723": "\nSELECT COUNT(DISTINCT s.id)\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND sp.power_name = 'Agility'\n\n\t----- bird -----\tsuperhero",
    "724": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'blue' AND c2.colour = 'blond'\n\n\t----- bird -----\tsuperhero",
    "725": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\n\n\t----- bird -----\tsuperhero",
    "726": "\nSELECT full_name FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ORDER BY height_cm DESC LIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "727": "\nSELECT p.publisher_name\nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nWHERE s.superhero_name = 'Sauron';\n\n\t----- bird -----\tsuperhero",
    "728": "\nSELECT COUNT(*) AS blue_eyed_superheroes\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics' AND c.colour = 'blue';\n\n\t----- bird -----\tsuperhero",
    "729": "\nSELECT AVG(height_cm) AS average_height\nFROM superhero\nWHERE publisher_id = (\n    SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'\n);\n\n\t----- bird -----\tsuperhero",
    "730": "\nSELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') * 100 AS percentage\nFROM superhero\nJOIN hero_power ON superhero.id = hero_power.hero_id\nJOIN superpower ON hero_power.power_id = superpower.id\nWHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength'\n\n\t----- bird -----\tsuperhero",
    "731": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics');\n\n\t----- bird -----\tsuperhero",
    "732": "\nSELECT p.publisher_name\nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nWHERE s.alignment_id = (SELECT a.id FROM alignment a WHERE a.alignment = 'Slow')\nGROUP BY p.publisher_name\nORDER BY COUNT(s.id) DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "733": "\nSELECT COUNT(*) AS gold_eyed_superheroes\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE a.attribute_name = 'eye colour' AND a.colour = 'gold' AND p.publisher_name = 'Marvel Comics';\n\n\t----- bird -----\tsuperhero",
    "734": "\nSELECT p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name = 'Blue Beetle II'\n\n\t----- bird -----\tsuperhero",
    "735": "\nSELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')\n\n\t----- bird -----\tsuperhero",
    "736": "\nSELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'intelligence') ORDER BY ha.attribute_value LIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "737": "\nSELECT r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat'\n\n\t----- bird -----\tsuperhero",
    "738": "\nSELECT COUNT(*) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'durability') AND ha.attribute_value < 50;\n\n\t----- bird -----\tsuperhero",
    "739": "\nSELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'death touch';\n\n\n\t----- bird -----\tsuperhero",
    "740": "\nSELECT COUNT(*) FROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\n\n\t----- bird -----\tsuperhero",
    "741": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nGROUP BY s.id, s.superhero_name\nORDER BY COUNT(hp.power_id) DESC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "742": "\nSELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'vampire')\n\n\t----- bird -----\tsuperhero",
    "743": "\nSELECT \n    (COUNT(*) FILTER (WHERE a.attribute_name = 'Selfish') * 100.0 / COUNT(*)) AS percentage_selfish,\n    COUNT(*) FILTER (WHERE a.attribute_name = 'Selfish' AND p.publisher_name = 'Marvel Comics') AS selfish_marvel_count\nFROM \n    superhero s\nJOIN \n    hero_attribute ha ON s.id = ha.hero_id\nJOIN \n    attribute a ON ha.attribute_id = a.id\nLEFT JOIN \n    publisher p ON s.publisher_id = p.id\nWHERE \n    a.attribute_name IN ('Selfish', 'Moral Code');\n\n\t----- bird -----\tsuperhero",
    "744": "\nSELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\n\n\t----- bird -----\tsuperhero",
    "745": "\nSELECT id FROM publisher WHERE publisher_name = 'Star Trek';\n\n\t----- bird -----\tsuperhero",
    "746": "\nSELECT AVG(attribute_value) AS average_attribute_value\nFROM hero_attribute;\n\n\t----- bird -----\tsuperhero",
    "747": "\nSELECT COUNT(*) FROM superhero WHERE full_name IS NULL\n\n\t----- bird -----\tsuperhero",
    "748": "\nSELECT colour.colour AS eye_colour\nFROM superhero\nJOIN eye_colour_id ON superhero.id = 75\nJOIN colour ON superhero.eye_colour_id = colour.id;\n\n\t----- bird -----\tsuperhero",
    "749": "\nSELECT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.superhero_name = 'Deathlok';\n\n\n\t----- bird -----\tsuperhero",
    "750": "\nSELECT AVG(weight_kg) AS average_weight\nFROM superhero\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\n\n\t----- bird -----\tsuperhero",
    "751": "\nSELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\nLIMIT 5;\n\n\n\t----- bird -----\tsuperhero",
    "752": "\nSELECT s.superhero_name \nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE r.race = 'alien';\n\n\n\t----- bird -----\tsuperhero",
    "753": "\nSELECT s.superhero_name \nFROM superhero s \nWHERE s.height_cm BETWEEN 170 AND 190 AND s.eye_colour_id IS NULL;\n\n\n\t----- bird -----\tsuperhero",
    "754": "\nSELECT sp.power_name\nFROM hero_power hp\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE hp.hero_id = 56;\n\n\t----- bird -----\tsuperhero",
    "755": "\nSELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'Demi-God') LIMIT 5;\n\n\n\t----- bird -----\tsuperhero",
    "756": "\nSELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')\n\n\t----- bird -----\tsuperhero",
    "757": "\nSELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.weight_kg = 169;\n\n\t----- bird -----\tsuperhero",
    "758": "\nSELECT c.colour AS hair_colour\nFROM superhero s\nJOIN colour c ON s.hair_colour_id = c.id\nWHERE s.race_id = (SELECT id FROM race WHERE race = 'Human')\nAND s.height_cm = 185\n\n\t----- bird -----\tsuperhero",
    "759": "\nSELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg = (SELECT MAX(weight_kg) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "760": "\nSELECT CAST(SUM(CASE WHEN p.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.height_cm BETWEEN 150 AND 180\n\n\t----- bird -----\tsuperhero",
    "761": "\nSELECT s.full_name\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nWHERE g.gender = 'Male'\nAND s.weight_kg > (SELECT AVG(weight_kg) * 1.79 FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "762": "\nSELECT power_name FROM superpower WHERE id = (SELECT power_id FROM hero_power GROUP BY power_id ORDER BY COUNT(*) DESC LIMIT 1)\n\n\t----- bird -----\tsuperhero",
    "763": "\nSELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = 'Abomination';\n\n\t----- bird -----\tsuperhero",
    "764": "\nSELECT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nWHERE hp.hero_id = 1;\n\n\t----- bird -----\tsuperhero",
    "765": "\nSELECT COUNT(DISTINCT hero_id) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'stealth')\n\n\t----- bird -----\tsuperhero",
    "766": "\nSELECT s.full_name\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'strength'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\n\n\n\t----- bird -----\tsuperhero",
    "767": "\nSELECT AVG(id) AS average_superhero_id\nFROM superhero\nWHERE skin_colour_id IS NULL;\n\n\t----- bird -----\tsuperhero",
    "768": "\nSELECT COUNT(*) FROM superhero AS s JOIN publisher AS p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics'\n\n\t----- bird -----\tsuperhero",
    "769": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN (\n    SELECT h1.hero_id, SUM(a.attribute_value) AS total_durability\n    FROM hero_attribute h1\n    JOIN attribute a ON h1.attribute_id = a.id\n    WHERE a.attribute_name = 'durability'\n    GROUP BY h1.hero_id\n) h2 ON s.id = h2.hero_id\nWHERE p.publisher_name = 'Dark Horse Comics'\nORDER BY h2.total_durability DESC\nLIMIT 1;\n\n\n\t----- bird -----\tsuperhero",
    "770": "\nSELECT c.colour AS eyes_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Abraham Sapien';\n\n\t----- bird -----\tsuperhero",
    "771": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'flight';\n\n\n\t----- bird -----\tsuperhero",
    "772": "\nSELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'\n\n\t----- bird -----\tsuperhero",
    "773": "\nSELECT s.publisher_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nWHERE c1.id = c2.id AND c2.id = c3.id\nGROUP BY s.publisher_name, s.superhero_name\n\n\t----- bird -----\tsuperhero",
    "774": "\nSELECT alignment.alignment\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE superhero.superhero_name = 'A-Bomb';\n\n\t----- bird -----\tsuperhero",
    "775": "\nSELECT \nCAST(SUM(CASE WHEN c.colour = 'blue' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS DECIMAL(5,2))\nFROM \nsuperhero s\nJOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id\nJOIN gender g ON s.gender_id = g.id\nWHERE \ng.gender = 'female'\n\n\t----- bird -----\tsuperhero",
    "776": "\nSELECT s.superhero_name, r.race \nFROM superhero s \nJOIN gender g ON s.gender_id = g.id \nWHERE g.gender = 'Male' AND s.full_name = 'Charles Chandler'\nJOIN race r ON s.race_id = r.id\n\n\t----- bird -----\tsuperhero",
    "777": "\nSELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13'\n\n\t----- bird -----\tsuperhero",
    "778": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'adaptation';\n\n\n\t----- bird -----\tsuperhero",
    "779": "\nSELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\n\n\n\t----- bird -----\tsuperhero",
    "780": "\nSELECT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.superhero_name = 'Hunter Zolomon';\n\n\n\t----- bird -----\tsuperhero",
    "781": "\nSELECT s.height_cm \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'eye colour' AND ha.attribute_value = (SELECT id FROM colour WHERE colour = 'amber')\n\n\t----- bird -----\tsuperhero",
    "782": "\nSELECT s.superhero_name \nFROM superhero s \nJOIN colour c1 ON s.eye_colour_id = c1.id \nJOIN colour c2 ON s.hair_colour_id = c2.id \nWHERE c1.colour = 'black' AND c2.colour = 'black';\n\n\n\t----- bird -----\tsuperhero",
    "783": "\nSELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.skin_colour_id = (SELECT id FROM colour WHERE colour = 'gold');\n\n\n\t----- bird -----\tsuperhero",
    "784": "\nSELECT full_name FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'vampire')\n\n\t----- bird -----\tsuperhero",
    "785": "\nSELECT s.superhero_name \nFROM superhero s \nJOIN alignment a ON s.alignment_id = a.id \nWHERE a.alignment = 'neutral';\n\n\n\t----- bird -----\tsuperhero",
    "786": "\nSELECT COUNT(*) FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength') AND ha.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'strength'))\n\n\t----- bird -----\tsuperhero",
    "787": "\nSELECT race.race, alignment.alignment \nFROM superhero \nJOIN race ON superhero.race_id = race.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE superhero.full_name = 'Cameron Hicks';\n\n\t----- bird -----\tsuperhero",
    "788": "\nSELECT CAST(COUNT(*) AS FLOAT) * 100 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) AS percentage\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_name = 'Marvel Comics'\n\n\t----- bird -----\tsuperhero",
    "789": "\nSELECT AVG(weight_kg) AS average_weight\nFROM superhero\nWHERE race_id = (SELECT id FROM race WHERE race = 'alien');\n\n\t----- bird -----\tsuperhero",
    "790": "\nSELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\n\n\t----- bird -----\tsuperhero",
    "791": "\nSELECT superhero_name, AVG(height_cm) AS average_height\nFROM superhero\nGROUP BY superhero_name;\n\n\t----- bird -----\tsuperhero",
    "792": "\nSELECT sp.power_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Abomination';\n\n\t----- bird -----\tsuperhero",
    "793": "\nSELECT COUNT(*) FROM superhero WHERE race_id = (SELECT id FROM race WHERE race = 'god/eternal') AND gender_id = (SELECT id FROM gender WHERE gender = 'male')\n\n\t----- bird -----\tsuperhero",
    "794": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN (\n    SELECT hero_id, RANK() OVER (ORDER BY power_value DESC) as rank\n    FROM (\n        SELECT hp.hero_id, a.attribute_value as power_value, a.attribute_name\n        FROM hero_power hp\n        JOIN attribute a ON hp.power_id = a.id\n        WHERE a.attribute_name = 'Speed'\n    ) subq\n) r ON s.id = r.hero_id\nWHERE r.rank = 1;\n\n\t----- bird -----\tsuperhero",
    "795": "\nSELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')\n\n\t----- bird -----\tsuperhero",
    "796": "\nSELECT attribute.attribute_name, hero_attribute.attribute_value\nFROM superhero\nJOIN hero_attribute ON superhero.id = hero_attribute.hero_id\nJOIN attribute ON hero_attribute.attribute_id = attribute.id\nWHERE superhero.superhero_name = '3-D Man'\n\n\t----- bird -----\tsuperhero",
    "797": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nWHERE c1.colour = 'blue' AND c2.colour = 'brown';\n\n\n\t----- bird -----\tsuperhero",
    "798": "\nSELECT p.publisher_name \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\nGROUP BY p.publisher_name;\n\n\t----- bird -----\tsuperhero",
    "799": "\nSELECT COUNT(*) FROM superhero WHERE publisher_id IS NULL\n\n\t----- bird -----\tsuperhero",
    "800": "\nSELECT \nCAST(SUM(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero\n\n\t----- bird -----\tsuperhero",
    "801": "\nSELECT CAST(SUM(CASE WHEN gender.gender = 'male' THEN 1 ELSE 0 END) AS FLOAT) / SUM(1) AS male_ratio,\n       CAST(SUM(CASE WHEN gender.gender = 'female' THEN 1 ELSE 0 END) AS FLOAT) / SUM(1) AS female_ratio\nFROM superhero\nJOIN gender ON superhero.gender_id = gender.id;\n\n\t----- bird -----\tsuperhero",
    "802": "\nSELECT superhero_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "803": "\nSELECT id FROM superpower WHERE power_name = 'cryokinesis';\n\n\t----- bird -----\tsuperhero",
    "804": "\nSELECT superhero_name FROM superhero WHERE id = 294;\n\n\t----- bird -----\tsuperhero",
    "805": "\nSELECT full_name FROM superhero WHERE weight_kg IS NULL\n\n\t----- bird -----\tsuperhero",
    "806": "\nSELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.full_name = 'Karen Beecher-Duncan'\n\n\t----- bird -----\tsuperhero",
    "807": "\nSELECT sp.power_name \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.full_name = 'Helen Parr';\n\n\n\t----- bird -----\tsuperhero",
    "808": "\nSELECT r.race\nFROM superhero s\nJOIN race r ON s.race_id = r.id\nWHERE s.weight_kg = 108 AND s.height_cm = 188\n\n\t----- bird -----\tsuperhero",
    "809": "\nSELECT p.publisher_name\nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nWHERE s.id = 38;\n\n\t----- bird -----\tsuperhero",
    "810": "\nSELECT r.race\nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN race r ON s.race_id = r.id\nWHERE ha.attribute_id = (\n    SELECT attribute_id\n    FROM hero_attribute\n    ORDER BY attribute_value DESC\n    LIMIT 1\n)\n\n\t----- bird -----\tsuperhero",
    "811": "\nSELECT a.alignment, sp.power_name\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE s.superhero_name = 'Atom IV'\n\n\t----- bird -----\tsuperhero",
    "812": "\nSELECT s.full_name \nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE c.colour = 'blue'\nLIMIT 5;\n\n\n\t----- bird -----\tsuperhero",
    "813": "\nSELECT AVG(attribute_value) AS average_attribute_value\nFROM hero_attribute\nWHERE hero_id IN (\n    SELECT id\n    FROM superhero\n    INNER JOIN alignment ON superhero.alignment_id = alignment.id\n    WHERE alignment.alignment = 'neutral'\n)\nGROUP BY attribute_id;\n\n\t----- bird -----\tsuperhero",
    "814": "\nSELECT c.colour \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN colour c ON s.skin_colour_id = c.id \nWHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'skin' LIMIT 1) AND ha.attribute_value = 100;\n\n\n\t----- bird -----\tsuperhero",
    "815": "\nSELECT COUNT(*) AS good_female_superheroes\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nJOIN gender ON superhero.gender_id = gender.id\nWHERE alignment.alignment = 'good' AND gender.gender = 'female';\n\n\t----- bird -----\tsuperhero",
    "816": "\nSELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id WHERE ha.attribute_value BETWEEN 75 AND 80;\n\n\n\t----- bird -----\tsuperhero",
    "817": "\nSELECT r.race\nFROM superhero s\nJOIN colour c ON s.hair_colour_id = c.id\nJOIN race r ON s.race_id = r.id\nJOIN gender g ON s.gender_id = g.id\nWHERE c.colour = 'blue' AND g.gender = 'male'\n\n\t----- bird -----\tsuperhero",
    "818": "\nSELECT CAST(SUM(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nWHERE a.alignment = 'Bad'\n\n\t----- bird -----\tsuperhero",
    "819": "\nSELECT COUNT(*) - (\n    SELECT COUNT(*)\n    FROM superhero s\n    JOIN hero_attribute ha ON s.id = ha.hero_id\n    WHERE s.weight_kg IS NULL AND ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Eye Color') AND ha.attribute_value = (SELECT id FROM colour WHERE colour = 'Blue')\n) AS difference\nFROM superhero s\nWHERE s.weight_kg IS NULL\n\n\t----- bird -----\tsuperhero",
    "820": "\nSELECT a.attribute_value AS strength\nFROM hero_attribute ha\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE ha.hero_id = (SELECT id FROM superhero WHERE full_name = 'Hulk')\nAND a.attribute_name = 'Strength';\n\n\t----- bird -----\tsuperhero",
    "821": "\nSELECT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.superhero_name = 'Ajax';\n\n\n\t----- bird -----\tsuperhero",
    "822": "\nSELECT COUNT(*) FROM superhero WHERE skin_colour_id = (SELECT id FROM colour WHERE colour = 'green') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'villain')\n\n\t----- bird -----\tsuperhero",
    "823": "\nSELECT COUNT(*) AS female_superheroes_count\nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE g.gender = 'female' AND p.publisher_name = 'Marvel Comics';\n\n\t----- bird -----\tsuperhero",
    "824": "\nSELECT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'control wind'\nGROUP BY s.superhero_name\nORDER BY s.superhero_name ASC;\n\n\n\t----- bird -----\tsuperhero",
    "825": "\nSELECT g.gender \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nJOIN gender g ON s.gender_id = g.id\nWHERE sp.power_name = 'Phoenix Force';\n\n\n\t----- bird -----\tsuperhero",
    "826": "\nSELECT s.superhero_name, s.weight_kg \nFROM superhero s \nJOIN publisher p ON s.publisher_id = p.id \nWHERE p.publisher_name = 'DC Comics' \nORDER BY s.weight_kg DESC \nLIMIT 1;\n\n\n\t----- bird -----\tsuperhero",
    "827": "\nSELECT AVG(height_cm) AS average_height\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN race r ON s.race_id = r.id\nWHERE p.publisher_name = 'Dark Horse Comics' AND r.race != 'Human'\nGROUP BY r.race;\n\n\t----- bird -----\tsuperhero",
    "828": "\nSELECT COUNT(*) FROM superhero WHERE alignment = (SELECT id FROM alignment WHERE alignment = 'Fastest')\n\n\t----- bird -----\tsuperhero",
    "829": "\nSELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\n\n\t----- bird -----\tsuperhero",
    "830": "\nSELECT a.attribute_name\nFROM attribute a\nJOIN hero_attribute ha ON a.id = ha.attribute_id\nJOIN superhero s ON ha.hero_id = s.id\nWHERE s.full_name = 'Black Panther'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "831": "\nSELECT c.colour FROM superhero s JOIN colour c ON s.eye_colour_id = c.id WHERE s.superhero_name = 'Abomination'\n\n\t----- bird -----\tsuperhero",
    "832": "\nSELECT full_name FROM superhero WHERE height_cm = (SELECT MAX(height_cm) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "833": "\nSELECT superhero_name, full_name FROM superhero WHERE full_name = 'Charles Chandler';\n\n\t----- bird -----\tsuperhero",
    "834": "\nSELECT CAST(SUM(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*) * 100 AS female_percentage\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'George Lucas';\n\n\t----- bird -----\tsuperhero",
    "835": "\nSELECT CAST(COUNT(s.id) AS FLOAT) * 100 / (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS percentage_good_superheroes\nFROM superhero s\nJOIN alignment a ON s.alignment_id = a.id\nJOIN publisher p ON s.publisher_id = p.id\nWHERE p.publisher_name = 'Marvel Comics' AND a.alignment = 'good'\n\n\t----- bird -----\tsuperhero",
    "836": "\nSELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%';\n\n\t----- bird -----\tsuperhero",
    "837": "\nSELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1;\n\n\t----- bird -----\tsuperhero",
    "838": "\nSELECT full_name FROM superhero WHERE superhero_name = 'Alien';\n\n\t----- bird -----\tsuperhero",
    "839": "\nSELECT s.full_name\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.weight_kg < 100 AND c.colour = 'brown'\n\n\t----- bird -----\tsuperhero",
    "840": "\nSELECT ha.attribute_value \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE s.superhero_name = 'Aquababy';\n\n\n\t----- bird -----\tsuperhero",
    "841": "\nSELECT s.weight_kg, r.race \nFROM superhero s \nJOIN race r ON s.race_id = r.id \nWHERE s.id = 40;\n\n\t----- bird -----\tsuperhero",
    "842": "\nSELECT AVG(height_cm) AS average_height\nFROM superhero\nJOIN alignment ON superhero.alignment_id = alignment.id\nWHERE alignment.alignment = 'neutral';\n\n\t----- bird -----\tsuperhero",
    "843": "\nSELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM attribute WHERE attribute_name = 'intelligence')\n\n\t----- bird -----\tsuperhero",
    "844": "\nSELECT c.colour AS eye_colour\nFROM superhero s\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE s.superhero_name = 'Blackwulf';\n\n\t----- bird -----\tsuperhero",
    "845": "\nSELECT sp.power_name\nFROM superpower sp\nJOIN hero_power hp ON sp.id = hp.power_id\nJOIN superhero s ON hp.hero_id = s.id\nWHERE s.height_cm > (SELECT 0.8 * AVG(height_cm) FROM superhero)\n\n\t----- bird -----\tsuperhero",
    "846": "\nSELECT d.driverRef \nFROM driverStandings ds \nJOIN drivers d ON ds.driverId = d.driverId \nWHERE ds.positionText = 'Eliminated' AND ds.raceId = 18 AND ds.position = 1;\n\n\n\t----- bird -----\tformula_1",
    "847": "\nSELECT d.surname\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 19 AND r.fastestLapTime IS NOT NULL AND r.fastestLapTime LIKE '%Q2%'\nSQL_END\n\n\t----- bird -----\tformula_1",
    "848": "\nSELECT s.year\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN seasons s ON r.year = s.year\nWHERE c.location = 'Shanghai'\n\n\t----- bird -----\tformula_1",
    "849": "\nSELECT location, url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya'\n\n\t----- bird -----\tformula_1",
    "850": "\nSELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Germany'\n\n\t----- bird -----\tformula_1",
    "851": "\nSELECT c.name, r.position \nFROM circuits AS c \nJOIN races AS r ON c.circuitId = r.circuitId \nJOIN constructorResults AS cr ON r.raceId = cr.raceId \nJOIN constructors AS con ON cr.constructorId = con.constructorId \nWHERE con.name = 'Renault';\n\n\n\t----- bird -----\tformula_1",
    "852": "\nSELECT COUNT(*) \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.year = 2010 AND circuits.country NOT IN ('Asia', 'Europe');\n\n\n\t----- bird -----\tformula_1",
    "853": "\nSELECT r.name\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Spain'\n\n\t----- bird -----\tformula_1",
    "854": "\nSELECT lat, lng FROM circuits WHERE name = 'Australian Grand Prix'\n\n\t----- bird -----\tformula_1",
    "855": "\nSELECT r.*\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Sepang International Circuit'\n\n\t----- bird -----\tformula_1",
    "856": "\nSELECT races.time \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE circuits.name = 'Sepang International Circuit';\n\n\n\t----- bird -----\tformula_1",
    "857": "\nSELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Abu Dhabi Grand Prix'\n\n\t----- bird -----\tformula_1",
    "858": "\nSELECT c.country \nFROM constructorResults cr\nJOIN races r ON cr.raceId = r.raceId\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE r.raceId = 24 AND cr.points = 1;\n\n\n\t----- bird -----\tformula_1",
    "859": "\nSELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE drivers.surname = 'Senna' AND drivers.forename = 'Bruno' AND qualifying.raceId = 354;\n\n\n\t----- bird -----\tformula_1",
    "860": "\nSELECT d.nationality \nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.qualifyId = (\n    SELECT qualifyId \n    FROM qualifying \n    WHERE raceId = 355 AND q2 = '0:01:40'\n);\n\n\n\t----- bird -----\tformula_1",
    "861": "\nSELECT d.driverId, d.number\nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 903 AND q.q3 = '0:01:54';\n\n\n\t----- bird -----\tformula_1",
    "862": "\nSELECT COUNT(*) AS drivers_not_finished\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.name = 'Bahrain Grand Prix' AND races.year = 2007 AND results.statusId != 1;\n\n\n\t----- bird -----\tformula_1",
    "863": "\nSELECT s.*\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\n\n\t----- bird -----\tformula_1",
    "864": "\nSELECT COUNT(*) AS drivers_finished\nFROM results\nWHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29');\n\n\n\t----- bird -----\tformula_1",
    "865": "\nSELECT d.forename, d.surname, d.dob\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 592 AND r.statusId IN (SELECT statusId FROM status WHERE status = 'Finished')\nORDER BY d.dob ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "866": "\nSELECT d.url AS driver_url\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.time = '0:01:27' AND lt.raceId = 161;\n\n\n\t----- bird -----\tformula_1",
    "867": "\nSELECT nationality FROM drivers WHERE driverId = (SELECT driverId FROM results WHERE raceId = 933 AND fastestLapSpeed IS NOT NULL ORDER BY fastestLapSpeed DESC LIMIT 1)\n\n\t----- bird -----\tformula_1",
    "868": "\nSELECT circuits.location, circuits.lat, circuits.lng \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nJOIN constructors ON races.year = constructors.year \nWHERE circuits.country = 'Malaysia' AND races.name LIKE '%Malaysian Grand Prix%' \nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "869": "\nSELECT c.url \nFROM constructors c \nJOIN constructorResults cr ON c.constructorId = cr.constructorId \nJOIN races r ON cr.raceId = r.raceId \nWHERE r.raceId = 9 \nORDER BY cr.points DESC \nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "870": "\nSELECT q1 \nFROM qualifying \nJOIN drivers ON qualifying.driverId = drivers.driverId \nWHERE drivers.surname = 'di Grassi' AND drivers.forename = 'Lucas' AND races.raceId = qualifying.raceId AND races.raceId = 345;\n\n\n\t----- bird -----\tformula_1",
    "871": "\nSELECT d.nationality \nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nWHERE q.raceId = 347 AND q.q2 = '0:01:15';\n\n\n\t----- bird -----\tformula_1",
    "872": "\nSELECT d.code\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN results r ON d.driverId = r.driverId AND q.raceId = r.raceId\nWHERE r.raceId = 45 AND q.q3 = '0:01:33';\n\n\n\t----- bird -----\tformula_1",
    "873": "\nSELECT r.time AS actual_finish_time\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.raceId = 743 AND d.surname = 'McLaren';\n\n\n\t----- bird -----\tformula_1",
    "874": "\nSELECT d.surname, d.forename\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.position = 2 AND r.raceId = (SELECT raceId FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006);\n\n\n\t----- bird -----\tformula_1",
    "875": "\nSELECT s.*\nFROM seasons s\nJOIN races r ON s.year = r.year\nWHERE r.raceId = 901;\n\n\t----- bird -----\tformula_1",
    "876": "\nSELECT COUNT(*) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE date = '2015-11-29');\n\n\n\t----- bird -----\tformula_1",
    "877": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.raceId = 872 AND r.statusId IN (SELECT statusId FROM status WHERE status = 'Finished')\nORDER BY d.dob ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "878": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN lapTimes lt ON r.raceId = lt.raceId AND r.driverId = lt.driverId\nWHERE r.raceId = 348\nORDER BY lt.time\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "879": "\nSELECT d.nationality \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE r.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed) \n    FROM results\n);\n\n\n\t----- bird -----\tformula_1",
    "880": "\nSELECT \n    100 * (r2.fastestLapSpeed - r1.fastestLapSpeed) / r1.fastestLapSpeed AS percent_faster\nFROM \n    results r1\nJOIN \n    results r2 ON r1.raceId = r2.raceId AND r1.position = 1\nJOIN \n    drivers d ON r1.driverId = d.driverId\nWHERE \n    d.surname = 'di Resta' AND r1.number = 853;\n\n\n\t----- bird -----\tformula_1",
    "881": "\nSELECT d.surname, COUNT(r.raceId) / (SELECT COUNT(*) FROM races WHERE date = '1983-07-16') * 100 AS race_completion_rate\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId AND r.raceId IN (SELECT raceId FROM races WHERE date = '1983-07-16')\nGROUP BY d.surname;\n\n\n\t----- bird -----\tformula_1",
    "882": "\nSELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "883": "\nSELECT COUNT(raceId) AS race_count, name \nFROM races \nWHERE year = 2005 \nGROUP BY name \nORDER BY race_count DESC;\n\n\n\t----- bird -----\tformula_1",
    "884": "\n\nSELECT name, date FROM races WHERE EXTRACT(YEAR_MONTH FROM date) = EXTRACT(YEAR_MONTH FROM (SELECT MIN(date) FROM races))\n\n\n\t----- bird -----\tformula_1",
    "885": "\nSELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "886": "\nSELECT YEAR FROM races GROUP BY YEAR ORDER BY COUNT(*) DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "887": "\nSELECT r.name \nFROM races r \nWHERE r.year = 2017 AND r.circuitId IN (\n    SELECT c.circuitId \n    FROM races c \n    WHERE c.year != 2000\n)\n\n\n\t----- bird -----\tformula_1",
    "888": "\nSELECT c.country, c.name, c.location \nFROM circuits c \nJOIN races r ON c.circuitId = r.circuitId \nWHERE r.year >= 1950 AND c.location LIKE '%European Grand Prix' \nORDER BY r.date ASC \nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "889": "\nSELECT races.date\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.name = 'Brands Hatch'\nAND races.year = (\n    SELECT MAX(year)\n    FROM races\n    JOIN circuits ON races.circuitId = circuits.circuitId\n    WHERE circuits.name = 'Brands Hatch'\n);\n\n\n\t----- bird -----\tformula_1",
    "890": "\nSELECT COUNT(DISTINCT r.year) \nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone' AND c.country = 'United Kingdom'\n\n\t----- bird -----\tformula_1",
    "891": "\nSELECT d.forename, d.surname, r.position \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nJOIN races rc ON r.raceId = rc.raceId \nWHERE rc.year = 2010 AND rc.name = 'Singapore Grand Prix' \nORDER BY r.position;\n\n\n\t----- bird -----\tformula_1",
    "892": "\nSELECT d.forename, d.surname, MAX(r.points) AS total_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY total_points DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "893": "\nSELECT d.forename, d.surname, r.points \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nJOIN races rc ON r.raceId = rc.raceId \nWHERE rc.year = 2017 AND rc.name = 'Chinese Grand Prix' \nORDER BY r.points DESC \nLIMIT 3;\n\n\n\t----- bird -----\tformula_1",
    "894": "\nSELECT d.surname, r.name, lt.time\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nJOIN lapTimes lt ON res.driverId = lt.driverId AND res.raceId = lt.raceId\nWHERE lt.position = 1\nORDER BY lt.time ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "895": "\nSELECT AVG(milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nJOIN races ON lapTimes.raceId = races.raceId\nWHERE drivers.surname = 'Vettel' AND drivers.forename = 'Sebastian' AND races.year = 2009 AND races.name = 'Chinese Grand Prix';\n\n\t----- bird -----\tformula_1",
    "896": "\nSELECT \n(SELECT COUNT(*) FROM races r \nJOIN results res ON r.raceId = res.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.surname = 'Hamilton' AND r.year >= 2010 AND res.position != 1) * 100.0 / \n(SELECT COUNT(*) FROM races r \nJOIN results res ON r.raceId = res.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.surname = 'Hamilton' AND r.year >= 2010)\n\n\t----- bird -----\tformula_1",
    "897": "\nSELECT d.forename, d.surname, d.nationality, AVG(r.points) AS avg_points\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.position = 1\nGROUP BY d.driverId\nORDER BY avg_points DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "898": "\nSELECT MAX(dob) AS youngest_dob, forename, surname \nFROM drivers \nWHERE nationality = 'Japanese' \nGROUP BY forename, surname;\nSQL_END\n\n\t----- bird -----\tformula_1",
    "899": "\nSELECT c.name\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nWHERE r.year BETWEEN 1990 AND 2000\nGROUP BY c.name\nHAVING COUNT(r.raceId) = 4\n\n\t----- bird -----\tformula_1",
    "900": "\nSELECT c.name, c.location, r.name AS race_name\nFROM circuits c\nJOIN races r ON c.circuitId = r.circuitId\nJOIN seasons s ON r.year = s.year\nWHERE c.country = 'USA' AND s.year = 2006;\n\n\n\t----- bird -----\tformula_1",
    "901": "\nSELECT r.name, c.name AS circuit_name, c.location \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE r.date >= '2005-09-01' AND r.date <= '2005-09-30'\n\n\n\t----- bird -----\tformula_1",
    "902": "\nSELECT r.name, r.date\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.surname = 'Yoong' AND res.grid < 10;\n\n\n\t----- bird -----\tformula_1",
    "903": "\nSELECT COUNT(*) AS wins_count\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nJOIN races rc ON r.raceId = rc.raceId\nJOIN circuits c ON rc.circuitId = c.circuitId\nWHERE d.surname = 'Schumacher' AND c.name = 'Sepang International Circuit';\n\n\n\t----- bird -----\tformula_1",
    "904": "\nSELECT r.name, s.year\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.surname = 'Schumacher' AND d.forename = 'Michael'\nORDER BY res.fastestLap DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "905": "\nSELECT AVG(r.points) AS average_points\nFROM results r\nJOIN driverStandings ds ON r.driverId = ds.driverId AND r.raceId = ds.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.surname = 'Irvine' AND YEAR(r.raceId) = 2000;\n\n\n\t----- bird -----\tformula_1",
    "906": "\nSELECT r.name AS first_race, d.driverId, d.forename, d.surname, res.points \nFROM races r \nJOIN results res ON r.raceId = res.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.surname = 'Hamilton' AND d.forename = 'Lewis' \nORDER BY r.year, r.round LIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "907": "\nSELECT r.name, c.country, r.date \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE r.year = 2017 \nORDER BY r.date;\n\n\n\t----- bird -----\tformula_1",
    "908": "\nSELECT r.name, s.year, c.location, COUNT(*) AS laps_count\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN seasons s ON r.year = s.year\nWHERE res.laps = (\n    SELECT MAX(res2.laps)\n    FROM results res2\n)\nGROUP BY r.name, s.year, c.location\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "909": "\nSELECT CAST(SUM(CASE WHEN circuits.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS percentage\nFROM races\nJOIN circuits ON races.circuitId = circuits.circuitId\nWHERE circuits.country IN ('Spain', 'Monaco', 'Italy', 'Belgium', 'Netherlands', 'Austria', 'United Kingdom', 'France', 'Germany')\n\n\t----- bird -----\tformula_1",
    "910": "\nSELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\n\n\t----- bird -----\tformula_1",
    "911": "\nSELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring')\n\n\t----- bird -----\tformula_1",
    "912": "\nSELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\n\n\t----- bird -----\tformula_1",
    "913": "\nSELECT country FROM circuits WHERE alt = (SELECT MAX(alt) FROM circuits)\n\n\t----- bird -----\tformula_1",
    "914": "\nSELECT COUNT(*) FROM drivers WHERE code IS NULL\n\n\t----- bird -----\tformula_1",
    "915": "\nSELECT nationality, MIN(dob)\nFROM drivers\nGROUP BY nationality\nORDER BY dob ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "916": "\nSELECT surname FROM drivers WHERE nationality = 'Italian';\n\n\t----- bird -----\tformula_1",
    "917": "\nSELECT url FROM drivers WHERE surname = 'Davidson' AND forename = 'Anthony'\n\n\t----- bird -----\tformula_1",
    "918": "\nSELECT driverRef FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis';\n\n\t----- bird -----\tformula_1",
    "919": "\nSELECT circuits.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\n\n\t----- bird -----\tformula_1",
    "920": "\nSELECT DISTINCT s.year \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nJOIN seasons s ON r.year = s.year \nWHERE c.name = 'Silverstone';\n\n\n\t----- bird -----\tformula_1",
    "921": "\nSELECT r.raceId, r.year, r.round, r.name, c.circuitRef, c.name AS circuitName, c.location, c.country\nFROM races r\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Silverstone';\n\n\n\t----- bird -----\tformula_1",
    "922": "\nSELECT date, time \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE YEAR(date) >= 2010 AND YEAR(date) < 2020 AND circuits.name = 'Abu Dhabi';\nSQL_END\n\n\t----- bird -----\tformula_1",
    "923": "\nSELECT COUNT(*) FROM races WHERE circuitId IN (SELECT circuitId FROM circuits WHERE country = 'Italy')\n\n\t----- bird -----\tformula_1",
    "924": "\nSELECT date \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE circuits.name = 'Catalunya';\n\n\n\t----- bird -----\tformula_1",
    "925": "\nSELECT url FROM circuits WHERE circuitId IN (SELECT circuitId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')\n\n\t----- bird -----\tformula_1",
    "926": "\nSELECT fastestLapTime \nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE d.surname = 'Hamilton' \nGROUP BY fastestLapTime \nORDER BY fastestLapTime IS NULL, fastestLapTime ASC \nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "927": "\nSELECT d.forename, d.surname \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE r.fastestLapSpeed = (\n    SELECT MAX(fastestLapSpeed) \n    FROM results\n);\n\n\n\t----- bird -----\tformula_1",
    "928": "\nSELECT driverRef FROM driverStandings WHERE year = 2008 AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008) AND position = 1;\n\n\n\t----- bird -----\tformula_1",
    "929": "\nSELECT r.name, r.year, r.round, r.date, r.time\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.surname = 'Hamilton' AND d.forename = 'Lewis';\n\n\n\t----- bird -----\tformula_1",
    "930": "\nSELECT r.raceId, r.name\nFROM results res\nJOIN races r ON res.raceId = r.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.surname = 'Hamilton'\nORDER BY res.position ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "931": "\nSELECT MAX(fastestLapSpeed) AS fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\n\n\t----- bird -----\tformula_1",
    "932": "\nSELECT DISTINCT s.year \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nJOIN races rc ON r.raceId = rc.raceId \nJOIN seasons s ON rc.year = s.year \nWHERE d.surname = 'Hamilton' AND d.forename = 'Lewis';\n\n\n\t----- bird -----\tformula_1",
    "933": "\nSELECT position AS final_rank\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton' AND races.year = 2008 AND races.name = 'Australian Grand Prix'\nORDER BY raceId DESC, position ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "934": "\nSELECT d.forename, d.surname \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races re ON r.raceId = re.raceId\nWHERE re.year = 2008 AND re.name = 'Australian Grand Prix' AND r.grid = 4;\n\n\n\t----- bird -----\tformula_1",
    "935": "\nSELECT COUNT(*) AS drivers_count\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position IS NOT NULL;\n\n\n\t----- bird -----\tformula_1",
    "936": "\nSELECT q3 AS fastest_lap_time\nFROM qualifying\nJOIN drivers ON qualifying.driverId = drivers.driverId\nJOIN races ON qualifying.raceId = races.raceId\nWHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.year = 2008 AND races.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "937": "\nSELECT r.time \nFROM results r \nJOIN races ra ON r.raceId = ra.raceId \nJOIN seasons se ON ra.year = se.year \nWHERE se.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.position = 2;\n\n\n\t----- bird -----\tformula_1",
    "938": "\nSELECT d.forename, d.surname, c.url \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN races re ON r.raceId = re.raceId\nJOIN constructors c ON r.constructorId = c.constructorId\nWHERE re.name = 'Australian Grand Prix' AND re.year = 2008 AND r.position = 1;\n\n\n\t----- bird -----\tformula_1",
    "939": "\nSELECT COUNT(*)\nFROM drivers\nJOIN results ON drivers.driverId = results.driverId\nJOIN races ON results.raceId = races.raceId\nWHERE drivers.nationality = 'USA' AND races.year = 2008 AND races.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "940": "\nSELECT COUNT(*) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2008 AND ra.name = 'Australian Grand Prix' AND r.statusId IN (SELECT statusId FROM status WHERE status = 'Finished');\n\n\n\t----- bird -----\tformula_1",
    "941": "\nSELECT SUM(T2.points) AS Total_Points\nFROM drivers AS T1\nJOIN results AS T2 ON T1.driverId = T2.driverId\nWHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis';\n\n\n\t----- bird -----\tformula_1",
    "942": "\nSELECT AVG(CAST(REPLACE(SUBSTR(fastestLapTime, 1, LENGTH(SUBSTR(fastestLapTime, INSTR(fastestLapTime, ':') + 1)), '.') || '0' AS REAL)) - CAST(REPLACE(SUBSTR(fastestLapTime, 1, INSTR(fastestLapTime, ':')), ':', '') AS REAL) / 60) AS avg_fastest_lap_time\nFROM results\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton'\n\n\t----- bird -----\tformula_1",
    "943": "\nSELECT CAST(SUM(CASE WHEN r.laps = lc.laps THEN 1 ELSE 0 END) AS REAL) / COUNT(*) \nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN seasons s ON r.year = s.year\nLEFT JOIN (\n    SELECT raceId, SUM(laps) AS laps\n    FROM lapTimes lt\n    GROUP BY raceId\n) lc ON r.raceId = lc.raceId\nWHERE s.year = 2008 AND c.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "944": "\nSELECT \n    ((t1.time - t2.time) * 100 / t2.time) AS speed_difference_percentage\nFROM \n    lapTimes t1\nJOIN \n    races r ON t1.raceId = r.raceId\nJOIN \n    driverStandings ds ON t1.driverId = ds.driverId\nJOIN \n    (\n        SELECT \n            raceId, MIN(position) AS last_position\n        FROM \n            driverStandings\n        WHERE \n            raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n        GROUP BY \n            raceId\n    ) last ON ds.raceId = last.raceId AND ds.position = last.last_position\nJOIN \n    (\n        SELECT \n            raceId, MAX(position) AS champion_position\n        FROM \n            driverStandings\n        WHERE \n            raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n        GROUP BY \n            raceId\n    ) champ ON t1.raceId = champ.raceId AND t1.driverId = (\n        SELECT \n            driverId\n        FROM \n            driverStandings\n        WHERE \n            raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\n        ORDER BY \n            position ASC\n        LIMIT 1, 1\n    )\nWHERE \n    r.year = 2008 AND r.name = 'Australian Grand Prix'\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "945": "\nSELECT COUNT(*) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia'\n\n\t----- bird -----\tformula_1",
    "946": "\nSELECT location, lat, lng FROM circuits WHERE country = 'US'\n\n\t----- bird -----\tformula_1",
    "947": "\nSELECT COUNT(*)\nFROM drivers\nWHERE nationality = 'British' AND dob > '1980-12-31'\n\n\t----- bird -----\tformula_1",
    "948": "\nSELECT AVG(constructors.points) AS average_points\nFROM constructors\nJOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId\nWHERE constructors.nationality = 'British'\nGROUP BY constructors.constructorId;\n\n\t----- bird -----\tformula_1",
    "949": "\nSELECT constructorId, name FROM constructors WHERE constructorId = (SELECT constructorId FROM constructorStandings ORDER BY points DESC LIMIT 1)\n\n\t----- bird -----\tformula_1",
    "950": "\nSELECT c.name \nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nJOIN races r ON cr.raceId = r.raceId\nWHERE r.raceId = 291 AND cr.points = 0;\n\n\n\t----- bird -----\tformula_1",
    "951": "\nSELECT COUNT(DISTINCT c.constructorId)\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE c.nationality = 'Japanese' AND cs.points = 0 AND r.year IN (YEAR(CURDATE()) - 1, YEAR(CURDATE()))\n\n\t----- bird -----\tformula_1",
    "952": "\nSELECT DISTINCT c.name \nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE cs.position = 1;\n\n\n\t----- bird -----\tformula_1",
    "953": "\nSELECT COUNT(*) FROM constructors WHERE nationality = 'French' AND constructorId IN (SELECT constructorId FROM results WHERE laps > 50)\n\n\t----- bird -----\tformula_1",
    "954": "\nSELECT \n    (COUNT(*) * 100.0 / (SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE YEAR BETWEEN 2007 AND 2009))) AS completion_percentage\nFROM \n    results \nWHERE \n    driverId IN (\n        SELECT \n            driverId \n        FROM \n            drivers \n        WHERE \n            nationality = 'Japanese' \n            AND driverId IN (\n                SELECT \n                    driverId \n                FROM \n                    races \n                WHERE \n                    YEAR BETWEEN 2007 AND 2009\n            )\n    ) \n    AND raceId IN (\n        SELECT \n            raceId \n        FROM \n            races \n        WHERE \n            YEAR BETWEEN 2007 AND 2009\n    )\n\n\t----- bird -----\tformula_1",
    "955": "\nSELECT s.year, AVG(TIME_TO_SEC(r.time)) AS avg_time_in_seconds\nFROM races r\nJOIN seasons s ON r.year = s.year\nJOIN driverStandings ds ON r.raceId = ds.raceId\nJOIN drivers d ON ds.driverId = d.driverId\nWHERE ds.position = 1\nGROUP BY s.year\n\n\t----- bird -----\tformula_1",
    "956": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.dob > '1975-01-01' AND r.position = 2;\n\n\n\t----- bird -----\tformula_1",
    "957": "\nSELECT COUNT(*) FROM driverStandings AS ds JOIN drivers AS d ON ds.driverId = d.driverId WHERE d.nationality = 'Italian' AND ds.positionText = 'Did Not Finish'\n\n\t----- bird -----\tformula_1",
    "958": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE r.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n)\n\n\t----- bird -----\tformula_1",
    "959": "\nSELECT fastestLap \nFROM results r\nJOIN driverStandings ds ON r.driverId = ds.driverId\nWHERE ds.year = 2009 AND ds.position = 1;\nSQL_END\n\n\t----- bird -----\tformula_1",
    "960": "\nSELECT AVG(fastestLapSpeed::real) AS average_fastest_lap_speed\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE races.year = 2009 AND races.name = 'Spanish Grand Prix';\n\n\t----- bird -----\tformula_1",
    "961": "\nSELECT r.name, s.year\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nWHERE res.positionText != 'Ret' AND res.positionText != 'DNS'\nORDER BY res.time\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "962": "\nSELECT \n    COUNT(*) FILTER (WHERE driver.dob < '1985-01-01' AND r.laps > 50) * 100.0 / COUNT(*)\nFROM \n    races r\nJOIN \n    results res ON r.raceId = res.raceId\nJOIN \n    drivers driver ON res.driverId = driver.driverId;\n\n\n\t----- bird -----\tformula_1",
    "963": "\nSELECT COUNT(*) \nFROM drivers \nJOIN lapTimes ON drivers.driverId = lapTimes.driverId \nWHERE drivers.nationality = 'French' AND TIME(lapTimes.time) < '02:00:00';\n\n\n\t----- bird -----\tformula_1",
    "964": "\nSELECT code FROM drivers WHERE nationality = 'American';\n\n\n\t----- bird -----\tformula_1",
    "965": "\nSELECT raceId FROM races WHERE year = 2009;\n\n\n\t----- bird -----\tformula_1",
    "966": "\nSELECT COUNT(DISTINCT driverId) AS driver_count\nFROM results\nWHERE raceId = 18;\n\n\t----- bird -----\tformula_1",
    "967": "\nSELECT d.code, COUNT(*) AS netherlandic_drivers\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nWHERE ds.position <= 3\nGROUP BY d.code\nUNION ALL\nSELECT 'NL' AS code, COUNT(*) AS netherlandic_drivers\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nWHERE ds.position <= 3 AND d.nationality = 'Netherlands'\nSQL_END\n\n\t----- bird -----\tformula_1",
    "968": "\nSELECT driverRef FROM drivers WHERE surname = 'Kubica' AND forename = 'Robert'\n\n\t----- bird -----\tformula_1",
    "969": "\nSELECT COUNT(*) FROM drivers WHERE nationality = 'Australian' AND dob LIKE '1980%'\n\n\t----- bird -----\tformula_1",
    "970": "\nSELECT d.forename, d.surname, MIN(l.time) AS earliest_lap_time\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN lapTimes l ON r.raceId = l.raceId AND r.driverId = l.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1990-12-31'\nGROUP BY d.forename, d.surname\nORDER BY earliest_lap_time ASC\nLIMIT 3;\n\n\n\t----- bird -----\tformula_1",
    "971": "\nSELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "972": "\nSELECT d.driverId, d.code\nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nWHERE d.dob = '1971-01-01' AND r.fastestLap IS NOT NULL;\n\n\n\t----- bird -----\tformula_1",
    "973": "\nSELECT d.forename, d.surname, l.time \nFROM drivers d\nJOIN results r ON d.driverId = r.driverId\nJOIN lapTimes l ON r.raceId = l.raceId AND r.driverId = l.driverId\nWHERE d.nationality = 'Spanish' AND d.dob < '1982-01-01'\nORDER BY l.position ASC \nLIMIT 10;\n\n\n\t----- bird -----\tformula_1",
    "974": "\nSELECT year FROM races JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime IS NOT NULL GROUP BY year ORDER BY MIN(results.fastestLapTime) LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "975": "\nSELECT YEAR FROM (\n    SELECT r.year, l.time, ROW_NUMBER() OVER (ORDER BY CAST(SUBSTR(l.time, 2, LENGTH(l.time) - 1) AS REAL)) AS rn\n    FROM races r\n    JOIN results res ON r.raceId = res.raceId\n    JOIN lapTimes l ON res.raceId = l.raceId AND res.driverId = l.driverId\n) sub\nWHERE rn = 1\nGROUP BY YEAR, time\nORDER BY CAST(SUBSTR(time, 2, LENGTH(time) - 1) AS REAL)\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "976": "\nSELECT driverId\nFROM lapTimes\nWHERE lap = 1\nORDER BY time ASC\nLIMIT 5;\n\n\t----- bird -----\tformula_1",
    "977": "\nSELECT COUNT(*) AS disqualified_count\nFROM results\nWHERE raceId BETWEEN 50 AND 100\nAND status = 'Disqualified';\n\n\n\t----- bird -----\tformula_1",
    "978": "\nSELECT COUNT(*), location, lat, lng FROM circuits WHERE country = 'Austria' GROUP BY location, lat, lng\n\n\t----- bird -----\tformula_1",
    "979": "\nSELECT raceId FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Finished') GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1;\n\n\t----- bird -----\tformula_1",
    "980": "\nSELECT d.driverRef, d.nationality, d.dob \nFROM drivers d \nJOIN qualifying q ON d.driverId = q.driverId \nWHERE q.raceId = 23 AND q.position <= 2;\n\n\n\t----- bird -----\tformula_1",
    "981": "\nSELECT r.year, r.name, r.date, r.time\nFROM races r\nJOIN results res ON r.raceId = res.raceId\nJOIN drivers d ON res.driverId = d.driverId\nWHERE d.dob = (\n    SELECT MIN(d2.dob)\n    FROM drivers d2\n    JOIN qualifying q ON d2.driverId = q.driverId\n    JOIN races r2 ON q.raceId = r2.raceId\n)\n\n\t----- bird -----\tformula_1",
    "982": "\nSELECT COUNT(*) FROM driverStandings WHERE nationality = 'American' AND positionText = 'Disqualified'\n\n\t----- bird -----\tformula_1",
    "983": "\nSELECT c.url AS website\nFROM constructors c\nJOIN constructorStandings cs ON c.constructorId = cs.constructorId\nWHERE c.nationality = 'Italian' AND cs.points = (\n    SELECT MAX(points) \n    FROM constructorStandings\n)\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "984": "\nSELECT constructors.url\nFROM constructorStandings\nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId\nGROUP BY constructors.constructorId\nORDER BY SUM(constructorStandings.wins) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "985": "\nSELECT d.surname, d.forename, l.time \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nJOIN races rc ON r.raceId = rc.raceId \nJOIN lapTimes l ON r.driverId = l.driverId AND r.raceId = l.raceId \nWHERE rc.name = 'French Grand Prix' AND l.lap = 3 \nORDER BY l.time ASC \nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "986": "\nSELECT t1.time, t1milliseconds FROM lapTimes AS t1 JOIN (SELECT lap, MIN(milliseconds) AS milliseconds FROM lapTimes WHERE position = 1 GROUP BY lap HAVING lap = 1) AS t2 ON t1.lap = t2.lap AND t1milliseconds = t2milliseconds\n\t----- bird -----\tformula_1",
    "987": "\nSELECT AVG(CAST(REPLACE(SUBSTR(fastestLapTime, 1, LENGTH(fastestLapTime) - 3), ':', '.') AS REAL)) AS avg_fastest_lap_time\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN driverStandings ON results.driverId = driverStandings.driverId\nWHERE races.year = 2006 AND races.name = 'United States Grand Prix' AND driverStandings.position <= 10;\n\n\t----- bird -----\tformula_1",
    "988": "\nSELECT d.forename, d.surname, AVG(psmilliseconds) AS avg_pit_stop_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31'\nGROUP BY d.driverId, d.forename, d.surname\nORDER BY avg_pit_stop_duration ASC\nLIMIT 5;\n\n\n\t----- bird -----\tformula_1",
    "989": "\nSELECT d.surname, l.time \nFROM driverStandings ds \nJOIN drivers d ON ds.driverId = d.driverId \nJOIN results r ON ds.raceId = r.raceId AND ds.driverId = r.driverId \nJOIN lapTimes l ON r.raceId = l.raceId AND r.driverId = l.driverId \nWHERE ds.year = 2008 AND ds.raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' AND year = 2008) \nORDER BY ds.points DESC, l.position ASC \nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "990": "\nSELECT constructors.constructorRef, constructors.url \nFROM constructorStandings \nJOIN races ON constructorStandings.raceId = races.raceId \nJOIN constructors ON constructorStandings.constructorId = constructors.constructorId \nWHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND constructorStandings.position = 1;\n\n\n\t----- bird -----\tformula_1",
    "991": "\nSELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\n\n\t----- bird -----\tformula_1",
    "992": "\nSELECT d.forename, d.surname, d.url, d.dob \nFROM drivers d \nWHERE d.nationality = 'German' AND d.dob BETWEEN '1971-01-01' AND '1985-12-31' \nORDER BY d.dob DESC;\n\n\n\t----- bird -----\tformula_1",
    "993": "\nSELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring'\n\n\t----- bird -----\tformula_1",
    "994": "\nSELECT c.points, c.name, c.nationality\nFROM constructorStandings cs\nJOIN constructors c ON cs.constructorId = c.constructorId\nJOIN races r ON cs.raceId = r.raceId\nWHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010\nORDER BY cs.points DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "995": "\nSELECT AVG(results.points) AS average_points\nFROM results\nJOIN races ON results.raceId = races.raceId\nJOIN drivers ON results.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton' AND races.circuitId IN (\n    SELECT circuitId \n    FROM circuits \n    WHERE country = 'Turkey'\n);\n\n\n\t----- bird -----\tformula_1",
    "996": "\nSELECT AVG(COUNT(r.raceId)) AS avg_races\nFROM (\n    SELECT COUNT(*) \n    FROM races r\n    WHERE r.year BETWEEN 2001 AND 2010\n) subquery\nGROUP BY YEAR(subquery.COUNT(*))\n\n\t----- bird -----\tformula_1",
    "997": "\nSELECT MAX(nationality) AS citizenship_of_majority_drivers FROM drivers\n\n\t----- bird -----\tformula_1",
    "998": "\nSELECT COUNT(*) AS victories \nFROM driverStandings \nWHERE position = 91 AND positionText = '91st' AND points > 0;\n\n\n\t----- bird -----\tformula_1",
    "999": "\nSELECT races.name\nFROM results\nJOIN races ON results.raceId = races.raceId\nWHERE results.fastestLapTime = (\n    SELECT MIN(fastestLapTime)\n    FROM results\n)\n\n\t----- bird -----\tformula_1",
    "1000": "\nSELECT circuits.name, circuits.location, circuits.country \nFROM races JOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.date = (SELECT MAX(date) FROM races)\nFOR UPDATE;\n\n\n\t----- bird -----\tformula_1",
    "1001": "\nSELECT d.forename || ' ' || d.surname AS fullName\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Marina Bay Street Circuit' AND r.year = 2008 AND q.position = 1;\n\n\n\t----- bird -----\tformula_1",
    "1002": "\nSELECT d.forename, d.surname, d.nationality, r.name AS race_name\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(d2.dob) FROM drivers d2)\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "1003": "\nSELECT COUNT(*) \nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nWHERE ra.name = 'Canadian Grand Prix' AND r.statusId = 3\nGROUP BY r.driverId\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "1004": "\nSELECT d.forename, d.surname, COUNT(r.wins) AS wins\nFROM drivers d\nJOIN driverStandings r ON d.driverId = r.driverId\nWHERE d.dob = (SELECT MIN(dob) FROM drivers)\nGROUP BY d.driverId\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1005": "\nSELECT MAX(milliseconds) AS longest_pit_stop_time FROM pitStops\n\n\t----- bird -----\tformula_1",
    "1006": "\nSELECT MIN(time) AS fastest_lap_time\nFROM lapTimes\nWHERE time IS NOT NULL\n\n\t----- bird -----\tformula_1",
    "1007": "\nSELECT MAX(T2.duration) AS LongestPitStopTime\nFROM drivers AS T1\nJOIN pitStops AS T2 ON T1.driverId = T2.driverId\nWHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'\nGROUP BY T1.driverId\nORDER BY LongestPitStopTime DESC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "1008": "\nSELECT lap FROM pitStops WHERE driverId = (SELECT driverId FROM drivers WHERE surname = 'Hamilton' AND forename = 'Lewis') AND raceId = (SELECT raceId FROM races WHERE year = 2011 AND name = 'Australian Grand Prix');\n\n\n\t----- bird -----\tformula_1",
    "1009": "\nSELECT d.surname, p.time, p.duration, pmilliseconds \nFROM drivers d \nJOIN pitStops p ON d.driverId = p.driverId \nJOIN races r ON p.raceId = r.raceId \nWHERE r.year = 2011 AND r.name = 'Australian Grand Prix';\n\n\n\t----- bird -----\tformula_1",
    "1010": "\nSELECT MIN(time) AS lap_record_time, d.surname || ', ' || d.forename AS driver_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE d.surname = 'Hamilton' AND d.forename = 'Lewis'\nGROUP BY driver_name\nORDER BY lap_record_time;\n\n\n\t----- bird -----\tformula_1",
    "1011": "\nSELECT d.forename, d.surname\nFROM drivers d\nJOIN lapTimes lt ON d.driverId = lt.driverId\nWHERE lt.time = (SELECT MIN(time) FROM lapTimes)\n\n\t----- bird -----\tformula_1",
    "1012": "\nSELECT c.position\nFROM circuits c\nJOIN (\n    SELECT r.laps, r.position, r.raceId, d.driverId\n    FROM results r\n    JOIN drivers d ON r.driverId = d.driverId\n    WHERE d.surname = 'Hamilton' AND d.forename = 'Lewis'\n) h ON c.circuitId = (SELECT q.circuitId FROM races r JOIN qualifying q ON r.raceId = q.raceId WHERE r.raceId = h.raceId ORDER BY q.laps DESC, q.position DESC LIMIT 1)\nSQL_END\n\n\t----- bird -----\tformula_1",
    "1013": "\nSELECT MIN(milliseconds) AS lap_record\nFROM lapTimes lt\nJOIN circuits c ON lt.circuitId = c.circuitId\nWHERE c.name = 'Austrian Grand Prix'\nGROUP BY lt.lap\nORDER BY lap_record ASC\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1014": "\nSELECT l.circuitId, c.name, l.lap, l.time \nFROM lapTimes l \nJOIN races r ON l.raceId = r.raceId \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE c.country = 'Italy';\n\n\n\t----- bird -----\tformula_1",
    "1015": "\nSELECT q.raceId, r.circuitId, c.name, r.name AS race_name\nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.name = 'Austrian Grand Prix' AND q.position = 1\nLIMIT 1;\n\n\t----- bird -----\tformula_1",
    "1016": "\nSELECT p.time, p.duration, pmilliseconds \nFROM pitStops p\nJOIN races r ON p.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nJOIN results res ON p.driverId = res.driverId AND p.raceId = res.raceId\nWHERE c.country = 'Austria' AND r.name = 'Austrian Grand Prix'\nORDER BY p.lap ASC\nLIMIT 1;\n\n\n\t----- bird -----\tformula_1",
    "1017": "\nSELECT location, lat, lng FROM circuits WHERE circuitId IN (SELECT raceId FROM lapTimes WHERE time = '1:29.488')\n\n\t----- bird -----\tformula_1",
    "1018": "\nSELECT AVG(milliseconds) AS avg_pit_stop_time_ms\nFROM pitStops\nJOIN drivers ON pitStops.driverId = drivers.driverId\nWHERE drivers.surname = 'Hamilton';\n\n\t----- bird -----\tformula_1",
    "1019": "\nSELECT AVG(milliseconds) AS average_lap_time_ms\nFROM lapTimes\nJOIN circuits ON lapTimes.raceId = races.raceId\nWHERE circuits.country = 'Italy';\n\n\t----- bird -----\tformula_1",
    "1020": "\nSELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1021": "\nSELECT height, player_name FROM Player ORDER BY height DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1022": "\nSELECT preferred_foot\nFROM Player_Attributes\nWHERE potential = (\n    SELECT MIN(potential)\n    FROM Player_Attributes\n)\n\n\t----- bird -----\teuropean_football_2",
    "1023": "\nSELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Match m ON pa.player_api_id IN (\n    m.home_player_1, m.home_player_2, m.home_player_3, m.home_player_4, m.home_player_5,\n    m.home_player_6, m.home_player_7, m.home_player_8, m.home_player_9, m.home_player_10, m.home_player_11,\n    m.away_player_1, m.away_player_2, m.away_player_3, m.away_player_4, m.away_player_5,\n    m.away_player_6, m.away_player_7, m.away_player_8, m.away_player_9, m.away_player_10, m.away_player_11\n)\nWHERE pa.overall_rating BETWEEN 60 AND 65\nAND pa.player_api_id IN (\n    m.home_player_X1, m.home_player_X2, m.home_player_X3, m.home_player_X4, m.home_player_X5,\n    m.home_player_X6, m.home_player_X7, m.home_player_X8, m.home_player_X9, m.home_player_X10, m.home_player_X11\n);\n\n\n\t----- bird -----\teuropean_football_2",
    "1024": "\nSELECT player_api_id\nFROM Player_Attributes\nORDER BY crossing DESC\nLIMIT 5;\n\n\t----- bird -----\teuropean_football_2",
    "1025": "\nSELECT l.name AS league_name\nFROM Match m\nJOIN Team t ON m.home_team_api_id = t.team_api_id OR m.away_team_api_id = t.team_api_id\nJOIN League l ON t.league_id = l.id\nWHERE m.season = '2016'\nGROUP BY l.name\nORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1026": "\n\nSELECT T.team_long_name\nFROM Team T\nJOIN Match M ON T.team_api_id = M.home_team_api_id\nWHERE M.season = '2016'\nGROUP BY T.team_long_name\nORDER BY COUNT(CASE WHEN M.away_team_goal > M.home_team_goal THEN 1 END) ASC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1027": "\nSELECT p.player_name, COUNT(pa.penalties) AS total_penalties\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nGROUP BY p.player_api_id, p.player_name\nORDER BY total_penalties DESC\nLIMIT 10;\n\n\n\t----- bird -----\teuropean_football_2",
    "1028": "\n\nSELECT T.team_long_name\nFROM Team T\nJOIN Match M ON T.team_api_id = M.away_team_api_id\nJOIN League L ON M.league_id = L.id\nWHERE L.name = 'Premier League' AND L.country_id = (SELECT id FROM Country WHERE name = 'Scotland') AND M.season = '2010/2011'\nGROUP BY T.team_long_name\nORDER BY COUNT(CASE WHEN M.away_team_goal > M.home_team_goal THEN 1 END) DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1029": "\nSELECT ta.buildUpPlaySpeed, t.team_long_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nORDER BY ta.buildUpPlaySpeed DESC\nLIMIT 4\n\n\t----- bird -----\teuropean_football_2",
    "1030": "\n\nSELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2016'\nGROUP BY L.name\nORDER BY SUM(CASE WHEN M.away_team_goal = M.home_team_goal THEN 1 ELSE 0 END) DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1031": "\nSELECT P.player_name, J.extract('year from P.birthday') - J.extract('year from CURRENT_DATE') AS age\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01' AND '2015-12-31'\nLIMIT 100;\n\n\n\t----- bird -----\teuropean_football_2",
    "1032": "\nSELECT L.name, COUNT(M.id) AS matches_played\nFROM League L\nJOIN Match M ON L.id = M.league_id\nGROUP BY L.id\nORDER BY matches_played DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1033": "\nSELECT AVG(weight) AS average_height\nFROM Player\nWHERE birthday BETWEEN '1990-01-01' AND '1995-12-31'\nGROUP BY EXTRACT(YEAR FROM DATE_PART('epoch', AGE(birthday))::integer)\nHAVING COUNT(*) > 0;\n\n\t----- bird -----\teuropean_football_2",
    "1034": "\nSELECT player_api_id\nFROM Player_Attributes\nWHERE overall_rating > (SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010-%')\nAND date LIKE '2010-%'\nGROUP BY player_api_id;\n\n\n\t----- bird -----\teuropean_football_2",
    "1035": "\nSELECT team_fifa_api_id\nFROM Team_Attributes\nWHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\n\n\t----- bird -----\teuropean_football_2",
    "1036": "\nSELECT team_long_name \nFROM Team \nJOIN Team_Attributes ta ON Team.team_fifa_api_id = ta.team_fifa_api_id \nWHERE ta.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE date LIKE '2012-%');\n\n\n\t----- bird -----\teuropean_football_2",
    "1037": "\nSELECT \nCAST(SUM(CASE WHEN preferred_foot = 'Left' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*)\nFROM Player_Attributes\nWHERE player_fifa_api_id IN (\n    SELECT player_fifa_api_id\n    FROM Player\n    WHERE birthday BETWEEN '1987-01-01' AND '1992-12-31'\n)\n\n\t----- bird -----\teuropean_football_2",
    "1038": "\nSELECT L.name, SUM(M.home_team_goal + M.away_team_goal) AS total_goals\nFROM League L\nJOIN Country C ON L.country_id = C.id\nJOIN Team T ON C.id = T.country_id\nJOIN Match M ON T.team_api_id = M.home_team_api_id OR T.team_api_id = M.away_team_api_id\nGROUP BY L.name\nORDER BY total_goals ASC\nLIMIT 5;\n\n\t----- bird -----\teuropean_football_2",
    "1039": "\nSELECT AVG(long_shots) AS average_long_shots\nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE P.player_name = 'Ahmed Samir Farag';\n\n\n\t----- bird -----\teuropean_football_2",
    "1040": "\nSELECT p.player_name, AVG(pa.heading_accuracy) AS avg_heading_accuracy\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.height > 180\nGROUP BY p.player_api_id, p.player_name\nORDER BY avg_heading_accuracy DESC\nLIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1041": "\n\nSELECT T.team_long_name \nFROM Team_Attributes TA\nJOIN Team T ON TA.team_fifa_api_id = T.team_fifa_api_id\nWHERE TA.buildUpPlayDribblingClass = 'Normal' AND strftime('%Y', TA.date) = '2014'\nAND (SELECT AVG(TA.chanceCreationPassing) FROM Team_Attributes TA WHERE strftime('%Y', TA.date) = '2014') > TA.chanceCreationPassing\nORDER BY TA.chanceCreationPassing DESC;\n\n\n\t----- bird -----\teuropean_football_2",
    "1042": "\nSELECT L.name\nFROM League L\nJOIN Country C ON L.country_id = C.id\nJOIN Team T ON C.id = T.country_id\nJOIN Match M ON T.team_api_id = M.home_team_api_id\nJOIN Player_Attributes PA ON M.home_player_11 = PA.player_api_id\nWHERE M.season = '2009/2010'\nGROUP BY L.name\nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal)\n\n\t----- bird -----\teuropean_football_2",
    "1043": "\nSELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\n\n\t----- bird -----\teuropean_football_2",
    "1044": "\nSELECT p.player_name\nFROM Player p\nWHERE strftime('%Y', p.birthday) = '1970' AND strftime('%m', p.birthday) = '10';\n\n\n\t----- bird -----\teuropean_football_2",
    "1045": "\nSELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Franco Zennaro');\n\n\t----- bird -----\teuropean_football_2",
    "1046": "\nSELECT ta.buildUpPlayDribbling \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id_api\nWHERE t.team_long_name = 'ADO Den Haag' AND ta.date = (\n    SELECT MAX(m.date) \n    FROM Match m \n    JOIN Team t1 ON m.home_team_api_id = t1.team_api_id OR m.away_team_api_id = t1.team_api_id\n    WHERE t1.team_long_name = 'ADO Den Haag'\n)\nAND ta.buildUpPlayDribblingClass LIKE '%2/3%';\n\n\n\t----- bird -----\teuropean_football_2",
    "1047": "\nSELECT pa.header AS finishing_rate\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Francois Affolter' AND pa.date = '18/09/2014';\n\n\n\t----- bird -----\teuropean_football_2",
    "1048": "\nSELECT overall_rating \nFROM Player_Attributes \nWHERE player_api_id = (\n    SELECT id \n    FROM Player \n    WHERE player_name = 'Gabriel Tamas'\n) AND date LIKE '2011-%';\n\n\n\t----- bird -----\teuropean_football_2",
    "1049": "\nSELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id JOIN Country C ON L.country_id = C.id WHERE M.season = '2015/2016' AND C.name = 'Scotland Premier League'\n\n\t----- bird -----\teuropean_football_2",
    "1050": "\nSELECT preferred_foot\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE date = (SELECT MAX(date) FROM Player_Attributes WHERE player_api_id = p.player_api_id)\nORDER BY birthday ASC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1051": "\nSELECT pa.player_name, pa.potential \nFROM Player_Attributes pa \nWHERE pa.potential = (SELECT MAX(potential) FROM Player_Attributes)\n\n\n\t----- bird -----\teuropean_football_2",
    "1052": "\nSELECT COUNT(*) FROM Player WHERE weight < 130 AND preferred_foot = 'Left'\n\n\t----- bird -----\teuropean_football_2",
    "1053": "\nSELECT DISTINCT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_api_id = t.id\nWHERE ta.chanceCreationPassingClass = 'Risky'\n\n\t----- bird -----\teuropean_football_2",
    "1054": "\nSELECT defensive_work_rate \nFROM Player_Attributes PA\nJOIN Player P ON PA.player_api_id = P.player_api_id\nWHERE P.player_name = 'David Wilson'\n\n\t----- bird -----\teuropean_football_2",
    "1055": "\nSELECT T2.birthday\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T1.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\n\n\t----- bird -----\teuropean_football_2",
    "1056": "\nSELECT L.name\nFROM League L\nJOIN Country C ON L.country_id = C.id\nWHERE C.name = 'Netherlands'\n\n\t----- bird -----\teuropean_football_2",
    "1057": "\nSELECT AVG(home_team_goal) AS average_home_team_goal\nFROM Match\nJOIN League ON Match.league_id = League.id\nJOIN Country ON League.country_id = Country.id\nWHERE Season LIKE '2010/2011' AND Country.name = 'Poland';\n\n\t----- bird -----\teuropean_football_2",
    "1058": "\nSELECT p.player_name, AVG(pa.finishing) AS avg_finishing_rate\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.id IN (\n    SELECT id FROM Player ORDER BY height DESC LIMIT 1\n)\nAND p.id IN (\n    SELECT id FROM Player ORDER BY height ASC LIMIT 1\n)\nGROUP BY p.player_name\nORDER BY avg_finishing_rate DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1059": "\nSELECT p.player_name FROM Player p WHERE p.height > 180 \n\t----- bird -----\teuropean_football_2",
    "1060": "\nSELECT COUNT(*) FROM Player WHERE birthday > '1990-12-31'\n\n\t----- bird -----\teuropean_football_2",
    "1061": "\nSELECT COUNT(*)\nFROM Player\nWHERE player_name LIKE 'Adam%' AND weight > 170;\n\n\n\t----- bird -----\teuropean_football_2",
    "1062": "\nSELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.overall_rating > 80 AND pa.date BETWEEN '2008-01-01' AND '2010-12-31';\n\n\n\t----- bird -----\teuropean_football_2",
    "1063": "\nSELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran')\n\n\t----- bird -----\teuropean_football_2",
    "1064": "\nSELECT p.player_name\nFROM Player p\nWHERE p.preferred_foot = 'Left';\n\n\n\t----- bird -----\teuropean_football_2",
    "1065": "\nSELECT DISTINCT t.team_long_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE ta.buildUpPlaySpeedClass = 'Fast'\n\n\t----- bird -----\teuropean_football_2",
    "1066": "\nSELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT id FROM Team WHERE team_long_name = 'CLB')\n\n\t----- bird -----\teuropean_football_2",
    "1067": "\nSELECT DISTINCT t.team_short_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE ta.buildUpPlayPassing > 70\n\n\t----- bird -----\teuropean_football_2",
    "1068": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', date) BETWEEN '2010' AND '2015'\nAND height > 170;\n\n\n\t----- bird -----\teuropean_football_2",
    "1069": "\nSELECT player_name FROM Player ORDER BY height ASC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1070": "\nSELECT C.name FROM Country C JOIN League L ON C.id = L.country_id WHERE L.name = 'Italy Serie A'\n\n\t----- bird -----\teuropean_football_2",
    "1071": "\n\nSELECT DISTINCT t.team_short_name \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE ta.buildUpPlaySpeed = 31 AND ta.buildUpPlayDribbling = 53 AND ta.buildUpPlayPassing = 32;\n\n\n\t----- bird -----\teuropean_football_2",
    "1072": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Aaron Doran'\nGROUP BY p.player_api_id;\n\n\t----- bird -----\teuropean_football_2",
    "1073": "\nSELECT COUNT(*) AS match_count\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = '1. Bundesliga' AND m.country_id = (SELECT id FROM Country WHERE name = 'Germany') AND m.date BETWEEN '2008-08-01' AND '2008-10-31'\n\n\t----- bird -----\teuropean_football_2",
    "1074": "\nSELECT DISTINCT t.team_short_name \nFROM Team t \nJOIN Match m ON t.id = m.home_team_api_id \nWHERE m.home_team_goal = 10;\n\n\n\t----- bird -----\teuropean_football_2",
    "1075": "\nSELECT pa.player_name, pa.balance, pa.potential\nFROM Player_Attributes pa\nWHERE pa.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61)\nAND pa.potential = 61;\n\n\n\t----- bird -----\teuropean_football_2",
    "1076": "\nSELECT AVG(pa.ball_control) - (\n    SELECT AVG(pa2.ball_control)\n    FROM Player p2\n    JOIN Player_Attributes pa2 ON p2.player_api_id = pa2.player_api_id\n    WHERE p2.player_name = 'Aaron Appindangoye'\n) AS ball_control_difference\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE p.player_name = 'Abdou Diallo';\n\n\n\t----- bird -----\teuropean_football_2",
    "1077": "\nSELECT team_long_name FROM Team WHERE team_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'GEN');\n\n\t----- bird -----\teuropean_football_2",
    "1078": "\nSELECT player_name \nFROM Player \nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') \nORDER BY birthday ASC \nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1079": "\nSELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1080": "\nSELECT COUNT(DISTINCT pa.player_api_id)\nFROM Player_Attributes pa\nJOIN Team_Attributes ta ON pa.player_fifa_api_id = (\n    SELECT team_fifa_api_id\n    FROM Team\n    WHERE id IN (\n        SELECT home_team_api_id\n        FROM Match\n        UNION ALL\n        SELECT away_team_api_id\n        FROM Match\n    )\n)\nWHERE pa.preferred_foot = 'Left' AND pa.attacking_work_rate = 'Left'\n\n\t----- bird -----\teuropean_football_2",
    "1081": "\nSELECT C.name FROM Country C JOIN League L ON C.id = L.country_id WHERE L.name = 'Belgium Jupiler League'\n\n\t----- bird -----\teuropean_football_2",
    "1082": "\nSELECT DISTINCT l.name \nFROM League l \nJOIN Country c ON l.country_id = c.id \nWHERE c.name = 'Germany'\n\n\t----- bird -----\teuropean_football_2",
    "1083": "\nSELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes ORDER BY strength DESC LIMIT 1)\n\n\t----- bird -----\teuropean_football_2",
    "1084": "\nSELECT COUNT(DISTINCT p.player_api_id)\nFROM Player p\nJOIN Team_Attributes ta ON p.player_fifa_api_id = (\n    SELECT pa.player_fifa_api_id\n    FROM Player_Attributes pa\n    WHERE pa.player_api_id = p.player_api_id AND pa.date = (\n        SELECT MAX(pa2.date)\n        FROM Player_Attributes pa2\n        WHERE pa2.player_api_id = p.player_api_id AND strftime('%Y', pa2.date) < '1986'\n    )\n)\nJOIN Match m ON ta.team_fifa_api_id IN (m.home_team_api_id, m.away_team_api_id)\nWHERE strftime('%Y', p.birthday) < '1986' AND (\n    ta.buildUpPlaySpeedClass = 'Low' OR \n    ta.buildUpPlayDribblingClass = 'Low' OR\n    ta.buildUpPlayPassingClass = 'Low'\n) AND (\n    ta.chanceCreationPassingClass = 'High' OR\n    ta.chanceCreationCrossingClass = 'High' OR\n    ta.chanceCreationShootingClass = 'High'\n)\n\n\t----- bird -----\teuropean_football_2",
    "1085": "\nSELECT player_name, MAX(crossing) AS best_crossing\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\nGROUP BY player_name\nORDER BY best_crossing DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1086": "\nSELECT pa.heading_accuracy \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.player_name = 'Ariel Borysiuk';\n\n\n\t----- bird -----\teuropean_football_2",
    "1087": "\nSELECT COUNT(*) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.volleys > 70 AND P.height > 180\n\n\t----- bird -----\teuropean_football_2",
    "1088": "\nSELECT p.player_name \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE pa.volleys > 70 AND pa.dribbling > 70;\n\n\n\t----- bird -----\teuropean_football_2",
    "1089": "\nSELECT COUNT(*) FROM Match M JOIN League L ON M.league_id = L.id JOIN Country C ON L.country_id = C.id WHERE M.season = '2008/2009' AND C.name = 'Belgium'\n\n\t----- bird -----\teuropean_football_2",
    "1090": "\nSELECT MAX(birthday), long_passing FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id GROUP BY long_passing LIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1091": "\nSELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id JOIN Country ON League.country_id = Country.id WHERE League.name = 'Jupiler League' AND MONTH(Match.date) = 4 AND YEAR(Match.date) = 2009 AND Country.name = 'Belgium'\n\n\t----- bird -----\teuropean_football_2",
    "1092": "\nSELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2008/2009'\nGROUP BY L.name\nORDER BY COUNT(M.id) DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1093": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', p.birthday) < '1986'\n\n\t----- bird -----\teuropean_football_2",
    "1094": "\nSELECT CAST((p1.overall_rating - p2.overall_rating) AS REAL) * 100 / GREATEST(p1.overall_rating, p2.overall_rating) AS rating_difference_percentage\nFROM Player_Attributes p1\nJOIN Player pl1 ON p1.player_api_id = pl1.player_api_id\nJOIN (\n    SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk'\n) subq1 ON p1.player_api_id = subq1.player_api_id\nJOIN Player_Attributes p2\nJOIN Player pl2 ON p2.player_api_id = pl2.player_api_id\nJOIN (\n    SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'\n) subq2 ON p2.player_api_id = subq2.player_api_id\n\n\t----- bird -----\teuropean_football_2",
    "1095": "\nSELECT AVG(buildUpPlaySpeed) AS average_build_up_play_speed\nFROM Team_Attributes\nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id\nWHERE Team.team_long_name = 'Heart of Midlothian';\n\n\t----- bird -----\teuropean_football_2",
    "1096": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Pietro Marino';\n\n\t----- bird -----\teuropean_football_2",
    "1097": "\nSELECT SUM(T2.crossing) AS total_crossing_score\nFROM Player AS T1\nJOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\nWHERE T1.player_name = 'Aaron Lennox'\nGROUP BY T1.player_api_id;\n\n\t----- bird -----\teuropean_football_2",
    "1098": "\nSELECT buildUpPlayPassing, buildUpPlayPassingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE Team.team_long_name = 'Ajax';\n\n\n\t----- bird -----\teuropean_football_2",
    "1099": "\nSELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo');\n\n\t----- bird -----\teuropean_football_2",
    "1100": "\nSELECT MAX(overall_rating) AS highest_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE p.player_name = 'Dorlan Pabon';\n\n\n\t----- bird -----\teuropean_football_2",
    "1101": "\nSELECT AVG(away_team_goal) AS average_goals\nFROM Match\nJOIN Team ON Match.away_team_api_id = Team.team_api_id\nJOIN League ON Team.league_id = League.id\nJOIN Country ON League.country_id = Country.id\nWHERE Team.team_long_name = 'Parma' AND Country.name = 'Italy'\n\n\t----- bird -----\teuropean_football_2",
    "1102": "\nSELECT p.player_name\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.date = '2016-06-23' AND pa.overall_rating = 77\nORDER BY p.birthday ASC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1103": "\nSELECT overall_rating \nFROM Player_Attributes \nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE player_name = 'Aaron Mooy' AND date = '2016-02-04';\n\n\n\t----- bird -----\teuropean_football_2",
    "1104": "\nSELECT potential FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini') AND date = '2010-08-30';\n\n\t----- bird -----\teuropean_football_2",
    "1105": "\nSELECT attacking_work_rate \nFROM Player_Attributes \nJOIN Player ON Player_Attributes.player_api_id = Player.player_api_id \nWHERE player_name = 'Francesco Migliore' AND date = '2015-05-01'\n\n\t----- bird -----\teuropean_football_2",
    "1106": "\nSELECT p.defensive_work_rate \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Kevin Berigaud' AND pa.date = '2013-02-22';\n\n\n\t----- bird -----\teuropean_football_2",
    "1107": "\nSELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1108": "\nSELECT buildUpPlaySpeedClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id\nWHERE team_long_name = 'Willem II' AND date = '2011-02-22'\n\n\t----- bird -----\teuropean_football_2",
    "1109": "\nSELECT buildUpPlayDribblingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE team_short_name = 'LEI' AND date = '2015-09-10'\n\n\t----- bird -----\teuropean_football_2",
    "1110": "\nSELECT ta.buildUpPlayPassingClass \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nJOIN Match m ON t.id = m.home_team_api_id AND m.date = '2010-02-22'\nWHERE t.team_long_name = 'FC Lorient'\n\n\t----- bird -----\teuropean_football_2",
    "1111": "\nSELECT tc.buildUpPlayPassingClass \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nJOIN Match m ON t.id = m.home_team_api_id AND m.date = '2013-09-20'\nWHERE t.team_long_name = 'PEC Zwolle'\n\n\t----- bird -----\teuropean_football_2",
    "1112": "\nSELECT chanceCreationCrossingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_api_id = Team.team_api_id \nWHERE team_long_name = 'Hull City' AND date = '2010-02-22'\n\n\t----- bird -----\teuropean_football_2",
    "1113": "\nSELECT ta.defenceAggressionClass \nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE t.team_long_name = 'Hannover 96' AND ta.date = '2015-09-10';\n\n\n\t----- bird -----\teuropean_football_2",
    "1114": "\nSELECT AVG(overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21';\n\n\n\t----- bird -----\teuropean_football_2",
    "1115": "\nSELECT \n    100 * (p1.overall_rating - p2.overall_rating) / p2.overall_rating AS rating_difference_percentage\nFROM \n    Player_Attributes p1\nJOIN \n    Player_attributes p2 ON 'Jordan Bowery' = (SELECT player_name FROM Player WHERE id = (SELECT player_api_id FROM Player_Attributes WHERE player_fifa_api_id = p1.player_fifa_api_id AND date = '2013-07-12'))\nWHERE \n    p1.player_name = 'Landon Donovan' AND p1.date = '2013-07-12';\n\n\n\t----- bird -----\teuropean_football_2",
    "1116": "\nSELECT player_name FROM Player ORDER BY height DESC LIMIT 5;\n\n\t----- bird -----\teuropean_football_2",
    "1117": "\nSELECT player_api_id\nFROM Player\nORDER BY weight DESC\nLIMIT 10;\n\n\t----- bird -----\teuropean_football_2",
    "1118": "\nSELECT Player.player_name \nFROM Player \nWHERE Player.birthday <= DATEADD(year, -35, GETDATE());\n\n\n\t----- bird -----\teuropean_football_2",
    "1119": "\nSELECT COUNT(home_team_goal) AS home_goals_scored\nFROM Match m\nJOIN Player p ON m.home_player_1 = p.player_api_id OR m.home_player_2 = p.player_api_id OR m.home_player_3 = p.player_api_id OR m.home_player_4 = p.player_api_id OR m.home_player_5 = p.player_api_id OR m.home_player_6 = p.player_api_id OR m.home_player_7 = p.player_api_id OR m.home_player_8 = p.player_api_id OR m.home_player_9 = p.player_api_id OR m.home_player_10 = p.player_api_id OR m.home_player_11 = p.player_api_id\nWHERE p.player_name = 'Aaron Lennon';\nSQL_END\n\n\t----- bird -----\teuropean_football_2",
    "1120": "\nSELECT SUM(TA.away_team_goal) \nFROM Match M\nJOIN Player P1 ON M.away_player_1 = P1.player_api_id OR M.away_player_2 = P1.player_api_id OR M.away_player_3 = P1.player_api_id OR M.away_player_4 = P1.player_api_id OR M.away_player_5 = P1.player_api_id OR M.away_player_6 = P1.player_api_id OR M.away_player_7 = P1.player_api_id OR M.away_player_8 = P1.player_api_id OR M.away_player_9 = P1.player_api_id OR M.away_player_10 = P1.player_api_id OR M.away_player_11 = P1.player_api_id\nJOIN Player P2 ON M.away_player_1 = P2.player_api_id OR M.away_player_2 = P2.player_api_id OR M.away_player_3 = P2.player_api_id OR M.away_player_4 = P2.player_api_id OR M.away_player_5 = P2.player_api_id OR M.away_player_6 = P2.player_api_id OR M.away_player_7 = P2.player_api_id OR M.away_player_8 = P2.player_api_id OR M.away_player_9 = P2.player_api_id OR M.away_player_10 = P2.player_api_id OR M.away_player_11 = P2.player_api_id\nJOIN Player_Attributes PA1 ON P1.id = PA1.player_fifa_api_id AND PA1.date = (SELECT MAX(PA2.date) FROM Player_Attributes PA2 WHERE PA2.player_fifa_api_id = P1.player_fifa_api_id)\nJOIN Player_Attributes PA2 ON P2.id = PA2.player_fifa_api_id AND PA2.date = (SELECT MAX(PA3.date) FROM Player_Attributes PA3 WHERE PA3.player_fifa_api_id = P2.player_fifa_api_id)\nWHERE (P1.first_name = 'Daan' AND P1.last_name = 'Smith') OR (P2.first_name = 'Filipe' AND P2.last_name = 'Ferreira')\nGROUP BY M.id;\n\n\n\t----- bird -----\teuropean_football_2",
    "1121": "\nSELECT SUM(home_team_goal) AS total_home_goals\nFROM Match\nJOIN Player ON Match.home_player_1 = Player.player_api_id OR Match.home_player_2 = Player.player_api_id OR Match.home_player_3 = Player.player_api_id OR Match.home_player_4 = Player.player_api_id OR Match.home_player_5 = Player.player_api_id OR Match.home_player_6 = Player.player_api_id OR Match.home_player_7 = Player.player_api_id OR Match.home_player_8 = Player.player_api_id OR Match.home_player_9 = Player.player_api_id OR Match.home_player_10 = Player.player_api_id OR Match.home_player_11 = Player.player_api_id\nWHERE DATE_TRUNC('year', AGE(Player.birthday)) <= 30;\n\n\n\t----- bird -----\teuropean_football_2",
    "1122": "\nSELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 10) \n\t----- bird -----\teuropean_football_2",
    "1123": "\nSELECT Player.player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE Player_Attributes.potential = (SELECT MAX(potential) FROM Player_Attributes)\nGROUP BY Player.player_name;\n\n\t----- bird -----\teuropean_football_2",
    "1124": "\nSELECT P.player_name\nFROM Player P\nJOIN Match M ON P.player_api_id = M.home_player_1 OR P.player_api_id = M.home_player_2 OR P.player_api_id = M.home_player_3 OR P.player_api_id = M.home_player_4 OR P.player_api_id = M.home_player_5 OR P.player_api_id = M.home_player_6 OR P.player_api_id = M.home_player_7 OR P.player_api_id = M.home_player_8 OR P.player_api_id = M.home_player_9 OR P.player_api_id = M.home_player_10 OR P.player_api_id = M.home_player_11\nWHERE M.chanceCreationPassingClass = 'High' OR M.chanceCreationCrossingClass = 'High' OR M.chanceCreationShootingClass = 'High'\n\n\t----- bird -----\teuropean_football_2",
    "1125": "\nSELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.finishing = 1\nORDER BY p.birthday ASC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1126": "\nSELECT Player.player_name\nFROM Player\nJOIN Country ON Player.country_id = Country.id\nWHERE Country.name = 'Belgium';\n\n\t----- bird -----\teuropean_football_2",
    "1127": "\nSELECT DISTINCT c.name AS country_name, p.player_name\nFROM Player p\nJOIN Country c ON p.player_fifa_api_id = c.id\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.vision >= 90\n\n\t----- bird -----\teuropean_football_2",
    "1128": "\nSELECT C.name, AVG(P.weight) AS avg_weight\nFROM Player P\nJOIN Country C ON P.player_fifa_api_id = C.id\nGROUP BY C.name\nORDER BY avg_weight DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1129": "\nSELECT DISTINCT ta.team_long_name\nFROM Team_Attributes ta\nJOIN Team t ON ta.team_fifa_api_id = t.team_fifa_api_id\nWHERE ta.buildUpPlaySpeedClass = 'SLOW'\n\n\t----- bird -----\teuropean_football_2",
    "1130": "\nSELECT DISTINCT t.team_short_name\nFROM Team t\nJOIN Team_Attributes ta ON t.team_fifa_api_id = ta.team_fifa_api_id\nWHERE ta.chanceCreationPassingClass = 'Safe'\n\n\t----- bird -----\teuropean_football_2",
    "1131": "\nSELECT AVG(p.height) AS average_height\nFROM Player p\nJOIN Country c ON p.player_fifa_api_id = c.id\nWHERE c.name = 'Italy';\n\n\n\t----- bird -----\teuropean_football_2",
    "1132": "\nSELECT p.player_name \nFROM Player p\nWHERE p.height > 180\nORDER BY p.player_name ASC\nLIMIT 3;\n\n\n\t----- bird -----\teuropean_football_2",
    "1133": "\nSELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-01-01'\n\n\t----- bird -----\teuropean_football_2",
    "1134": "\nSELECT (pa23.jumping - pa6.jumping) AS jumping_difference\nFROM Player_Attributes pa23, Player_Attributes pa6\nWHERE pa23.player_api_id = 23 AND pa6.player_api_id = 6;\n\n\t----- bird -----\teuropean_football_2",
    "1135": "\nSELECT player_api_id\nFROM Player_Attributes\nWHERE preferred_foot = 'right' AND attacking_work_rate = 'Right'\nORDER BY potential ASC\nLIMIT 3;\n\n\t----- bird -----\teuropean_football_2",
    "1136": "\nSELECT COUNT(*)\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE pa.crossing = (\n    SELECT MAX(crossing) \n    FROM Player_Attributes\n) AND pa.preferred_foot = 'Left' AND pa.attacking_work_rate = 'Left'\n\n\t----- bird -----\teuropean_football_2",
    "1137": "\nSELECT CAST(SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) FROM Player_Attributes \n\t----- bird -----\teuropean_football_2",
    "1138": "\nSELECT C.name AS country_name\nFROM Country C\nJOIN League L ON C.id = L.country_id\nWHERE L.name = 'Poland Ekstraklasa';\n\n\n\t----- bird -----\teuropean_football_2",
    "1139": "\nSELECT home_team_goal, away_team_goal \nFROM Match \nJOIN League ON Match.league_id = League.id \nJOIN Country ON League.country_id = Country.id \nWHERE MATCH.date = '2008-09-24' AND League.name = 'Jupiler League' AND Country.name = 'Belgium';\n\n\t----- bird -----\teuropean_football_2",
    "1140": "\nSELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin')\n\n\t----- bird -----\teuropean_football_2",
    "1141": "\nSELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\n\n\t----- bird -----\teuropean_football_2",
    "1142": "\nSELECT COUNT(*) FROM Match JOIN League ON Match.league_id = League.id WHERE League.name = 'Serie A' AND SUBSTR(Match.season, 7, 4) = '2016'\n\n\t----- bird -----\teuropean_football_2",
    "1143": "\nSELECT MAX(home_team_goal) AS highest_home_score\nFROM Match m\nJOIN League l ON m.league_id = l.id\nWHERE l.name = 'Eredivisie' AND l.country_id = (SELECT id FROM Country WHERE name = 'Netherlands');\n\n\n\t----- bird -----\teuropean_football_2",
    "1144": "\nSELECT pa.finishing, pa.curve \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.weight = (SELECT MAX(weight) FROM Player)\n\n\t----- bird -----\teuropean_football_2",
    "1145": "\nSELECT L.name\nFROM League L\nJOIN Match M ON L.id = M.league_id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY COUNT(M.id) DESC\nLIMIT 1;\n\n\t----- bird -----\teuropean_football_2",
    "1146": "\nSELECT T.team_long_name\nFROM Team T\nJOIN Match M ON T.team_api_id = M.away_team_api_id\nWHERE M.away_team_goal > 0\nGROUP BY T.team_long_name\nORDER BY SUM(M.away_team_goal) DESC\nLIMIT 1;\n\n\n\t----- bird -----\teuropean_football_2",
    "1147": "\nSELECT player_name FROM Player WHERE id IN (SELECT player_api_id FROM Player_Attributes WHERE strength = (SELECT MAX(strength) FROM Player_Attributes))\n\n\t----- bird -----\teuropean_football_2",
    "1148": "\nSELECT CAST(SUM(CASE WHEN p.height < 180 AND pl.strength > 70 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) FROM Player p JOIN Player_Attributes pl ON p.player_api_id = pl.player_api_id \n\t----- bird -----\teuropean_football_2",
    "1149": "\nSELECT \n    CASE \n        WHEN SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) > SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END) THEN 'More Inpatients'\n        ELSE 'More Outpatients'\n    END AS Patient_Type,\n    CAST((CASE \n            WHEN SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) > SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END) THEN SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END)\n            ELSE SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END)\n        END * 100.0 / (SUM(CASE WHEN Admission = 'Inpatient' THEN 1 ELSE 0 END) + SUM(CASE WHEN Admission = 'Outpatient' THEN 1 ELSE 0 END))) AS DECIMAL(5,2)) AS Percentage\nFROM Patient\nWHERE SEX = 'Male'\n\n\t----- bird -----\tthrombosis_prediction",
    "1150": "\nSELECT CAST(SUM(CASE WHEN SEX = 'Female' AND Birthday > '1930-12-31' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM Patient\n\n\t----- bird -----\tthrombosis_prediction",
    "1151": "\n\nSELECT CAST(SUM(CASE WHEN p.Admission = 'Inpatient' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM Patient p\nWHERE YEAR(p.Birthday) BETWEEN 1930 AND 1940;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1152": "\nSELECT \n(SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = 'Outpatient') / \n(SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = 'Inpatient') AS Outpatient_to_Inpatient_Ratio\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1153": "\nSELECT P.Diagnosis AS Patient_Diagnosis, L.Date AS Laboratory_Date \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.ID = 30609;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1154": "\nSELECT P.SEX, P.Birthday, E.Examination Date, E.Symptoms \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.ID = '163109';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1155": "\nSELECT P.ID, PSEX, PBirthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.LDH > (SELECT AVG(LDH) FROM Laboratory WHERE LDH IS NOT NULL AND LDH < 200)\nAND P.ID IN (SELECT ID FROM Examination WHERE LDH IS NOT NULL AND LDH > 200);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1156": "\nSELECT p.ID, DATE_PART('year', AGE(p.Birthday)) AS age\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.LAC = 'positive';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1157": "\nSELECT P.ID, PSEX, P.Diagnosis \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Thrombosis = 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1158": "\nSELECT P.ID, P.Birthday, L.T-CHO \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE YEAR(P.Birthday) = 1937 AND L.T-CHO > 200;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1159": "\nSELECT p.ID, p.SEX, p.Diagnosis \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.ALB < 3.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1160": "\nSELECT CAST(SUM(CASE WHEN L.TP < 60 OR L.TP > 80 THEN 1 ELSE 0 END) * 100.0 / COUNT(L.ID) AS DECIMAL(5,2)) AS Percentage\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE PSEX = 'F';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1161": "\nSELECT AVG(EX.aCL_IgG) AS Average_aCL_IgG\nFROM Examination EX\nJOIN Patient P ON EX.ID = P.ID\nWHERE P.Birthday <= DATE_SUB(CURDATE(), INTERVAL 50 YEAR) AND P.Admission = 'in-patient';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1162": "\n\nSELECT COUNT(*)\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.SEX = 'F' AND YEAR(P.First Date) = 1997 AND P.Admission = 'Outpatient'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1163": "\nSELECT FLOOR(CAST(JULIANDAY(First Date) - JULIANDAY(Birthday) AS REAL) / 365) AS Age\nFROM Patient\nORDER BY Age ASC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1164": "\nSELECT COUNT(*)\nFROM (\n    SELECT p.SEX\n    FROM Examination e\n    JOIN Patient p ON e.ID = p.ID\n    WHERE YEAR(e.Examination Date) = 1997 AND e.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination WHERE YEAR(Examination Date) = 1997)\n    GROUP BY p.SEX\n) AS subquery\nWHERE SEX = 'F';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1165": "\nSELECT MAX(Birthday) - MIN(Birthday) AS AgeGap\nFROM Patient\nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE TG = 0\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1166": "\nSELECT p.Symptoms, p.Diagnosis \nFROM Examination e \nJOIN Patient p ON e.ID = p.ID \nWHERE p.Birthday = (\n    SELECT MIN(Birthday) \n    FROM Patient\n);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1167": "\nSELECT AVG(monthly_count) AS avg_male_patients_per_month\nFROM (\n    SELECT COUNT(*) AS monthly_count, EXTRACT(YEAR FROM L.Date) AS year, EXTRACT(MONTH FROM L.Date) AS month, P.SEX\n    FROM Laboratory L\n    JOIN Patient P ON L.ID = P.ID\n    WHERE EXTRACT(YEAR FROM L.Date) = 1998 AND P.SEX = 'M'\n    GROUP BY year, month\n) subquery\nWHERE year = 1998\n\n\t----- bird -----\tthrombosis_prediction",
    "1168": "\nSELECT L.Date, P.Birthday, DATE(L.Date) - INTERVAL (P.First Date - P.Birthday) DAY AS AgeAtAdmission\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Diagnosis LIKE '%SJS%'\nORDER BY P.Birthday ASC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1169": "\n\nSELECT CAST(SUM(CASE WHEN SEX = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'Female' THEN 1 ELSE 0 END) \nFROM Patient \nWHERE ID IN (SELECT ID FROM Laboratory WHERE UA > (SELECT AVG(UA) FROM Laboratory))\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1170": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nLEFT JOIN Examination e ON p.ID = e.ID\nWHERE DATEDIFF(e.Examination Date, p.First Date) > 365 OR e.ID IS NULL\n\n\t----- bird -----\tthrombosis_prediction",
    "1171": "\nSELECT COUNT(*) AS Underage_Patients\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE P.Birthday > DATE '1987-01-01' AND EXTRACT(YEAR FROM E.Examination Date) BETWEEN 1990 AND 1993;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1172": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE PSEX = 'Male' AND L.T-BIL > NORMAL_VALUE;\n\n\t----- bird -----\tthrombosis_prediction",
    "1173": "\nSELECT P.Diagnosis AS Most_Common_Illness\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.Date BETWEEN '1985-01-01' AND '1995-12-31'\nGROUP BY P.Diagnosis\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1174": "\nSELECT AVG(date_part('year', AGE(l.Birthday, l.Date))) AS average_age\nFROM Laboratory l\nJOIN Patient p ON l.ID = p.ID\nWHERE date_part('month', l.Date) = 10 AND date_part('year', l.Date) = 1991;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1175": "\nSELECT P.Birthday, EX.Diagnosis, FLOOR(JULIAN_DAY(CURRENT_DATE) - JULIAN_DAY(P.Birthday)) / 365 AS Age, EX.Diagnosis AS DoctorDiagnosis \nFROM Examination EX \nJOIN Patient P ON EX.ID = P.ID \nJOIN Laboratory L ON L.ID = P.ID \nWHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory)\nORDER BY P.Birthday\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1176": "\nSELECT ANA FROM Examination WHERE ID = 3605340 AND Examination_DATE = '1996-12-02';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1177": "\nSELECT CASE WHEN T2.T-CHO = 1 THEN 'Yes' ELSE 'No' END AS NormalLevel \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.ID = 2927464 AND T2.Date = '1995-09-04';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1178": "\nSELECT pSEX FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Diagnosis = 'AORTITIS' ORDER BY First Date LIMIT 1)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1179": "\nSELECT e.aCL_IgG, e.aCL_IgM, e.aCL_IgA \nFROM Examination e \nJOIN Patient p ON e.ID = p.ID \nWHERE p.Diagnosis = 'SLE' AND p.First_Date = '1994-02-19' AND e.Examination_Date = '1993-11-12';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1180": "\nSELECT CASE WHEN SEX = 'M' THEN 'man' ELSE 'women' END AS Gender \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.GPT = 9 AND Laboratory.Date = '1992-06-12';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1181": "\nSELECT DATE_PART('year', AGE(L.Date - INTERVAL '1991-10-21'::date)) AS Age\nFROM Laboratory L\nWHERE L.UA = 8.4 AND L.Date = '1991-10-21';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1182": "\nSELECT COUNT(*) AS Total_Laboratory_Tests\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.First_Date = '1991-06-13' AND P.Diagnosis = 'SJS' AND YEAR(L.Date) = 1995;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1183": "\nSELECT P.First Date, P.Diagnosis \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.Diagnosis = 'SLE' AND E.Examination Date = '1997-01-27' \nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1184": "\nSELECT Examination.Symptoms \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nWHERE Patient.Birthday = '1959-03-01' AND Examination.Examination Date = '1993-09-27';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1185": "\nSELECT (L1.T-CHO - L2.T-CHO) / NULLIF(L1.T-CHO, 0) AS DecreaseRate\nFROM Laboratory L1\nJOIN Laboratory L2 ON L1.ID = L2.ID AND L1.Date >= '1981-11-01' AND L1.Date <= '1981-12-31' AND L2.Date < '1981-11-01'\nJOIN Patient P ON L1.ID = P.ID\nWHERE P.Birthday = '1959-02-18';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1186": "\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.Diagnosis = 'Behcet\\'s' AND E.Examination Date BETWEEN '197-01-01' AND '1997-12-31'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1187": "\nSELECT DISTINCT p.ID\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nJOIN Laboratory l ON p.ID = l.ID\nWHERE e.Examination Date BETWEEN '1987-07-06' AND '1996-01-31'\nAND l.GPT > 30\nAND l.ALB < 4;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1188": "\nSELECT ID FROM Patient WHERE SEX = 'F' AND Birthday = '1964-01-01' \n\n\t----- bird -----\tthrombosis_prediction",
    "1189": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis = 2 \nAND e.ANA_Pattern = 'S'\nAND e.aCL_IgM > (SELECT AVG(aCL_IgM) FROM Examination WHERE aCL_IgM > 0)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1190": "\nSELECT \n    CAST(SUM(CASE WHEN L.UA < (SELECT AVG(UA) FROM Laboratory WHERE UA > 0 AND U-PRO = 'Negative') THEN 1 ELSE 0 END) * 100.0 / COUNT(L.ID) AS DECIMAL(5,2))\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    L.U-PRO = 'Negative';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1191": "\nSELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS REAL)\nFROM Patient\nJOIN Examination ON Patient.ID = Examination.ID\nWHERE SEX = 'M' AND First Date >= '1981-01-01' AND First Date < '1982-01-01';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1192": "\nSELECT P.ID, P.SEX, P.Birthday, L.Date\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.Date BETWEEN '1991-10-01' AND '1991-10-31'\nAND L.T-BIL <= (SELECT AVG(T-BIL) FROM Laboratory WHERE T-BIL IS NOT NULL AND Date BETWEEN '1991-10-01' AND '1991-10-31')\nAND P.Admission = 'Outpatient';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1193": "\nSELECT COUNT(*)\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.ANA Pattern NOT LIKE '%P%' AND PSEX = 'F' AND P.Birthday BETWEEN '1980-01-01' AND '1989-12-31';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1194": "\nSELECT pSEX FROM Patient WHERE ID IN (\n    SELECT e.ID FROM Examination e \n    JOIN Laboratory l ON e.ID = l.ID \n    WHERE e.Diagnosis LIKE '%PSS%' AND l.CRP = '2+' AND l.CRE = 1 AND l.LDH = 123\n)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1195": "\nSELECT AVG(Lab.ALB) AS AverageAlbuminLevel\nFROM Laboratory Lab\nJOIN Patient Pat ON Lab.ID = Pat.ID\nWHERE Pat.SEX = 'F' AND Lab.PLT > 400 AND Pat.Diagnosis = 'SLE';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1196": "\nSELECT Symptoms AS Most_Common_Sign\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE P.Diagnosis LIKE '%SLE%'\nGROUP BY Symptoms\nORDER BY COUNT(*) DESC\nLIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1197": "\nSELECT MIN(P.First Date) AS FirstDocumentedDate, P.Diagnosis \nFROM Patient P \nWHERE P.ID = 48473;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1198": "\nSELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1199": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE YEAR(l.Date) = 1997 AND (l.TP < 6.0 OR l.TP > 8.0 OR l.ALB < 35.0 OR l.ALB > 50.0 OR l.UA < 2.0 OR l.UA > 4.0 OR l.UN < 10.0 OR l.UN > 70.0 OR l.CRE < 0.6 OR l.CRE > 1.2 OR l.T_BIL < 5.1 OR l.T_BIL > 20.0 OR l.T_CHO < 40.0 OR l.T_CHO > 300.0 OR l.TG < 50 OR l.TG > 600);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1200": "\nSELECT \n    COUNT(CASE WHEN L.DNA = 'SLE' AND E.Thrombosis = 1 THEN P.ID END) * 100.0 / COUNT(P.ID) AS Proportion\nFROM \n    Examination E\nJOIN \n    Patient P ON E.ID = P.ID\nJOIN \n    Laboratory L ON P.ID = L.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1201": "\nSELECT CAST(SUM(CASE WHEN P.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.ID)\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE YEAR(P.Birthday) = 1980 AND E.Diagnosis LIKE '%RA%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1202": "\nSELECT COUNT(P.ID)\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE PSEX = 'Male' AND E.Examination Date BETWEEN '1995-01-01' AND '1997-12-31' AND P.Diagnosis = 'BEHCET disease' AND P.Admission = 'No'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1203": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE pSEX = 'F' AND l.WBC < 3.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1204": "\nSELECT EXTRACT(EPOCH FROM (E.Examination Date - P.First Date)) AS TimeDifferenceInSeconds \nFROM Examination E \nJOIN Patient P ON E.ID = P.ID \nWHERE P.ID = 821298;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1205": "\nSELECT CASE WHEN UA >= 0 AND UA <= 4 THEN 'Normal' ELSE 'Abnormal' END AS Uric_Acid_Range \nFROM Laboratory \nWHERE ID = 57266;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1206": "\nSELECT L.Date\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.ID = 48473 AND L.GOT > NORMAL_RANGE_FOR_GOT;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1207": "\nSELECT P.SEX, P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE YEAR(L.Date) = 1994 AND L.GOT >= 8 AND L.GOT <= 40;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1208": "\nSELECT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE PSEX = 'Male' AND L.GPT > NORMAL_RANGE;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1209": "\nSELECT p.Diagnosis, l.Date, l.ALG\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.ALG > 40\nORDER BY p.Birthday ASC;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1210": "\nSELECT AVG(LDH) AS Average_LDH\nFROM Laboratory\nWHERE LDH IS NOT NULL AND LDH BETWEEN LOWER_NORMAL_LDH AND UPPER_NORMAL_LDH;\n\n\t----- bird -----\tthrombosis_prediction",
    "1211": "\nSELECT p.ID, DATE_PART('year', AGE(p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.LDH > 100 AND l.LDH < 300;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1212": "\nSELECT p.Admission, COUNT(*) AS PatientCount\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.ALP IS NOT NULL AND l.ALP >= 40 AND l.ALP <= 150\nGROUP BY p.Admission;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1213": "\nSELECT ID, ALP AS Is_ALP_within_normal_range \nFROM Patient \nWHERE Birthday = '1982-04-01' AND ID IN (SELECT ID FROM Laboratory WHERE ALP IS NOT NULL);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1214": "\nSELECT P.ID, PSEX, PBirthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TP < (SELECT MIN(NormalIndex) FROM (VALUES (80)) AS NormalRange(TP));\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1215": "\nSELECT ID, (TP - 70) AS TP_Deviation\nFROM Laboratory\nJOIN Patient ON Laboratory.ID = Patient.ID\nWHERE SEX = 'F' AND TP > 70;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1216": "\nSELECT p.Birthday, p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE pSEX = 'Male' AND (l.ALB < 35 OR l.ALB > 49)\nORDER BY p.Birthday DESC;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1217": "\nSELECT p.ID, p.Birthday, l.ALB, CASE WHEN l.ALB BETWEEN 35 AND 50 THEN 'Within Normal Range' ELSE 'Not Within Normal Range' END AS Albumin_Range \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE YEAR(p.Birthday) = 1982;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1218": "\n\nSELECT CAST(SUM(CASE WHEN L.UA > (SELECT AVG(UA) FROM Laboratory WHERE SEX = 'F') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'F'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1219": "\n\nSELECT AVG(Lab.UA) AS AverageUAIndex\nFROM (\n    SELECT ID, MAX(Date) AS LatestDate\n    FROM Laboratory\n    WHERE UN = 0 -- Assuming normal UA is when UN (uric acid) is 0\n    GROUP BY ID\n) LabMax\nJOIN Laboratory Lab ON LabMax.ID = Lab.ID AND LabMax.LatestDate = Lab.Date\nWHERE Lab.UN = 0\nGROUP BY Lab.ID;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1220": "\nSELECT p.ID, p.SEX, p.Birthday \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.UN = 35;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1221": "\nSELECT P.ID, PSEX, PBirthday \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nJOIN Laboratory L ON P.ID = L.ID \nWHERE E.Diagnosis = 'RA' AND L.UN < (SELECT UN FROM ReferenceRange WHERE Condition = 'Normal');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1222": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE PSEX = 'Male' AND CRE NOT BETWEEN 0.6 AND 1.2;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1223": "\nSELECT CASE WHEN SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AND COUNT(*) > 0 THEN 'True' ELSE 'False' END AS Result \nFROM Patient \nWHERE ID IN (SELECT ID FROM Laboratory WHERE CRE NOT BETWEEN 0.6 AND 1.2)\n\n\t----- bird -----\tthrombosis_prediction",
    "1224": "\nSELECT p.ID, p.SEX, p.Birthday, l.T-BIL AS Total_Bilirubin\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.T-BIL = (SELECT MAX(T-BIL) FROM Laboratory)\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1225": "\n\nSELECT p.SEX, COUNT(*) AS Total_Patients\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.T-BIL < 1.0 OR l.T-BIL > 21.0\nGROUP BY p.SEX;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1226": "\nSELECT p.ID, l.T-CHO \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE NOT EXISTS (\n    SELECT 1 FROM Patient p2 \n    JOIN Laboratory l2 ON p2.ID = l2.ID \n    WHERE p2.Birthday < p.Birthday\n) \nORDER BY l.T-CHO DESC, p.Birthday ASC \nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1227": "\nSELECT AVG(date('now') - Birthday) AS average_age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'male' AND T-CHO > (SELECT AVG(T-CHO) FROM Laboratory);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1228": "\nSELECT P.ID, P.Diagnosis, L.TG \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG > 100;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1229": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG > 150 AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) > 50;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1230": "\nSELECT DISTINCT ID FROM Laboratory WHERE CPK = 0 AND ID IN (SELECT ID FROM Patient WHERE Admission = 'Outpatient');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1231": "\nSELECT COUNT(*)\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Birthday BETWEEN '1936-01-01' AND '1956-12-31'\nAND PSEX = 'M'\nAND L.CPK > 180;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1232": "\nSELECT p.ID, p.SEX, DATE_PART('year', AGE(p.Birthday)) AS age\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.GLU NOT BETWEEN 70 AND 110 -- Assuming normal range for blood glucose is between 70-110 mg/dL\nAND l.T-CHO BETWEEN 150 AND 200; -- Assuming normal range for total cholesterol is less than 200 mg/dL\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1233": "\nSELECT L.ID, L.GLU\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE YEAR(P.First Date) = 1991 AND L.GLU >= NORMAL_GLUCOSE_RANGE_LOWER_LIMIT AND L.GLU <= NORMAL_GLUCOSE_RANGE_UPPER_LIMIT;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1234": "\n\nSELECT p.ID, p.SEX, p.Birthday\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.WBC IS NOT NULL AND (l.WBC < 4 OR l.WBC > 10)\nGROUP BY p.SEX, p.ID, p.SEX, p.Birthday\nORDER BY DATE(p.Birthday), p.SEX;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1235": "\nSELECT p.ID, DATE_PART('year', AGE(p.Birthday)) AS Age, p.Diagnosis \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.RBC < (SELECT AVG(RBC) FROM Laboratory);\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1236": "\nSELECT P.Admission, L.RBC, P.SEX, P.Birthday\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX = 'F' AND P.Birthday <= DATEADD(year, -50, GETDATE()) AND L.RBC != (SELECT AVG(RBC) FROM Laboratory WHERE RBC IS NOT NULL GROUP BY ID HAVING COUNT(*) = (SELECT COUNT(*) FROM Laboratory))\nSQL_END\n\t----- bird -----\tthrombosis_prediction",
    "1237": "\nSELECT p.ID, pSEX FROM Patient p WHERE p.HGB < 13;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1238": "\nSELECT P.ID, PSEX \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE P.Diagnosis LIKE '%SLE%' AND P.HGB IS NOT NULL AND P.HGB >= 0 \nORDER BY P.Birthday ASC \nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1239": "\n\nSELECT P.ID, DATE_PART('year', (L.Date - P.Birthday)) AS Age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.HCT > 38 -- Assuming normal range for HCT is <38%\nGROUP BY P.ID\nHAVING COUNT(*) >= 2\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1240": "\nSELECT AVG(HCT) AS AverageHematocrit\nFROM Laboratory\nWHERE Date BETWEEN '1991-01-01' AND '1991-12-31'\nAND HCT < 45;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1241": "\n\nSELECT \n    SUM(CASE WHEN PLT < (SELECT AVG(PLT) FROM Laboratory) THEN 1 ELSE 0 END) AS LowerThanNormal,\n    SUM(CASE WHEN PLT > (SELECT AVG(PLT) FROM Laboratory) THEN 1 ELSE 0 END) AS HigherThanNormal\nFROM \n    Laboratory\nWHERE \n    PLT < ALL (SELECT PLT FROM Laboratory) OR PLT > ALL (SELECT PLT FROM Laboratory)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1242": "\nSELECT DISTINCT p.ID, p.SEX, p.Birthday, l.*\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE YEAR(l.Date) = 1984 AND TIMESTAMPDIFF(YEAR, p.Birthday, '1984-01-01') < 50 AND l.PLT IS NOT NULL AND l.PLT > 0 AND l.PLT < 600\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1243": "\n\nSELECT CAST(SUM(CASE WHEN p.SEX = 'F' AND l.PT IS NOT NULL AND l.PT > 13 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE DATE('now') - p.Birthday > 55 * 365\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1244": "\nSELECT P.ID, P.Birthday, L.PT\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE YEAR(P.First Date) > 1992 AND L.PT <= 13;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1245": "\nSELECT COUNT(*) FROM Examination WHERE Examination.Date > '1997-01-01' AND LAC = 'inactivated partial prothrombin time';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1246": "\nSELECT COUNT(*) AS MildThrombosisCount \nFROM Examination E \nJOIN Patient P ON E.ID = P.ID \nWHERE E.APTT > 50 AND E.Thrombosis = 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1247": "\nSELECT COUNT(*)\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE PSEX = 'Male' AND WBC IN (NORMAL) AND U-PRO != 'Normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1248": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Birthday > '1980-01-01' AND l.FG IS NOT NULL AND l.FG != 2;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1249": "\nSELECT DISTINCT P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.U-PRO = 'Yes';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1250": "\nSELECT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nJOIN Examination E ON P.ID = E.ID\nWHERE L.U-PRO = 'normal' AND E.ANA > 1 AND (E.ANA_PATTERN LIKE '%SLE%' OR E.DIAGNOSIS LIKE '%SLE%');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1251": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE l.IGG < 104 AND e.Symptoms LIKE '%abortion%';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1252": "\nSELECT COUNT(*) FROM Examination E JOIN Laboratory L ON E.ID = L.ID WHERE E.aCL_IgG <= 1.0 AND E.Symptoms IS NOT NULL;\n\n\t----- bird -----\tthrombosis_prediction",
    "1253": "\nSELECT P.Diagnosis\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.IGA = (SELECT MAX(Iga) FROM Laboratory WHERE Iga IS NOT NULL AND Iga BETWEEN 7 AND 14)\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1254": "\nSELECT COUNT(DISTINCT L.ID) \nFROM Laboratory L \nJOIN Patient P ON L.ID = P.ID \nWHERE L.IGG IS NOT NULL AND L.IGA = 0 AND P.Birthday > '1990-01-01'\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1255": "\nSELECT Diagnosis, COUNT(*) AS DiseaseCount\nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.aCL_IgM != 0 AND E.aCL_IgM IS NOT NULL\nGROUP BY Diagnosis\nORDER BY DiseaseCount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1256": "\nSELECT COUNT(*) FROM Patient WHERE ID NOT IN (SELECT L.ID FROM Laboratory L WHERE L.CRP = 'normal')\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1257": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CRP != 'normal' AND TIMESTAMPDIFF(YEAR, P.Birthday, CURDATE()) < 18;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1258": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RF = 'positive' AND l.CT <= 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1259": "\nSELECT P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.Birthday > '1995-01-01' AND L.RF = 'normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1260": "\nSELECT P.ID \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.Birthday < DATEADD(year, -60, GETDATE()) AND L.RF = 'normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1261": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.RF = 'normal' AND e.Thrombosis = 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1262": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.ANA_Pattern = 'P' AND e.C3 = 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1263": "\nSELECT L.ID\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE P.HCT NOT BETWEEN 36 AND 48 -- Assuming normal Hematocrit range is between 36% to 48%\nORDER BY L.LAC DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1264": "\nSELECT COUNT(*) \nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.Thrombosis = 1 AND LAC LIKE 'Normal%';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1265": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SM = 'Negative';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1266": "\nSELECT Birthday \nFROM Patient \nWHERE ID = (\n    SELECT L.ID \n    FROM Laboratory L \n    WHERE L.CENTROMEA IS NOT NULL AND L.CENTROMEA != 0 \n    ORDER BY L.ID, L.Date \n    LIMIT 1\n);\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1267": "\nSELECT COUNT(*) \nFROM Examination E \nJOIN Patient P ON E.ID = P.ID \nWHERE P.SM = 'normal' AND E.Thrombosis = (SELECT MAX(Thrombosis) FROM Examination WHERE SM = 'normal');\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1268": "\nSELECT TOP 3 p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SM <> 'Negative'\nORDER BY p.Birthday DESC;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1269": "\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.Examination Date > '1997-01-01' AND E.KCT = 'normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1270": "\nSELECT COUNT(*) \nFROM Examination E\nJOIN Patient P ON E.ID = P.ID\nWHERE E.SYMPTOMS LIKE '%vertigo%' AND LAG(CASE WHEN SCL70 = 'normal' THEN 1 ELSE 0 END, 1, 0) OVER (PARTITION BY E.ID ORDER BY E.EXAMINATION_DATE) = 1 AND PSEX = 'male';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1271": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SSA = 'normal' AND YEAR(p.First Date) < 1990;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1272": "\nSELECT p.ID\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.SSA != 'normal'\nORDER BY p.First_Date ASC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1273": "\nSELECT COUNT(DISTINCT e.ID)\nFROM Examination e\nJOIN Patient p ON e.ID = p.ID\nWHERE e.LAC = 'anti-SSB' AND e.LAC = 'normal' AND p.Diagnosis = 'SLE';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1274": "\nSELECT COUNT(*) \nFROM Examination E \nJOIN Patient P ON E.ID = P.ID \nWHERE P.SSA = 'normal' AND E.Symptoms != '';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1275": "\nSELECT COUNT(*) FROM Patient WHERE ID IN (\n    SELECT Examination.ID FROM Examination \n    JOIN Laboratory ON Examination.ID = Laboratory.ID \n    WHERE Laboratory.CENTROMEA = 'normal' AND Laboratory.SSB = 'normal'\n) AND SEX = 'male';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1276": "\nSELECT DISTINCT P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.DNA != 'Normal';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1277": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nLEFT JOIN Laboratory l ON p.ID = l.ID\nWHERE l.DNA IS NULL AND p.Diagnosis LIKE '%normal anti-DNA%'\n\n\t----- bird -----\tthrombosis_prediction",
    "1278": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.DNA-II <> 0 AND P.Admission IS NOT NULL;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1279": "\nSELECT COUNT(*) * 100 / (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'SLE') AS Percentage\nFROM Laboratory L\nJOIN Examination E ON L.ID = E.ID\nWHERE L.GOT != (SELECT IGOT FROM ReferenceValues WHERE Condition = 'Normal' AND Disease = 'SLE')\nAND E.Diagnosis = 'SLE';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1280": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE PSEX = 'Male' AND L.GOT IN (SELECT GOT FROM Laboratory WHERE GOT BETWEEN 8 AND 40)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1281": "\nSELECT MIN(Birthday) AS YoungestBirthDate\nFROM Patient\nWHERE ID IN (\n    SELECT ID\n    FROM Laboratory\n    WHERE GLU IS NOT NULL AND GLU <> 0 -- Assuming abnormal is any non-zero value for this example\n)\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1282": "\nSELECT TOP 3 P.Birthday \nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.GLU IS NOT NULL AND L.GLU BETWEEN LOWER_LIMIT AND UPPER_LIMIT\nORDER BY L.GLU DESC;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1283": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.GLU IS NOT NULL AND L.GLU >= 0 AND L.GLU <= 40 AND PSEX = 'M';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1284": "\nSELECT MIN(L.Date) AS FirstRecordedDate\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.LDH IN (SELECT LDH FROM Laboratory WHERE LDH <= 250)\nORDER BY L.LDH DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1285": "\nSELECT MAX(L.Date) AS LatestDate\nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.LDH > (SELECT AVG(LDH) FROM Laboratory WHERE LDH > 0)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1286": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CPK != 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1287": "\nSELECT COUNT(*) AS Normal_ALP_Patients FROM Laboratory WHERE ALP = 0;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1288": "\nSELECT P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TP < 7; -- Assuming normal total protein range is below 7 g/dL, adjust as necessary\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1289": "\nSELECT COUNT(*) AS NormalTotalProteinCount \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Diagnosis = 'SJS' AND L.TP <= 80 AND L.TP >= 70;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1290": "\nSELECT Examination.Examination_Date \nFROM Examination \nJOIN Patient ON Examination.ID = Patient.ID \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.ALB = (SELECT MAX(ALB) FROM Laboratory WHERE ALB IS NOT NULL AND ALB > 0)\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1291": "\nSELECT COUNT(*)\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE SEX = 'Male' AND ALB IS NOT NULL AND TP IS NOT NULL AND ALB >= 35 AND ALB <= 50 AND TP BETWEEN 6.5 AND 8.5;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1292": "\nSELECT Examination.aCL_IgG\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE PatientSEX = 'F' AND Laboratory.UA <= 6.8\nORDER BY Laboratory.UA DESC\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1293": "\nSELECT MAX(Patient.ID), MAX(Examination.ANA)\nFROM Examination\nJOIN Patient ON Examination.ID = Patient.ID\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Laboratory.CRE >= 0 AND Laboratory.CRE <= 1.5\nGROUP BY Patient.ID;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1294": "\nSELECT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.CRE <= 1.5 AND L.IGG = (SELECT MAX(Igg) FROM Laboratory WHERE ID = P.ID)\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1295": "\nSELECT COUNT(*) \nFROM Examination E \nJOIN Patient P ON E.ID = P.ID \nJOIN Laboratory L ON L.ID = P.ID \nWHERE L.T-BIL > 1 AND E.ANA Pattern = 'Peripheral';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1296": "\nSELECT P.ANA, L.T-BIL \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nJOIN Examination E ON P.ID = E.ID \nWHERE L.T-BIL = (SELECT MAX(T.BIL) FROM Laboratory L JOIN Patient P ON L.ID = P.ID WHERE T.BIL <= 1.9)\nGROUP BY P.ANA;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1297": "\nSELECT COUNT(*) FROM Laboratory WHERE T-CHO > 200 AND LAC = 'negative';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1298": "\nSELECT COUNT(*) \nFROM Examination E \nJOIN Laboratory L ON E.ID = L.ID \nWHERE L.T-CHO < 200 AND E.ANA Pattern = 'P';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1299": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.TG = 0 AND P.Description LIKE '%symptoms%';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1300": "\nSELECT p.Diagnosis\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE l.TG = (\n    SELECT MAX(l2.TG)\n    FROM Laboratory l2\n    WHERE l2.TG <= 150 -- Assuming normal range for triglycerides is up to 150 mg/dL\n)\nLIMIT 1;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1301": "\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE E.Thrombosis = 0 AND LAC LIKE '%CPK%' AND CAST(SUBSTR(LAC, 4) AS INTEGER) > 150 OR CAST(SUBSTR(LAC, 4) AS INTEGER) < 20;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1302": "\nSELECT COUNT(*) \nFROM Laboratory L\nJOIN Patient P ON L.ID = P.ID\nWHERE L.FG <= 170;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1303": "\nSELECT Birthday FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE GLU != 'normal') ORDER BY Birthday ASC LIMIT 1;\n\n\t----- bird -----\tthrombosis_prediction",
    "1304": "\nSELECT COUNT(*) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.GLU = 'normal' AND P.Thrombosis = 0;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1305": "\nSELECT COUNT(*) AS NormalWhiteBloodCellsCount\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.SEX IS NOT NULL AND L.WBC IS NOT NULL AND L.WBC >= 4 AND L.WBC <= 10;\n\n\t----- bird -----\tthrombosis_prediction",
    "1306": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE p.Diagnosis LIKE '%SLE%' AND l.WBC IS NOT NULL AND l.WBC >= 4 AND l.WBC <= 10;\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1307": "\nSELECT DISTINCT P.ID\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.RBC IS NOT NULL AND (L.RBC < 3.5 OR L.RBC > 5.5) AND P.Admission = 'outpatient';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1308": "\nSELECT COUNT(*) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.PLT IS NOT NULL AND L.PLT >= 150 AND L.PLT <= 450 AND P.Symptoms != '';\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1309": "\nSELECT L.PLATELET \nFROM Laboratory L \nJOIN Patient P ON L.ID = P.ID \nWHERE L.PLT BETWEEN 150 AND 450 AND P.Diagnosis = 'MCTD';\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1310": "\nSELECT AVG(Lab.PT) AS AveragePT\nFROM Patient P\nJOIN Laboratory Lab ON P.ID = Lab.ID\nWHERE P.SEX = 'Male' AND Lab.PT IS NOT NULL AND Lab.PT <= 13;\n\n\n\t----- bird -----\tthrombosis_prediction",
    "1311": "\nSELECT COUNT(DISTINCT p.ID)\nFROM Patient p\nJOIN Examination e ON p.ID = e.ID\nWHERE e.Thrombosis >= 2 AND e.RVVT = 'Normal'\nSQL_END\n\n\t----- bird -----\tthrombosis_prediction",
    "1312": "\nSELECT link_to_major AS major_id FROM member WHERE first_name = 'Angela' AND last_name = 'Sanders';\n\n\t----- bird -----\tstudent_club",
    "1313": "\nSELECT COUNT(*)\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nJOIN zip_code zc ON m.zip = zc.zip_code\nWHERE m.position LIKE '%Student%' AND ma.college = 'College of Engineering';\n\n\n\t----- bird -----\tstudent_club",
    "1314": "\nSELECT first_name, last_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.department = 'Art and Design' AND link_to_major IS NOT NULL;\n\n\n\t----- bird -----\tstudent_club",
    "1315": "\nSELECT COUNT(DISTINCT a.link_to_member) \nFROM attendance a \nJOIN event e ON a.link_to_event = e.event_id \nJOIN member m ON a.link_to_member = m.member_id \nJOIN major mj ON m.link_to_major = mj.major_id \nWHERE e.event_name = 'Women''s Soccer' AND mj.college = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1316": "\nSELECT m.phone \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE e.event_name = 'Women''s Soccer' AND ma.college = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1317": "\nSELECT COUNT(*) \nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN event e ON a.link_to_event = e.event_id\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE e.event_name = 'Women''s Soccer' AND m.t_shirt_size = 'medium';\n\n\n\t----- bird -----\tstudent_club",
    "1318": "\nSELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.link_to_major IN (SELECT major_id FROM major WHERE college = 'Student_Club')\nGROUP BY e.event_id, e.event_name\nORDER BY COUNT(a.link_to_member) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1319": "\nSELECT T4.college FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id JOIN event AS T3 ON T1.member_id = (SELECT link_to_member FROM attendance WHERE link_to_event = T3.event_id AND T1.member_id = T3.event_name) JOIN Student_Club AS T4 ON T2.college = T4.college WHERE T1.position = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1320": "\nSELECT DISTINCT e.event_name \nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean';\n\n\n\t----- bird -----\tstudent_club",
    "1321": "\nSELECT COUNT(*)\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND e.event_date LIKE '2019%' AND e.type = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1322": "\nSELECT COUNT(*) AS meeting_count\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.type = 'meeting' AND (\n    SELECT COUNT(*) \n    FROM attendance a\n    WHERE a.link_to_event = e.event_id\n) > 10;\n\n\n\t----- bird -----\tstudent_club",
    "1323": "\nSELECT e.event_name \nFROM event e \nJOIN attendance a ON e.event_id = a.link_to_event \nWHERE e.type = 'Student_Club' AND COUNT(a.link_to_member) > 20;\n\n\n\t----- bird -----\tstudent_club",
    "1324": "\nSELECT AVG(a.link_to_event) AS average_attendance\nFROM attendance a\nJOIN event e ON a.link_to_event = e.event_id\nWHERE e.type = 'meeting' AND e.event_date LIKE '2020-%';\n\n\n\t----- bird -----\tstudent_club",
    "1325": "\nSELECT expense_description, MAX(cost) AS most_expensive_item\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.type = 'club'\nGROUP BY expense_description\nORDER BY most_expensive_item DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1326": "\nSELECT COUNT(*) AS member_count\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.link_to_major IS NOT NULL AND ma.major_name = 'Environmental Engineering';\n\n\n\t----- bird -----\tstudent_club",
    "1327": "\nSELECT m.first_name, m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN event e ON a.link_to_event = e.event_id \nJOIN major mj ON m.link_to_major = mj.major_id \nWHERE mj.college = 'Student_Club' AND e.event_name = 'Laugh Out Loud';\n\n\n\t----- bird -----\tstudent_club",
    "1328": "\nSELECT last_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major_name = 'Law and Constitutional Studies';\n\n\n\t----- bird -----\tstudent_club",
    "1329": "\nSELECT T4.county \nFROM member AS T1 \nJOIN zip_code AS T4 ON T1.zip = T4.zip_code \nWHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'\n\n\t----- bird -----\tstudent_club",
    "1330": "\nSELECT DISTINCT c.college \nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nJOIN zip_code zc ON m.zip = zc.zip_code\nJOIN college c ON ma.college = c.college\nWHERE m.first_name = 'Tyler' AND m.last_name = 'Hewitt';\n\n\n\t----- bird -----\tstudent_club",
    "1331": "\nSELECT SUM(amount) AS total_funds_received\nFROM income\nWHERE link_to_member IN (\n    SELECT member_id\n    FROM member\n    WHERE position = 'Vice President'\n)\n\n\t----- bird -----\tstudent_club",
    "1332": "\nSELECT SUM(e.cost) AS total_spent\nFROM expense e\nJOIN budget b ON e.link_to_budget = b.budget_id\nJOIN event ev ON b.link_to_event = ev.event_id\nJOIN member m ON e.link_to_member = m.member_id\nWHERE ev.type = 'September Meeting' AND b.category = 'food' AND m.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club');\n\n\n\t----- bird -----\tstudent_club",
    "1333": "\nSELECT T2.city, T2.state \nFROM member AS T1\nJOIN zip_code AS T2 ON T1.zip = T2.zip_code\nWHERE T1.position = 'President' AND T1.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club')\n\n\t----- bird -----\tstudent_club",
    "1334": "\nSELECT first_name, last_name \nFROM member \nWHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'Student_Club') AND state = 'Illinois';\n\n\n\t----- bird -----\tstudent_club",
    "1335": "\nSELECT SUM(b.spent)\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nJOIN member m ON e.link_to_member = m.member_id\nWHERE e.type = 'September Meeting' AND b.category = 'advertisement'\nGROUP BY e.event_id;\n\n\n\t----- bird -----\tstudent_club",
    "1336": "\nSELECT m.department \nFROM member m1 \nJOIN major maj ON m1.link_to_major = maj.major_id \nJOIN member m2 ON m1.link_to_major = m2.link_to_major \nWHERE m1.first_name = 'Pierce' AND m2.first_name = 'Guidi';\n\n\n\t----- bird -----\tstudent_club",
    "1337": "\nSELECT SUM(amount) AS total_budgeted_amount\nFROM budget\nWHERE event_status = 'October Speaker';\n\n\t----- bird -----\tstudent_club",
    "1338": "\nSELECT e.event_name, COUNT(*) = SUM(CASE WHEN ep.approved = 'true' THEN 1 ELSE 0 END) AS IsAllApproved\nFROM event e\nJOIN expense ep ON e.event_id = ep.link_to_event\nWHERE e.event_date = '2019-10-08'\nGROUP BY e.event_name;\n\n\n\t----- bird -----\tstudent_club",
    "1339": "\nSELECT AVG(expense.cost) AS average_cost\nFROM expense\nJOIN member ON expense.link_to_member = member.member_id\nWHERE member.first_name = 'Elijah' AND member.last_name = 'Allen'\nAND expense.expense_date BETWEEN '2023-09-01' AND '2023-10-31';\n\n\n\t----- bird -----\tstudent_club",
    "1340": "\n\nSELECT SUM(b.spent) AS total_spent_2019, (SELECT SUM(b.spent) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Student_Club' AND EXTRACT(YEAR FROM e.event_date::date) = 2020) AS total_spent_2020, (SUM(b.spent) - (SELECT SUM(b.spent) FROM budget b JOIN event e ON b.link_to_event = e.event_id WHERE e.type = 'Student_Club' AND EXTRACT(YEAR FROM e.event_date::date) = 2020)) AS difference\nFROM budget b JOIN event e ON b.link_to_event = e.event_id \nWHERE e.type = 'Student_Club' AND (EXTRACT(YEAR FROM e.event_date::date) = 2019)\n\n\n\t----- bird -----\tstudent_club",
    "1341": "\nSELECT location FROM event WHERE event_name = 'Spring Budget Review';\n\n\t----- bird -----\tstudent_club",
    "1342": "\nSELECT e.event_name, SUM(expense.cost) AS total_cost\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense exp ON b.budget_id = exp.link_to_budget\nWHERE e.event_date = '2019/9/4' AND b.category = 'Posters'\nGROUP BY e.event_name;\n\n\n\t----- bird -----\tstudent_club",
    "1343": "\nSELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1344": "\nSELECT notes FROM event WHERE event_date = '2019-09-14' AND type = 'fundraising';\n\n\t----- bird -----\tstudent_club",
    "1345": "\nSELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences';\n\n\t----- bird -----\tstudent_club",
    "1346": "\nSELECT phone FROM member WHERE first_name = \"Carlo\" AND last_name = \"Jacobs\"\n\n\t----- bird -----\tstudent_club",
    "1347": "\nSELECT county \nFROM member m\nJOIN zip_code z ON m.zip = z.zip_code\nWHERE first_name = 'Adela' AND last_name = 'O''Gallagher';\n\n\n\t----- bird -----\tstudent_club",
    "1348": "\nSELECT COUNT(*) AS exceeded_budget_count\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.event_name = 'November Meeting' AND b.remaining < 0;\n\n\n\t----- bird -----\tstudent_club",
    "1349": "\nSELECT SUM(amount) AS total_budget_amount\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event_name = 'September Speaker';\n\n\t----- bird -----\tstudent_club",
    "1350": "\nSELECT e.status\nFROM event e\nJOIN expense exp ON e.event_id = exp.link_to_event\nWHERE exp.expense_description = 'Post Cards, Posters' AND exp.expense_date = '2019-08-20';\n\n\n\t----- bird -----\tstudent_club",
    "1351": "\nSELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\n\n\t----- bird -----\tstudent_club",
    "1352": "\nSELECT COUNT(*) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies') AND t_shirt_size = 'Large'\n\n\t----- bird -----\tstudent_club",
    "1353": "\nSELECT T2.type \nFROM member AS T1 \nJOIN zip_code AS T2 ON T1.zip = T2.zip_code \nWHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielsen'\n\n\t----- bird -----\tstudent_club",
    "1354": "\nSELECT major.major_name\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.position = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1355": "\nSELECT state FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison'\n\n\t----- bird -----\tstudent_club",
    "1356": "\nSELECT m.department\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.position = 'President'\n\n\t----- bird -----\tstudent_club",
    "1357": "\nSELECT i.date_received\nFROM income i\nJOIN member m ON i.link_to_member = m.member_id\nWHERE m.first_name = 'Connor' AND m.last_name = 'Hilton';\n\n\n\t----- bird -----\tstudent_club",
    "1358": "\nSELECT first_name, last_name FROM member WHERE member_id = (SELECT link_to_member FROM expense WHERE approved = 'yes' ORDER BY expense_date ASC LIMIT 1)\n\n\n\t----- bird -----\tstudent_club",
    "1359": "\nSELECT COUNT(*) \nFROM budget b1, budget b2 \nJOIN event e1 ON b1.link_to_event = e1.event_id \nJOIN event e2 ON b2.link_to_event = e2.event_id \nWHERE b1.category = 'Advertisement' AND e1.event_name = 'Yearly Kickoff' \nAND b1.category = 'Advertisement' AND e2.event_name = 'October Meeting' \nAND b1.remaining > (SELECT remaining FROM budget WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting') LIMIT 1)\n\n\t----- bird -----\tstudent_club",
    "1360": "\nSELECT \n(SELECT SUM(remaining) FROM budget WHERE event_status = 'November Speaker' AND category = 'Parking') * 100 / \nSUM(remaining) AS percentage_budget\nFROM budget\nWHERE event_status = 'November Speaker'\nGROUP BY event_status, category\n\n\t----- bird -----\tstudent_club",
    "1361": "\nSELECT SUM(cost) AS total_pizza_cost\nFROM expense\nWHERE expense_description LIKE '%pizza%';\n\n\n\t----- bird -----\tstudent_club",
    "1362": "\nSELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\n\n\t----- bird -----\tstudent_club",
    "1363": "\nSELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';\n\n\t----- bird -----\tstudent_club",
    "1364": "\nSELECT state, short_state FROM member AS M JOIN zip_code AS Z ON M.zip = Z.zip_code WHERE first_name = 'Amy' AND last_name = 'Firth';\n\n\t----- bird -----\tstudent_club",
    "1365": "\nSELECT e.expense_id, e.expense_description, e.expense_date, e.cost, e.approved, eb.budget_id\nFROM expense e\nJOIN budget eb ON e.link_to_budget = eb.budget_id\nWHERE eb.remaining = (SELECT MIN(remaining) FROM budget)\n\n\t----- bird -----\tstudent_club",
    "1366": "\nSELECT m.member_id, m.first_name, m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nWHERE a.link_to_event = (SELECT event_id FROM event WHERE event_name = 'October Meeting');\n\n\n\t----- bird -----\tstudent_club",
    "1367": "\nSELECT college FROM member GROUP BY college ORDER BY COUNT(*) DESC LIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1368": "\nSELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.phone = '809-555-3360';\n\n\n\t----- bird -----\tstudent_club",
    "1369": "\nSELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget ORDER BY amount DESC LIMIT 1)\n\n\t----- bird -----\tstudent_club",
    "1370": "\nSELECT e.expense_description, e.expense_date, e.cost, m.first_name, m.last_name\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.position = 'vice president';\n\n\n\t----- bird -----\tstudent_club",
    "1371": "\nSELECT COUNT(DISTINCT link_to_member) AS member_count\nFROM attendance\nJOIN event ON attendance.link_to_event = event.event_id\nWHERE event_name = 'Women''s Soccer';\n\n\t----- bird -----\tstudent_club",
    "1372": "\nSELECT i.date_received \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE m.first_name = 'Casey' AND m.last_name = 'Mason';\n\n\n\t----- bird -----\tstudent_club",
    "1373": "\nSELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'MD')\n\n\t----- bird -----\tstudent_club",
    "1374": "\nSELECT COUNT(*) \nFROM attendance a\nJOIN member m ON a.link_to_member = m.member_id\nWHERE m.phone = '954-555-6240';\n\n\n\t----- bird -----\tstudent_club",
    "1375": "\nSELECT m.member_id, m.first_name, m.last_name, m.email, m.position, m.t_shirt_size, m.phone\nFROM member m\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE ma.department = 'School of Applied Sciences, Technology and Education';\n\n\t----- bird -----\tstudent_club",
    "1376": "\nSELECT e.event_name, (SUM(b.spent) / b.amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'closed'\nGROUP BY e.event_name, b.amount\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1377": "\nSELECT COUNT(*) FROM member WHERE position = 'president'\n\n\t----- bird -----\tstudent_club",
    "1378": "\nSELECT MAX(spent) AS highest_budget_spend FROM budget;\n\n\t----- bird -----\tstudent_club",
    "1379": "\nSELECT COUNT(*) FROM event WHERE type = 'meeting' AND event_date LIKE '2020%';\n\n\t----- bird -----\tstudent_club",
    "1380": "\nSELECT SUM(expense.cost) AS total_spent_for_food\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nWHERE budget.category = 'food';\n\n\t----- bird -----\tstudent_club",
    "1381": "\nSELECT m.first_name, m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nGROUP BY m.member_id, m.first_name, m.last_name \nHAVING COUNT(a.link_to_event) > 7;\n\n\n\t----- bird -----\tstudent_club",
    "1382": "\nSELECT m.first_name, m.last_name \nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nJOIN attendance a ON m.member_id = a.link_to_member\nWHERE maj.major_name = 'Interior Design' AND a.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Community Theater');\n\n\n\t----- bird -----\tstudent_club",
    "1383": "\nSELECT m.first_name, m.last_name \nFROM member m \nJOIN zip_code z ON m.zip = z.zip_code \nWHERE z.city = 'Georgetown' AND z.state = 'South Carolina';\n\n\n\t----- bird -----\tstudent_club",
    "1384": "\nSELECT COUNT(*) \nFROM income i \nJOIN member m ON i.link_to_member = m.member_id \nWHERE m.first_name = 'Grant' AND m.last_name = 'Gilmour';\n\n\n\t----- bird -----\tstudent_club",
    "1385": "\nSELECT m.member_id, m.first_name, m.last_name \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE i.amount > 40;\n\n\n\t----- bird -----\tstudent_club",
    "1386": "\nSELECT SUM(expense.cost) AS total_expense\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event_name = 'Yearly Kickoff';\n\n\n\t----- bird -----\tstudent_club",
    "1387": "\nSELECT m.member_id, m.first_name, m.last_name\nFROM member m\nJOIN budget b ON m.member_id = b.link_to_member\nWHERE b.event_status = 'Yearly Kickoff' AND m.link_to_major IS NOT NULL;\n\n\t----- bird -----\tstudent_club",
    "1388": "\nSELECT m.first_name, m.last_name, i.source \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE m.link_to_major IS NOT NULL \nORDER BY i.amount DESC \nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1389": "\nSELECT event_name, event_id FROM event WHERE event_id = (SELECT link_to_event FROM budget ORDER BY spent ASC LIMIT 1)\n\n\t----- bird -----\tstudent_club",
    "1390": "\nSELECT (SUM(cost) FILTER (WHERE e.event_name = 'Yearly Kickoff') * 100.0 / SUM(cost)) AS percentage_of_cost\nFROM expense e JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id;\n\n\t----- bird -----\tstudent_club",
    "1391": "\nSELECT CAST(SUM(CASE WHEN link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Finance') THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Physics') THEN 1 ELSE 0 END) AS finance_physics_ratio\nFROM member\n\n\t----- bird -----\tstudent_club",
    "1392": "\nSELECT source, SUM(amount) AS total_amount\nFROM income\nWHERE date_received LIKE '2019-09-%'\nGROUP BY source\nORDER BY total_amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1393": "\nSELECT first_name, last_name, email \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.college = 'Student_Club' AND position = 'Secretary';\n\n\t----- bird -----\tstudent_club",
    "1394": "\nSELECT COUNT(*) AS member_count\nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE m.link_to_major IS NOT NULL AND maj.major_name = 'Physics Teaching';\n\n\n\t----- bird -----\tstudent_club",
    "1395": "\nSELECT COUNT(DISTINCT link_to_member) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event_name = 'Community Theater' AND TO_YEAR(event_date) = 2019;\n\n\n\t----- bird -----\tstudent_club",
    "1396": "\nSELECT COUNT(a.link_to_event) AS events_attended, m.major_name\nFROM attendance a\nJOIN member mb ON a.link_to_member = mb.member_id\nJOIN major m ON mb.link_to_major = m.major_id\nWHERE mb.first_name = 'Luisa' AND mb.last_name = 'Guidi'\nGROUP BY m.major_name;\n\n\n\t----- bird -----\tstudent_club",
    "1397": "\nSELECT AVG(b.spent) AS average_spent_on_food\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE e.type LIKE '%food%' OR e.notes LIKE '%food%'\nGROUP BY e.status\n\n\t----- bird -----\tstudent_club",
    "1398": "\nSELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget WHERE category = 'advertisement' ORDER BY spent DESC LIMIT 1);\n\n\n\t----- bird -----\tstudent_club",
    "1399": "\nSELECT a.link_to_event FROM attendance a JOIN member m ON a.link_to_member = m.member_id WHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND a.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women\\'s Soccer');\n\n\t----- bird -----\tstudent_club",
    "1400": "\n\nSELECT \n    (COUNT(*) FILTER (WHERE type = 'Community Service') * 100.0 / COUNT(*)) AS percentage_share\nFROM \n    event\nWHERE \n    event_name LIKE '%Student_Club%' AND \n    SUBSTR(event_date, 1, 4) = '2019';\n\n\n\t----- bird -----\tstudent_club",
    "1401": "\nSELECT e.event_name, SUM(b.spent) AS poster_cost\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.event_name = 'September Speaker'\nAND b.category = 'posters'\nGROUP BY e.event_name;\n\n\t----- bird -----\tstudent_club",
    "1402": "\nSELECT t_shirt_size, COUNT(*) AS shirt_count\nFROM member\nGROUP BY t_shirt_size\nORDER BY shirt_count DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1403": "\nSELECT e.event_name\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense exp ON b.budget_id = exp.link_to_budget\nWHERE e.status = 'closed'\nORDER BY SUM(exp.cost) - b.amount DESC\nLIMIT 1;\n\n\t----- bird -----\tstudent_club",
    "1404": "\nSELECT b.category, SUM(e.cost) AS total_expense\nFROM budget b\nJOIN expense e ON b.budget_id = e.link_to_budget\nJOIN event ev ON b.link_to_event = ev.event_id\nWHERE ev.event_name = 'October Meeting'\nGROUP BY b.category;\n\n\n\t----- bird -----\tstudent_club",
    "1405": "\nSELECT category, amount \nFROM budget \nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'April Speaker') \nORDER BY amount ASC;\n\n\n\t----- bird -----\tstudent_club",
    "1406": "\nSELECT *\nFROM budget\nWHERE category = 'Food'\nORDER BY amount DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1407": "\nSELECT event_id, category, amount\nFROM budget\nWHERE category = 'Advertising'\nORDER BY amount DESC\nLIMIT 3;\n\n\n\t----- bird -----\tstudent_club",
    "1408": "\nSELECT SUM(expense.cost) AS total_cost_spent\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nWHERE budget.category = 'Parking';\n\n\t----- bird -----\tstudent_club",
    "1409": "\nSELECT SUM(cost) AS total_expense\nFROM expense\nWHERE expense_date = '8/20/2019';\n\n\n\t----- bird -----\tstudent_club",
    "1410": "\nSELECT m.first_name, m.last_name, SUM(e.cost) AS total_cost\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE m.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY m.member_id, m.first_name, m.last_name;\n\n\n\t----- bird -----\tstudent_club",
    "1411": "\nSELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE first_name = 'Sacha' AND last_name = 'Harrison';\n\n\n\t----- bird -----\tstudent_club",
    "1412": "\nSELECT e.expense_description, m.first_name, m.last_name\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nWHERE m.t_shirt_size = 'X-Large';\n\n\n\t----- bird -----\tstudent_club",
    "1413": "\nSELECT m.zip\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost < 50;\n\n\n\t----- bird -----\tstudent_club",
    "1414": "\nSELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.first_name = 'Phillip' AND mem.last_name = 'Cullen';\n\n\t----- bird -----\tstudent_club",
    "1415": "\nSELECT position FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business')\n\n\t----- bird -----\tstudent_club",
    "1416": "\nSELECT COUNT(*) FROM member WHERE position = 'Business' AND t_shirt_size = 'Medium'\n\n\t----- bird -----\tstudent_club",
    "1417": "\nSELECT DISTINCT e.type \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE b.remaining > 30;\n\n\n\t----- bird -----\tstudent_club",
    "1418": "\nSELECT DISTINCT b.category \nFROM event AS e \nJOIN budget AS b ON e.event_id = b.link_to_event \nWHERE e.location = 'MU 215';\n\n\t----- bird -----\tstudent_club",
    "1419": "\nSELECT category FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event_date = '2020-03-24T12:00:00'\n\n\t----- bird -----\tstudent_club",
    "1420": "\nSELECT m.major_name\nFROM member mem\nJOIN major m ON mem.link_to_major = m.major_id\nWHERE mem.position = 'Vice President'\n\n\t----- bird -----\tstudent_club",
    "1421": "\nSELECT CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM member) AS percentage\nFROM member\nWHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Mathematics')\n\n\t----- bird -----\tstudent_club",
    "1422": "\nSELECT DISTINCT b.category \nFROM event AS e \nJOIN budget AS b ON e.event_id = b.link_to_event \nJOIN location l ON e.location = l.zip_code \nWHERE l.short_state = 'MU' AND l.zip_code = 215;\n\n\t----- bird -----\tstudent_club",
    "1423": "\nSELECT COUNT(*) FROM income WHERE amount = 50;\n\n\t----- bird -----\tstudent_club",
    "1424": "\nSELECT COUNT(*) AS extra_large_t_shirt_count\nFROM member\nWHERE t_shirt_size = 'Extra Large';\n\n\t----- bird -----\tstudent_club",
    "1425": "\nSELECT COUNT(*) AS major_count\nFROM major\nWHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education';\n\n\t----- bird -----\tstudent_club",
    "1426": "\nSELECT m.last_name, ma.major_name, ma.department, ma.college \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE ma.major_name = 'Environmental Engineering'\n\n\t----- bird -----\tstudent_club",
    "1427": "\nSELECT DISTINCT b.category \nFROM budget b \nJOIN event e ON b.link_to_event = e.event_id \nWHERE e.location = 'MU 215' AND e.type = 'guest speaker' AND b.spent = 0;\n\n\n\t----- bird -----\tstudent_club",
    "1428": "\nSELECT z.city, z.state \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nJOIN zip_code z ON m.zip = z.zip_code \nWHERE ma.department = 'Electrical and Computer Engineering';\n\n\n\t----- bird -----\tstudent_club",
    "1429": "\nSELECT e.event_name\nFROM event AS e\nJOIN attendance AS a ON e.event_id = a.link_to_event\nJOIN member AS m ON a.link_to_member = m.member_id\nJOIN major AS maj ON m.link_to_major = maj.major_id\nJOIN zip_code AS zc ON m.zip = zc.zip_code\nWHERE m.position = 'Vice President' AND m.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club') AND zc.city = 'Chicago' AND zc.street = '900 E. Washington St.';\n\n\n\t----- bird -----\tstudent_club",
    "1430": "\nSELECT m.last_name, m.position\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.expense_description = 'pizza' AND e.expense_date = '09/10/2019';\n\n\n\t----- bird -----\tstudent_club",
    "1431": "\nSELECT DISTINCT m.last_name \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN event e ON a.link_to_event = e.event_id \nWHERE e.type = 'women''s soccer';\n\n\n\t----- bird -----\tstudent_club",
    "1432": "\nSELECT \n    CAST(SUM(CASE WHEN i.amount = 50 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS DECIMAL(5,2))\nFROM \n    income i\nJOIN \n    member m ON i.link_to_member = m.member_id\nJOIN \n    event e ON i.link_to_member = (SELECT link_to_member FROM attendance WHERE link_to_event = e.event_id)\nJOIN \n    budget b ON e.event_id = b.link_to_event\nWHERE \n    m.t_shirt_size = 'medium' AND e.status = 'Student_Club';\n\n\n\t----- bird -----\tstudent_club",
    "1433": "\nSELECT DISTINCT state FROM zip_code WHERE city = 'PO Box'\n\n\t----- bird -----\tstudent_club",
    "1434": "\nSELECT DISTINCT z.zip_code\nFROM zip_code z\nJOIN city c ON z.city = c.city_name\nWHERE c.country = 'Puerto Rico' AND c.municipality = 'San Juan Municipio' AND z.type = 'PO Box'\n\n\t----- bird -----\tstudent_club",
    "1435": "\nSELECT event_name FROM event WHERE status = 'closed' AND type = 'game' AND event_date BETWEEN '3/15/2019' AND '3/20/2020';\n\n\n\t----- bird -----\tstudent_club",
    "1436": "\nSELECT DISTINCT a.link_to_event\nFROM attendance a\nJOIN income i ON a.link_to_member = i.link_to_member\nWHERE i.amount > 50\n\n\t----- bird -----\tstudent_club",
    "1437": "\nSELECT m.member_id, m.first_name, m.last_name, a.link_to_event \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.approved = 'true' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19';\n\n\n\t----- bird -----\tstudent_club",
    "1438": "\nSELECT m.college \nFROM member m\nJOIN major maj ON m.link_to_major = maj.major_id\nWHERE m.first_name = 'Katy' AND maj.major_id = 'rec1N0upiVLy5esTO';\n\n\n\t----- bird -----\tstudent_club",
    "1439": "\nSELECT phone FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'Business' AND college = 'College of Agriculture and Applied Sciences')\n\n\t----- bird -----\tstudent_club",
    "1440": "\nSELECT link_to_member AS email\nFROM income\nWHERE amount > 20 AND date_received BETWEEN '2019-09-10' AND '2019-11-19';\n\n\n\t----- bird -----\tstudent_club",
    "1441": "\nSELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE college = 'College of Education & Human Services' AND major_name = 'Education')\n\n\t----- bird -----\tstudent_club",
    "1442": "\nSELECT \nCAST(SUM(CASE WHEN b.remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nAS percentage_over_budget\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\n\n\t----- bird -----\tstudent_club",
    "1443": "\nSELECT event_id, location, status \nFROM event \nWHERE event_date BETWEEN '2019-11-01' AND '2020-03-31';\n\n\n\t----- bird -----\tstudent_club",
    "1444": "\nSELECT expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget \nFROM expense \nWHERE cost > 50;\n\n\n\t----- bird -----\tstudent_club",
    "1445": "\nSELECT first_name, last_name FROM member WHERE t_shirt_size = 'extra large'\n\n\t----- bird -----\tstudent_club",
    "1446": "\nSELECT \nCAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)\nFROM zip_code\n\n\t----- bird -----\tstudent_club",
    "1447": "\nSELECT e.event_name, e.location \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE b.remaining > 0;\n\n\n\t----- bird -----\tstudent_club",
    "1448": "\nSELECT e.event_name, e.event_date \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nJOIN expense exp ON b.budget_id = exp.link_to_budget \nWHERE exp.expense_description LIKE '%pizza%' AND exp.cost > 50 AND exp.cost < 100;\n\n\n\t----- bird -----\tstudent_club",
    "1449": "\nSELECT m.first_name, m.last_name, maj.major_name \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nJOIN major maj ON m.link_to_major = maj.major_id \nWHERE e.cost > 100;\n\n\n\t----- bird -----\tstudent_club",
    "1450": "\nSELECT z.city, z.country\nFROM event e\nJOIN income i ON e.event_id = SUBSTRING_INDEX(SUBSTRING_INDEX(i.link_to_member, '-', -1), '-', 1)\nGROUP BY e.event_id\nHAVING COUNT(i.income_id) > 40\n\n\t----- bird -----\tstudent_club",
    "1451": "\nSELECT m.first_name, m.last_name, SUM(e.cost) AS total_expense\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(DISTINCT e.link_to_event) > 1\nORDER BY total_expense DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1452": "\nSELECT AVG(cost) AS average_amount_paid\nFROM expense e\nJOIN member m ON e.link_to_member = m.member_id\nJOIN major ma ON m.link_to_major = ma.major_id\nWHERE m.position != 'member'\nGROUP BY ma.major_name;\n\n\t----- bird -----\tstudent_club",
    "1453": "\nSELECT event_name FROM event WHERE event_id IN (\n    SELECT link_to_event FROM expense WHERE expense_description LIKE '%parking%' AND cost < (\n        SELECT AVG(cost) FROM expense WHERE expense_description LIKE '%parking%'\n    )\n)\n\n\n\t----- bird -----\tstudent_club",
    "1454": "\nSELECT \n    SUM(CASE WHEN e.type = 'game' THEN b.cost ELSE 0 END) * 100 / SUM(b.cost) AS game_event_percentage\nFROM \n    event e\nJOIN \n    budget b ON e.event_id = b.link_to_event;\n\n\n\t----- bird -----\tstudent_club",
    "1455": "\nSELECT link_to_event, MAX(remaining)\nFROM budget\nWHERE category IN ('water', 'chips', 'cookies')\nGROUP BY link_to_event\nORDER BY remaining DESC\nLIMIT 1;\n\n\n\t----- bird -----\tstudent_club",
    "1456": "\nSELECT m.first_name, m.last_name\nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nGROUP BY m.member_id, m.first_name, m.last_name\nORDER BY SUM(e.cost) DESC\nLIMIT 5;\n\n\n\t----- bird -----\tstudent_club",
    "1457": "\nSELECT m.first_name, m.last_name, m.phone \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.cost > (SELECT AVG(cost) FROM expense)\n\n\n\t----- bird -----\tstudent_club",
    "1458": "\nSELECT (SUM(CASE WHEN state = 'ME' THEN 1 ELSE 0 END) / COUNT(*)) - (SUM(CASE WHEN state = 'VT' THEN 1 ELSE 0 END) / COUNT(*)) AS percentage_difference\nFROM member\nJOIN zip_code ON member.zip = zip_code.zip_code\n\n\t----- bird -----\tstudent_club",
    "1459": "\nSELECT major.major_name, major.department\nFROM member\nJOIN major ON member.link_to_major = major.major_id\nWHERE member.first_name = 'Garrett' AND member.last_name = 'Gerke';\n\n\t----- bird -----\tstudent_club",
    "1460": "\nSELECT m.first_name, m.last_name, e.expense_description, e.cost \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE e.expense_description IN ('water', 'veggie tray', 'supplies');\n\n\n\t----- bird -----\tstudent_club",
    "1461": "\nSELECT last_name, phone \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major_name = 'Elementary Education';\n\n\n\t----- bird -----\tstudent_club",
    "1462": "\nSELECT category, amount \nFROM budget \nWHERE link_to_event = (SELECT event_id FROM event WHERE event_name = 'January Speaker');\n\n\n\t----- bird -----\tstudent_club",
    "1463": "\nSELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'food');\n\n\n\t----- bird -----\tstudent_club",
    "1464": "\nSELECT m.first_name, m.last_name, i.amount \nFROM member m \nJOIN income i ON m.member_id = i.link_to_member \nWHERE i.date_received = '9/9/2019';\n\n\n\t----- bird -----\tstudent_club",
    "1465": "\nSELECT b.category\nFROM budget b\nJOIN expense e ON b.link_to_event = e.link_to_budget\nWHERE e.expense_description = 'Posters'\n\n\t----- bird -----\tstudent_club",
    "1466": "\nSELECT m.first_name, m.last_name, ma.college \nFROM member m \nJOIN major ma ON m.link_to_major = ma.major_id \nWHERE m.position = 'Secretary';\n\n\n\t----- bird -----\tstudent_club",
    "1467": "\nSELECT e.event_name, SUM(b.spent) AS total_spent\nFROM budget b\nJOIN event e ON b.link_to_event = e.event_id\nWHERE b.category = 'Speaker Gift'\nGROUP BY e.event_name\n\n\t----- bird -----\tstudent_club",
    "1468": "\nSELECT city, county, state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Garrett' AND last_name = 'Girke';\n\n\t----- bird -----\tstudent_club",
    "1469": "\nSELECT m.first_name, m.last_name, m.position \nFROM member m \nJOIN zip_code z ON m.zip = z.zip_code \nWHERE z.city = 'Lincolnton' AND z.state = 'NC' AND z.zip_code = 28092;\n\n\n\t----- bird -----\tstudent_club",
    "1470": "\nSELECT COUNT(*)\nFROM gasstations\nWHERE Country = 'CZE' AND Segment LIKE '%Premium%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1471": "\nSELECT \n(SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK') AS Ratio\n\n\t----- bird -----\tdebit_card_specializing",
    "1472": "\nSELECT c.CustomerID, c.Segment\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE ym.Date LIKE '2012%' AND c.Country = 'LAM'\nGROUP BY c.CustomerID, c.Segment\nORDER BY SUM(ym.Consumption) ASC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1473": "\nSELECT AVG(Consumption) AS AverageMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME');\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1474": "\nSELECT c.CustomerID, c.Segment, SUM(y.Consumption) AS TotalConsumption\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Currency = 'CZK' AND EXTRACT(YEAR FROM t.Date) = 2011\nGROUP BY c.CustomerID, c.Segment\nORDER BY TotalConsumption DESC;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1475": "\nSELECT COUNT(DISTINCT c.CustomerID)\nFROM customers c\nJOIN yearmonth ym ON c.CustomerID = ym.CustomerID\nWHERE c.Segment = 'KAM' AND ym.Date LIKE '2012%' AND ym.Consumption < 30000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1476": "\nSELECT \n    SUM(CASE WHEN ym.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - \n    SUM(CASE WHEN ym.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM \n    yearmonth ym\nWHERE \n    ym.Date LIKE '2012-%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1477": "\nSELECT YEAR(t.Date) AS Year, SUM(y.Consumption) AS TotalConsumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID AND DATE_FORMAT(t.Date, '%Y-%m') = y.Date\nWHERE t.Currency = 'EUR'\nGROUP BY YEAR(t.Date)\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1478": "\nSELECT Segment FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID GROUP BY Segment ORDER BY SUM(Consumption) ASC LIMIT 1 \n\t----- bird -----\tdebit_card_specializing",
    "1479": "\nSELECT YEAR(Date) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE Currency = 'CZK'\nGROUP BY Year\nORDER BY TotalConsumption DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1480": "\nSELECT DATE_TRUNC('month', Date::timestamp) AS PeakMonth, MAX(Consumption) AS MaxConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE Segment = 'SME' AND EXTRACT(YEAR FROM Date) = 2013\nGROUP BY PeakMonth\nORDER BY MaxConsumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1481": "\n\nSELECT \n    (LAM_avg - LAM_KAM_avg) AS LAM_LAMKAM_diff,\n    (KAM_avg - KAM_SME_avg) AS KAM_KAMSME_diff,\n    (LAM_KAM_avg - LAM_SME_avg) AS LAMKAM_LAMdiff\nFROM \n    (SELECT \n        AVG(Consumption) AS SME_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment = 'SME' AND Date LIKE '2013%') SME_avg,\n    (SELECT \n        AVG(Consumption) AS LAM_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment = 'LAM' AND Date LIKE '2013%') LAM_avg,\n    (SELECT \n        AVG(Consumption) AS KAM_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment = 'KAM' AND Date LIKE '2013%') KAM_avg,\n    (SELECT \n        AVG(Consumption) AS LAM_KAM_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment IN ('LAM', 'KAM') AND Date LIKE '2013%') LAM_KAM_avg,\n    (SELECT \n        AVG(Consumption) AS KAM_SME_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment IN ('KAM', 'SME') AND Date LIKE '2013%') KAM_SME_avg,\n    (SELECT \n        AVG(Consumption) AS LAM_SME_avg \n     FROM \n        yearmonth \n     JOIN \n        customers ON yearmonth.CustomerID = customers.CustomerID \n     WHERE \n        Currency = 'CZK' AND Segment IN ('LAM', 'SME') AND Date LIKE '2013%') LAM_SME_avg\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1482": "\n\nWITH cte AS (\n    SELECT \n        c.Segment,\n        SUM(y1.Consumption) AS 2012_Consumption,\n        SUM(y2.Consumption) AS 2013_Consumption\n    FROM \n        customers c\n    JOIN \n        yearmonth y1 ON c.CustomerID = y1.CustomerID AND LEFT(y1.Date, 4) = '2012'\n    JOIN \n        yearmonth y2 ON c.CustomerID = y2.CustomerID AND LEFT(y2.Date, 4) = '2013'\n    WHERE \n        c.Segment IN ('SME', 'LAM', 'KAM') AND y1.Consumption IS NOT NULL AND y2.Consumption IS NOT NULL\n    GROUP BY \n        c.Segment\n),\ncte_increase AS (\n    SELECT \n        Segment,\n        (2013_Consumption - 2012_Consumption) / 2012_Consumption * 100 AS Increase_Percentage\n    FROM \n        cte\n)\nSELECT \n    Segment, \n    MAX(Increase_Percentage) OVER () AS Max_Increase,\n    MIN(Increase_Percentage) OVER () AS Min_Increase\nFROM \n    cte_increase\nWHERE \n    Segment IN ('SME', 'LAM', 'KAM')\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1483": "\nSELECT SUM(t.Amount) AS TotalConsumption\nFROM transactions_1k t\nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID AND t.Date = ym.Date\nWHERE t.CustomerID = 6 AND t.Date BETWEEN '2013-08-01' AND '2013-11-30';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1484": "\nSELECT SUM(CASE WHEN Segment = 'discount' THEN 1 ELSE 0 END) AS DiscountGasStations\nFROM gasstations\nWHERE Country = 'Czech Republic'\nGROUP BY Country\nUNION ALL\nSELECT SUM(CASE WHEN Segment = 'discount' THEN 1 ELSE 0 END) AS DiscountGasStations\nFROM gasstations\nWHERE Country = 'Slovakia'\nGROUP BY Country\n\n\t----- bird -----\tdebit_card_specializing",
    "1485": "\nSELECT (SUM(CASE WHEN Date LIKE '2013-04-%' THEN Consumption ELSE 0 END) AS consumption_april_2013)\nFROM yearmonth\nWHERE CustomerID = 7\n-(SUM(CASE WHEN Date LIKE '2013-04-%' THEN Consumption ELSE 0 END) AS consumption_april_2013)\nFROM yearmonth\nWHERE CustomerID = 5\n) AS difference;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1486": "\n\nSELECT COUNT(*) - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Difference\nFROM customers \nWHERE Segment = 'SME' AND Currency = 'CZK'\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1487": "\nSELECT c.CustomerID, c.Segment, y.Consumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'LAM' AND c.Currency = 'Euro' AND y.Date LIKE '2013-10-%'\nORDER BY y.Consumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1488": "\nSELECT c.CustomerID, c.Segment, y.Consumption \nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'KAM'\nORDER BY y.Consumption DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1489": "\nSELECT SUM(y.Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'KAM' AND y.Date LIKE '2013-05-%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1490": "\nSELECT CAST(SUM(CASE WHEN T.CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'LAM') AND Y.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T.CustomerID) FROM transactions_1k T JOIN yearmonth Y ON T.CustomerID = Y.CustomerID \n\t----- bird -----\tdebit_card_specializing",
    "1491": "\nSELECT Country, COUNT(*) AS ValueForMoneyGasStations\nFROM gasstations\nWHERE Segment = 'value for money'\nGROUP BY Country\n\n\t----- bird -----\tdebit_card_specializing",
    "1492": "\n\nSELECT COUNT(CASE WHEN Currency = 'EUR' THEN CustomerID END) * 100.0 / COUNT(CustomerID) AS Percentage\nFROM customers\nWHERE Segment = 'KAM'\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1493": "\nSELECT (COUNT(*) FILTER (WHERE Consumption > 528.3) * 100.0 / COUNT(*)) AS percentage\nFROM yearmonth\nWHERE Date LIKE '2012-02-%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1494": "\nSELECT \nCAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100 AS PremiumPercentage\nFROM gasstations\nWHERE Country = 'Slovakia'\n\n\t----- bird -----\tdebit_card_specializing",
    "1495": "\nSELECT CustomerID\nFROM yearmonth\nWHERE Date LIKE '2013-09-%'\nGROUP BY CustomerID\nORDER BY SUM(Consumption) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1496": "\nSELECT c.Segment\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE ym.Date LIKE '2013-09-%'\nGROUP BY c.Segment\nORDER BY SUM(ym.Consumption) ASC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1497": "\nSELECT c.CustomerID, c.Segment, y.Date, SUM(t.Amount) AS TotalConsumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME' AND y.Date LIKE '2012-06-%'\nGROUP BY c.CustomerID, c.Segment, y.Date\nORDER BY TotalConsumption ASC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1498": "\nSELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE Date LIKE '2012-%';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1499": "\nSELECT ym.Date, MAX(ym.Consumption) AS MaxConsumption\nFROM yearmonth ym\nJOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE c.Currency = 'Euro'\nGROUP BY ym.Date\nSQL_END\n\n\t----- bird -----\tdebit_card_specializing",
    "1500": "\nSELECT p.Description\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nWHERE DATE_FORMAT(t.Date, '%Y-%m') = '2013-09';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1501": "\nSELECT DISTINCT g.Country\nFROM gasstations g\nJOIN transactions_1k t ON g.GasStationID = t.GasStationID\nWHERE t.Date BETWEEN '2013-06-01' AND '2013-06-30';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1502": "\nSELECT DISTINCT g.ChainID \nFROM gasstations g \nJOIN transactions_1k t ON g.GasStationID = t.GasStationID \nWHERE t.Price IS NOT NULL AND (t.Currency = 'EUR' OR t.Currency = 'EURO');\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1503": "\nSELECT p.Description \nFROM transactions_1k t \nJOIN products p ON t.ProductID = p.ProductID \nWHERE t.GasStationID IN (SELECT GasStationID FROM gasstations WHERE Segment = 'Euro')\nSQL_END\n\n\t----- bird -----\tdebit_card_specializing",
    "1504": "\nSELECT AVG(Price * Amount) AS AverageTotalPrice\nFROM transactions_1k\nWHERE Date >= '2012-01-01' AND Date < '2012-02-01';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1505": "\nSELECT COUNT(DISTINCT y.CustomerID)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'euro' AND y.Consumption > 1000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1506": "\nSELECT p.Description \nFROM transactions_1k t \nJOIN gasstations g ON t.GasStationID = g.GasStationID \nJOIN products p ON t.ProductID = p.ProductID \nWHERE g.Country = 'Czech Republic';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1507": "\nSELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1508": "\nSELECT COUNT(*)\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'Czech Republic' AND t.Price > 1000;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1509": "\nSELECT COUNT(*)\nFROM transactions_1k\nJOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID\nWHERE gasstations.Country = 'Czech Republic' AND transactions_1k.Date > '2012-01-01';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1510": "\nSELECT AVG(t.Price * t.Amount) AS AverageTotalPrice\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'Czech Republic'\n\n\t----- bird -----\tdebit_card_specializing",
    "1511": "\nSELECT AVG(t.Price) AS AverageTotalPrice\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1512": "\nSELECT c.CustomerID, c.Segment, c.Currency, t.Date, SUM(t.Amount * t.Price) AS TotalPaid\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-25'\nGROUP BY c.CustomerID\nORDER BY TotalPaid DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1513": "\nSELECT Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE Date('2012-08-25') BETWEEN Date(t.Date) AND Date(t.Date) - 1\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1514": "\nSELECT c.Currency \nFROM transactions_1k t \nJOIN customers c ON t.CustomerID = c.CustomerID \nWHERE t.Time = '16:25:00' AND DATE(t.Date) = '2012-08-24';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1515": "\nSELECT c.Segment\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'\n\n\t----- bird -----\tdebit_card_specializing",
    "1516": "\nSELECT COUNT(*)\nFROM transactions_1k\nWHERE Date = '2012-08-26'\nAND Time LIKE '%AM%'\nAND Currency = 'EUR';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1517": "\nSELECT Segment\nFROM customers\nWHERE CustomerID = (\n    SELECT MIN(CustomerID)\n    FROM customers\n);\n\n\t----- bird -----\tdebit_card_specializing",
    "1518": "\nSELECT g.Country \nFROM transactions_1k t \nJOIN gasstations g ON t.GasStationID = g.GasStationID \nWHERE t.Date = '2012-08-24' AND t.Time = '12:42:00';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1519": "\nSELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1520": "\nSELECT t.Date, t.Amount \nFROM transactions_1k t \nJOIN customers c ON t.CustomerID = c.CustomerID \nWHERE t.Date = '2012-08-24' AND t.Price * t.Amount = 124.05 \nUNION ALL \nSELECT t.Date, t.Amount \nFROM transactions_1k t \nJOIN customers c ON t.CustomerID = c.CustomerID \nJOIN yearmonth ym ON t.CustomerID = ym.CustomerID \nWHERE strftime('%Y-%m', t.Date) = '2012-01' AND ym.Consumption IS NOT NULL;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1521": "\nSELECT COUNT(*)\nFROM transactions_1k\nWHERE Date = '2012-08-26'\nAND Time >= '08:00' AND Time < '09:00'\nAND GasStationID IN (\n    SELECT GasStationID\n    FROM gasstations\n    WHERE Country = 'CZE'\n)\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1522": "\nSELECT Currency \nFROM customers \nWHERE CustomerID = (\n    SELECT CustomerID \n    FROM transactions_1k \n    WHERE Date >= '2013-06-01' AND Date < '2013-07-01' \n    GROUP BY CustomerID \n    HAVING SUM(Amount * Price) = 214582.17\n);\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1523": "\nSELECT g.Country \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.CustomerID = 667467;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1524": "\nSELECT c.Segment AS Nationality\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24' AND t.Amount * t.Price = 548.4\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1525": "\nSELECT COUNT(CASE WHEN Currency = 'EUR' THEN CustomerID END) * 100.0 / COUNT(*) AS Percentage\nFROM customers\nJOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID\nWHERE Date(transactions_1k.Date) = '2012-08-25';\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1526": "\nSELECT (y2.Consumption - y1.Consumption) / y1.Consumption AS ConsumptionDecreaseRate \nFROM (\n    SELECT t.CustomerID, SUM(y.Consumption) AS Consumption \n    FROM transactions_1k t \n    JOIN yearmonth y ON t.CustomerID = y.CustomerID AND DATE_FORMAT(t.Date, '%Y-%m') = '2012-08'\n    WHERE t.Date = '2012-08-25' AND t.Amount = 634.8\n    GROUP BY t.CustomerID\n) t1 \nJOIN (\n    SELECT y.CustomerID, SUM(y.Consumption) AS Consumption \n    FROM yearmonth y \n    WHERE YEAR(y.Date) = 2012 OR YEAR(y.Date) = 2013\n    GROUP BY y.CustomerID\n) y1 ON t1.CustomerID = y1.CustomerID \nJOIN (\n    SELECT y.CustomerID, SUM(y.Consumption) AS Consumption \n    FROM yearmonth y \n    WHERE DATE_FORMAT(y.Date, '%Y-%m') = '2013-08'\n    GROUP BY y.CustomerID\n) y2 ON t1.CustomerID = y2.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1527": "\nSELECT g.GasStationID, SUM(t.Amount * t.Price) AS TotalRevenue\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nGROUP BY g.GasStationID\nORDER BY TotalRevenue DESC\nLIMIT 1;\n\n\t----- bird -----\tdebit_card_specializing",
    "1528": "\nSELECT \n    100 * SUM(CASE WHEN p.Description = 'premium' THEN 1 ELSE 0 END) / COUNT(*) AS percentage\nFROM \n    transactions_1k t\nJOIN \n    products p ON t.ProductID = p.ProductID\nJOIN \n    gasstations g ON t.GasStationID = g.GasStationID\nWHERE \n    g.Country = 'SVK' AND g.Segment IN (SELECT Segment FROM customers WHERE CustomerID = t.CustomerID)\n\n\t----- bird -----\tdebit_card_specializing",
    "1529": "\nSELECT SUM(t.Price * t.Amount) AS TotalSpent, \n       SUM(CASE WHEN EXTRACT(MONTH FROM t.Date) = 1 AND EXTRACT(YEAR FROM t.Date) = 2012 THEN t.Price * t.Amount ELSE 0 END) AS Jan2012Spent\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.CustomerID = 38508;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1530": "\nSELECT p.Description AS FullName\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nGROUP BY p.Description\nORDER BY SUM(t.Amount) DESC\nLIMIT 5;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1531": "\nSELECT c.CustomerID, c.Segment, c.Currency, AVG(t.Price) AS AvgPricePerItem, y.Consumption\nFROM customers c\nJOIN transactions_1k t ON c.CustomerID = t.CustomerID\nLEFT JOIN yearmonth y ON c.CustomerID = y.CustomerID\nGROUP BY c.CustomerID, c.Segment, c.Currency, y.Consumption\nORDER BY SUM(t.Amount * t.Price) DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1532": "\nSELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.ProductID = 2\nORDER BY t.Price DESC\nLIMIT 1;\n\n\n\t----- bird -----\tdebit_card_specializing",
    "1533": "\nSELECT y.Date, SUM(y.Consumption) AS Total_Consumption\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE t.Price > 29.0 AND p.ProductID = 5 AND y.Date LIKE '2012-08-%'\nGROUP BY t.CustomerID;\n\n\n\t----- bird -----\tdebit_card_specializing"
}